{
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _stroge = _interopRequireDefault(require(\"./routers/stroge.router\"));\n\nvar express = require('express');\n\nvar http = require('http');\n\nvar bodyParser = require('body-parser');\n\nvar cors = require('cors');\n\nvar app = express();\nvar server = http.createServer(app);\n\nvar dotenv = require('dotenv');\n\nvar multer = require('multer');\n\nvar upload = multer({\n  dest: 'uploads/'\n});\ndotenv.config();\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json()); // app.use(upload.none()); \n// app.use(express.static('public'));\n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', \"*\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\napp.use(cors('*')); // app.post('/products',upload.any(), function(req,res,next){\n//   console.log(fs.readFileSync(req.files[0].buffer))\n// })\n\napp.use('/', upload.any(), _stroge.default);\nserver.listen(process.env.PORT);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiaHR0cCIsImJvZHlQYXJzZXIiLCJjb3JzIiwiYXBwIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwiZG90ZW52IiwibXVsdGVyIiwidXBsb2FkIiwiZGVzdCIsImNvbmZpZyIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2V0SGVhZGVyIiwiYW55Iiwicm91dGVycyIsImxpc3RlbiIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQVlBOztBQVpBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUksR0FBRyxHQUFHTCxPQUFPLEVBQW5CO0FBQ0EsSUFBTU0sTUFBTSxHQUFHSixJQUFJLENBQUNLLFlBQUwsQ0FBa0JGLEdBQWxCLENBQWY7O0FBQ0EsSUFBTUcsTUFBTSxHQUFHUCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1TLE1BQU0sR0FBR0QsTUFBTSxDQUFDO0FBQUVFLEVBQUFBLElBQUksRUFBRTtBQUFSLENBQUQsQ0FBckI7QUFLQUgsTUFBTSxDQUFDSSxNQUFQO0FBQ0FQLEdBQUcsQ0FBQ1EsR0FBSixDQUFRVixVQUFVLENBQUNXLFVBQVgsQ0FBc0I7QUFDNUJDLEVBQUFBLFFBQVEsRUFBRTtBQURrQixDQUF0QixDQUFSO0FBR0FWLEdBQUcsQ0FBQ1EsR0FBSixDQUFRVixVQUFVLENBQUNhLElBQVgsRUFBUixFLENBRUE7QUFDQTs7QUFFQVgsR0FBRyxDQUFDUSxHQUFKLENBQVEsVUFBVUksR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUNoQ0QsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsNkJBQWQsRUFBNkMsR0FBN0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsOEJBQWQsRUFBOEMsZ0RBQTlDO0FBQ0FELEVBQUFBLElBQUk7QUFDTCxDQUpEO0FBS0FkLEdBQUcsQ0FBQ1EsR0FBSixDQUFRVCxJQUFJLENBQUMsR0FBRCxDQUFaLEUsQ0FHQTtBQUNBO0FBQ0E7O0FBRUFDLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLEdBQVIsRUFBWUgsTUFBTSxDQUFDVyxHQUFQLEVBQVosRUFBeUJDLGVBQXpCO0FBRUFoQixNQUFNLENBQUNpQixNQUFQLENBQWNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUExQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ2QixHQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcbmNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1cGxvYWQgPSBtdWx0ZXIoeyBkZXN0OiAndXBsb2Fkcy8nIH0pO1xuXG5cblxuaW1wb3J0IHJvdXRlcnMgZnJvbSAnLi9yb3V0ZXJzL3N0cm9nZS5yb3V0ZXInXG5kb3RlbnYuY29uZmlnKClcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgZXh0ZW5kZWQ6IGZhbHNlXG59KSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG4vLyBhcHAudXNlKHVwbG9hZC5ub25lKCkpOyBcbi8vIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcblxuYXBwLnVzZShmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgXCIqXCIpO1xuICByZXMuc2V0SGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLCBcIk9yaWdpbiwgWC1SZXF1ZXN0ZWQtV2l0aCwgQ29udGVudC1UeXBlLCBBY2NlcHRcIilcbiAgbmV4dCgpO1xufSk7XG5hcHAudXNlKGNvcnMoJyonKSk7XG5cblxuLy8gYXBwLnBvc3QoJy9wcm9kdWN0cycsdXBsb2FkLmFueSgpLCBmdW5jdGlvbihyZXEscmVzLG5leHQpe1xuLy8gICBjb25zb2xlLmxvZyhmcy5yZWFkRmlsZVN5bmMocmVxLmZpbGVzWzBdLmJ1ZmZlcikpXG4vLyB9KVxuXG5hcHAudXNlKCcvJyx1cGxvYWQuYW55KCkscm91dGVycylcblxuc2VydmVyLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUKTtcbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "http",
        "bodyParser",
        "cors",
        "app",
        "server",
        "createServer",
        "dotenv",
        "multer",
        "upload",
        "dest",
        "config",
        "use",
        "urlencoded",
        "extended",
        "json",
        "req",
        "res",
        "next",
        "setHeader",
        "any",
        "routers",
        "listen",
        "process",
        "env",
        "PORT",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAYA;;AAZA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,GAAG,GAAGL,OAAO,EAAnB;AACA,IAAMM,MAAM,GAAGJ,IAAI,CAACK,YAAL,CAAkBF,GAAlB,CAAf;;AACA,IAAMG,MAAM,GAAGP,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGD,MAAM,CAAC;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAD,CAArB;AAKAH,MAAM,CAACI,MAAP;AACAP,GAAG,CAACQ,GAAJ,CAAQV,UAAU,CAACW,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAGAV,GAAG,CAACQ,GAAJ,CAAQV,UAAU,CAACa,IAAX,EAAR,E,CAEA;AACA;;AAEAX,GAAG,CAACQ,GAAJ,CAAQ,UAAUI,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,gDAA9C;AACAD,EAAAA,IAAI;AACL,CAJD;AAKAd,GAAG,CAACQ,GAAJ,CAAQT,IAAI,CAAC,GAAD,CAAZ,E,CAGA;AACA;AACA;;AAEAC,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAYH,MAAM,CAACW,GAAP,EAAZ,EAAyBC,eAAzB;AAEAhB,MAAM,CAACiB,MAAP,CAAcC,OAAO,CAACC,GAAR,CAAYC,IAA1B;AACAC,MAAM,CAACC,OAAP,GAAiBvB,GAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourcesContent": [
        "const express = require('express')\nconst http = require('http')\nconst bodyParser = require('body-parser')\nconst cors = require('cors')\nconst app = express();\nconst server = http.createServer(app);\nconst dotenv = require('dotenv');\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n\n\n\nimport routers from './routers/stroge.router'\ndotenv.config()\napp.use(bodyParser.urlencoded({\n  extended: false\n}))\napp.use(bodyParser.json());\n\n// app.use(upload.none()); \n// app.use(express.static('public'));\n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', \"*\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\n  next();\n});\napp.use(cors('*'));\n\n\n// app.post('/products',upload.any(), function(req,res,next){\n//   console.log(fs.readFileSync(req.files[0].buffer))\n// })\n\napp.use('/',upload.any(),routers)\n\nserver.listen(process.env.PORT);\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1581965703929
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/stroge.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/stroge.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/stroge.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/stroge.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
        "sourceFileName": "stroge.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _product = _interopRequireDefault(require(\"./product.router\"));\n\nvar _user = _interopRequireDefault(require(\"./user.router\"));\n\nvar _provider = _interopRequireDefault(require(\"./provider.router\"));\n\nvar _shop = _interopRequireDefault(require(\"./shop.router\"));\n\nvar _statistics = _interopRequireDefault(require(\"./statistics.router\"));\n\nvar routers = _express.default.Router();\n\nrouters.use('/products', _product.default);\nrouters.use('/signin', _user.default);\nrouters.use('/providers', _provider.default);\nrouters.use('/shops', _shop.default);\nrouters.use('/statistics', _statistics.default);\nmodule.exports = routers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cm9nZS5yb3V0ZXIuanMiXSwibmFtZXMiOlsicm91dGVycyIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJwcm9kdWN0Um91dGVyIiwidXNlclJvdXRlciIsInBvdmlkZXJSb3V0ZXIiLCJzaG9wUm91dGVyIiwic3RhdGlzdGljIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLE9BQU8sR0FBR0MsaUJBQVFDLE1BQVIsRUFBaEI7O0FBQ0FGLE9BQU8sQ0FBQ0csR0FBUixDQUFZLFdBQVosRUFBd0JDLGdCQUF4QjtBQUNBSixPQUFPLENBQUNHLEdBQVIsQ0FBWSxTQUFaLEVBQXVCRSxhQUF2QjtBQUNBTCxPQUFPLENBQUNHLEdBQVIsQ0FBWSxZQUFaLEVBQTBCRyxpQkFBMUI7QUFDQU4sT0FBTyxDQUFDRyxHQUFSLENBQVksUUFBWixFQUFxQkksYUFBckI7QUFDQVAsT0FBTyxDQUFDRyxHQUFSLENBQVksYUFBWixFQUEyQkssbUJBQTNCO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsT0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvaHVuYW4vRGVza3RvcC9JbnN0aWdhdGUvV2ViLVN0b3JhZ2Uvd2ViLXN0b3JhZ2UvYmFja2VuZC9Ob2RlL3JvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHByb2R1Y3RSb3V0ZXIgZnJvbSAnLi9wcm9kdWN0LnJvdXRlcidcbmltcG9ydCB1c2VyUm91dGVyIGZyb20gJy4vdXNlci5yb3V0ZXInXG5pbXBvcnQgcG92aWRlclJvdXRlciBmcm9tICcuL3Byb3ZpZGVyLnJvdXRlcidcbmltcG9ydCBzaG9wUm91dGVyIGZyb20gJy4vc2hvcC5yb3V0ZXInXG5pbXBvcnQgc3RhdGlzdGljIGZyb20gJy4vc3RhdGlzdGljcy5yb3V0ZXInXG5cbmNvbnN0IHJvdXRlcnMgPSBleHByZXNzLlJvdXRlcigpO1xucm91dGVycy51c2UoJy9wcm9kdWN0cycscHJvZHVjdFJvdXRlcilcbnJvdXRlcnMudXNlKCcvc2lnbmluJywgdXNlclJvdXRlcilcbnJvdXRlcnMudXNlKCcvcHJvdmlkZXJzJywgcG92aWRlclJvdXRlcilcbnJvdXRlcnMudXNlKCcvc2hvcHMnLHNob3BSb3V0ZXIpXG5yb3V0ZXJzLnVzZSgnL3N0YXRpc3RpY3MnLCBzdGF0aXN0aWMpXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcnMiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "stroge.router.js"
      ],
      "names": [
        "routers",
        "express",
        "Router",
        "use",
        "productRouter",
        "userRouter",
        "poviderRouter",
        "shopRouter",
        "statistic",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,OAAO,GAAGC,iBAAQC,MAAR,EAAhB;;AACAF,OAAO,CAACG,GAAR,CAAY,WAAZ,EAAwBC,gBAAxB;AACAJ,OAAO,CAACG,GAAR,CAAY,SAAZ,EAAuBE,aAAvB;AACAL,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BG,iBAA1B;AACAN,OAAO,CAACG,GAAR,CAAY,QAAZ,EAAqBI,aAArB;AACAP,OAAO,CAACG,GAAR,CAAY,aAAZ,EAA2BK,mBAA3B;AACAC,MAAM,CAACC,OAAP,GAAiBV,OAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "sourcesContent": [
        "import express from 'express'\nimport productRouter from './product.router'\nimport userRouter from './user.router'\nimport poviderRouter from './provider.router'\nimport shopRouter from './shop.router'\nimport statistic from './statistics.router'\n\nconst routers = express.Router();\nrouters.use('/products',productRouter)\nrouters.use('/signin', userRouter)\nrouters.use('/providers', poviderRouter)\nrouters.use('/shops',shopRouter)\nrouters.use('/statistics', statistic)\nmodule.exports = routers"
      ]
    },
    "sourceType": "script",
    "mtime": 1583355276915
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/product.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/product.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/product.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/product.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
        "sourceFileName": "product.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _product = _interopRequireDefault(require(\"../controlers/product.controler\"));\n\nvar _expressValidator = require(\"express-validator\");\n\nvar productsRouter = _express.default.Router();\n\nproductsRouter.route('/').post([(0, _expressValidator.check)('productName').matches(/^[A-Z]{1}[a-z]{1,}$/).withMessage('Product names first simbol should be upper'), (0, _expressValidator.check)('productPrice').matches(/^[1-9]{1}[0-9]{1,}$/).withMessage('Product price should be only numbers'), (0, _expressValidator.check)('productDate').isISO8601(\"MM-DD-YYYY\").withMessage('Date should be MM-DD-YYYY format '), (0, _expressValidator.check)('expiration').isISO8601(\"MM-DD-YYYY\").withMessage('The Expiration date should be MM-DD-YYYY format ')], _product.default.addProducts).delete(_product.default.deleteProduct);\nproductsRouter.route('/').get([(0, _expressValidator.check)('productId').isNumeric().withMessage(\"Product Id should be Alpha\")], _product.default.getProducts);\nmodule.exports = productsRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3Qucm91dGVyLmpzIl0sIm5hbWVzIjpbInByb2R1Y3RzUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInJvdXRlIiwicG9zdCIsIm1hdGNoZXMiLCJ3aXRoTWVzc2FnZSIsImlzSVNPODYwMSIsImNvbnRyb2xsZXIiLCJhZGRQcm9kdWN0cyIsImRlbGV0ZSIsImRlbGV0ZVByb2R1Y3QiLCJnZXQiLCJpc051bWVyaWMiLCJnZXRQcm9kdWN0cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFGQSxJQUFNQSxjQUFjLEdBQUdDLGlCQUFRQyxNQUFSLEVBQXZCOztBQUlBRixjQUFjLENBQUNHLEtBQWYsQ0FBcUIsR0FBckIsRUFDS0MsSUFETCxDQUNVLENBQUMsNkJBQU0sYUFBTixFQUFxQkMsT0FBckIsQ0FBNkIscUJBQTdCLEVBQW9EQyxXQUFwRCxDQUFnRSw0Q0FBaEUsQ0FBRCxFQUNFLDZCQUFNLGNBQU4sRUFBc0JELE9BQXRCLENBQThCLHFCQUE5QixFQUFxREMsV0FBckQsQ0FBaUUsc0NBQWpFLENBREYsRUFFRSw2QkFBTSxhQUFOLEVBQXFCQyxTQUFyQixDQUErQixZQUEvQixFQUE2Q0QsV0FBN0MsQ0FBeUQsbUNBQXpELENBRkYsRUFHRSw2QkFBTSxZQUFOLEVBQW9CQyxTQUFwQixDQUE4QixZQUE5QixFQUE0Q0QsV0FBNUMsQ0FBd0Qsa0RBQXhELENBSEYsQ0FEVixFQU1RRSxpQkFBV0MsV0FObkIsRUFPU0MsTUFQVCxDQU9nQkYsaUJBQVdHLGFBUDNCO0FBUUFYLGNBQWMsQ0FBQ0csS0FBZixDQUFxQixHQUFyQixFQUNLUyxHQURMLENBQ1MsQ0FBQyw2QkFBTSxXQUFOLEVBQW1CQyxTQUFuQixHQUErQlAsV0FBL0IsQ0FBMkMsNEJBQTNDLENBQUQsQ0FEVCxFQUNvRkUsaUJBQVdNLFdBRC9GO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLGNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2h1bmFuL0Rlc2t0b3AvSW5zdGlnYXRlL1dlYi1TdG9yYWdlL3dlYi1zdG9yYWdlL2JhY2tlbmQvTm9kZS9yb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmNvbnN0IHByb2R1Y3RzUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmltcG9ydCBjb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xlcnMvcHJvZHVjdC5jb250cm9sZXInO1xuaW1wb3J0IHtjaGVja30gZnJvbSAnZXhwcmVzcy12YWxpZGF0b3InO1xuXG5wcm9kdWN0c1JvdXRlci5yb3V0ZSgnLycpXG4gICAgLnBvc3QoW2NoZWNrKCdwcm9kdWN0TmFtZScpLm1hdGNoZXMoL15bQS1aXXsxfVthLXpdezEsfSQvKS53aXRoTWVzc2FnZSgnUHJvZHVjdCBuYW1lcyBmaXJzdCBzaW1ib2wgc2hvdWxkIGJlIHVwcGVyJyksXG4gICAgICAgICAgICBjaGVjaygncHJvZHVjdFByaWNlJykubWF0Y2hlcygvXlsxLTldezF9WzAtOV17MSx9JC8pLndpdGhNZXNzYWdlKCdQcm9kdWN0IHByaWNlIHNob3VsZCBiZSBvbmx5IG51bWJlcnMnKSxcbiAgICAgICAgICAgIGNoZWNrKCdwcm9kdWN0RGF0ZScpLmlzSVNPODYwMShcIk1NLURELVlZWVlcIikud2l0aE1lc3NhZ2UoJ0RhdGUgc2hvdWxkIGJlIE1NLURELVlZWVkgZm9ybWF0ICcpLFxuICAgICAgICAgICAgY2hlY2soJ2V4cGlyYXRpb24nKS5pc0lTTzg2MDEoXCJNTS1ERC1ZWVlZXCIpLndpdGhNZXNzYWdlKCdUaGUgRXhwaXJhdGlvbiBkYXRlIHNob3VsZCBiZSBNTS1ERC1ZWVlZIGZvcm1hdCAnKVxuICAgICAgICBdLFxuICAgICAgICBjb250cm9sbGVyLmFkZFByb2R1Y3RzKVxuICAgICAgICAuZGVsZXRlKGNvbnRyb2xsZXIuZGVsZXRlUHJvZHVjdClcbnByb2R1Y3RzUm91dGVyLnJvdXRlKCcvJylcbiAgICAuZ2V0KFtjaGVjaygncHJvZHVjdElkJykuaXNOdW1lcmljKCkud2l0aE1lc3NhZ2UoXCJQcm9kdWN0IElkIHNob3VsZCBiZSBBbHBoYVwiKV0sY29udHJvbGxlci5nZXRQcm9kdWN0cylcblxubW9kdWxlLmV4cG9ydHMgPSBwcm9kdWN0c1JvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "product.router.js"
      ],
      "names": [
        "productsRouter",
        "express",
        "Router",
        "route",
        "post",
        "matches",
        "withMessage",
        "isISO8601",
        "controller",
        "addProducts",
        "delete",
        "deleteProduct",
        "get",
        "isNumeric",
        "getProducts",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AAFA,IAAMA,cAAc,GAAGC,iBAAQC,MAAR,EAAvB;;AAIAF,cAAc,CAACG,KAAf,CAAqB,GAArB,EACKC,IADL,CACU,CAAC,6BAAM,aAAN,EAAqBC,OAArB,CAA6B,qBAA7B,EAAoDC,WAApD,CAAgE,4CAAhE,CAAD,EACE,6BAAM,cAAN,EAAsBD,OAAtB,CAA8B,qBAA9B,EAAqDC,WAArD,CAAiE,sCAAjE,CADF,EAEE,6BAAM,aAAN,EAAqBC,SAArB,CAA+B,YAA/B,EAA6CD,WAA7C,CAAyD,mCAAzD,CAFF,EAGE,6BAAM,YAAN,EAAoBC,SAApB,CAA8B,YAA9B,EAA4CD,WAA5C,CAAwD,kDAAxD,CAHF,CADV,EAMQE,iBAAWC,WANnB,EAOSC,MAPT,CAOgBF,iBAAWG,aAP3B;AAQAX,cAAc,CAACG,KAAf,CAAqB,GAArB,EACKS,GADL,CACS,CAAC,6BAAM,WAAN,EAAmBC,SAAnB,GAA+BP,WAA/B,CAA2C,4BAA3C,CAAD,CADT,EACoFE,iBAAWM,WAD/F;AAGAC,MAAM,CAACC,OAAP,GAAiBhB,cAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "sourcesContent": [
        "import express from 'express'\nconst productsRouter = express.Router();\nimport controller from '../controlers/product.controler';\nimport {check} from 'express-validator';\n\nproductsRouter.route('/')\n    .post([check('productName').matches(/^[A-Z]{1}[a-z]{1,}$/).withMessage('Product names first simbol should be upper'),\n            check('productPrice').matches(/^[1-9]{1}[0-9]{1,}$/).withMessage('Product price should be only numbers'),\n            check('productDate').isISO8601(\"MM-DD-YYYY\").withMessage('Date should be MM-DD-YYYY format '),\n            check('expiration').isISO8601(\"MM-DD-YYYY\").withMessage('The Expiration date should be MM-DD-YYYY format ')\n        ],\n        controller.addProducts)\n        .delete(controller.deleteProduct)\nproductsRouter.route('/')\n    .get([check('productId').isNumeric().withMessage(\"Product Id should be Alpha\")],controller.getProducts)\n\nmodule.exports = productsRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583351155887
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/product.controler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/product.controler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/product.controler.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/product.controler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
        "sourceFileName": "product.controler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar product = require('../models/products.model');\n\nvar log4js = require('log4js');\n\nvar dotenv = require('dotenv');\n\nvar _require = require('express-validator'),\n    validationResult = _require.validationResult;\n\nvar fs = require('fs');\n\ndotenv.config();\nvar logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.addProducts = function _callee(req, res) {\n  var err, image, productInfo, result;\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // if (isEmpty(req.body)) {\n          //     logger.error(`User registration request body is not exist`);\n          //     return res.sendStatus(400).json({\"message\":\"Bad Request\"});\n          // }    \n          err = validationResult(req);\n\n          if (err.isEmpty()) {\n            _context.next = 4;\n            break;\n          }\n\n          console.log(err);\n          return _context.abrupt(\"return\", res.status(422).json(err.errors));\n\n        case 4:\n          image = fs.readFileSync(req.files[0].path);\n          fs.unlink(req.files[0].path, function (err) {\n            if (err) {\n              console.error(err);\n              return;\n            }\n          });\n          productInfo = req.body;\n          productInfo.productImage = image;\n          _context.next = 10;\n          return _regenerator.default.awrap(product.addProduct(productInfo));\n\n        case 10:\n          result = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).json(result));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getProducts = function _callee2(req, res) {\n  var err, _result, result;\n\n  return _regenerator.default.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          err = validationResult(req.query);\n\n          if (err.isEmpty()) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(422).jsonp(err.array()));\n\n        case 3:\n          if (!(Object.keys(req.query).length !== 0)) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 6;\n          return _regenerator.default.awrap(product.getProduct(req.query));\n\n        case 6:\n          _result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(_result));\n\n        case 8:\n          _context2.next = 10;\n          return _regenerator.default.awrap(product.getProducts());\n\n        case 10:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(result));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getProduct = function _callee3(req, res) {\n  var result;\n  return _regenerator.default.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (req.query) {\n            _context3.next = 3;\n            break;\n          }\n\n          logger.error(\"User registration request body is not exist\");\n          return _context3.abrupt(\"return\", res.sendStatus(400));\n\n        case 3:\n          _context3.next = 5;\n          return _regenerator.default.awrap(product.getProduct(req.query));\n\n        case 5:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", res.status(200).json(result));\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.deleteProduct = function _callee4(req, res) {\n  var result;\n  return _regenerator.default.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (req.query) {\n            _context4.next = 3;\n            break;\n          }\n\n          logger.error(\"User registration request body is not exist\");\n          return _context4.abrupt(\"return\", res.sendStatus(400));\n\n        case 3:\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _regenerator.default.awrap(product.deleteProduct(req.query));\n\n        case 6:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", res.status(200).json(result));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](3);\n          return _context4.abrupt(\"return\", res.status(500).json(_context4.t0));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 10]]);\n};\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "product.controler.js"
      ],
      "names": [
        "product",
        "require",
        "log4js",
        "dotenv",
        "validationResult",
        "fs",
        "config",
        "logger",
        "getLogger",
        "level",
        "module",
        "exports",
        "addProducts",
        "req",
        "res",
        "err",
        "isEmpty",
        "console",
        "log",
        "status",
        "json",
        "errors",
        "image",
        "readFileSync",
        "files",
        "path",
        "unlink",
        "error",
        "productInfo",
        "body",
        "productImage",
        "addProduct",
        "result",
        "getProducts",
        "query",
        "jsonp",
        "array",
        "Object",
        "keys",
        "length",
        "getProduct",
        "sendStatus",
        "deleteProduct",
        "obj",
        "key",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,0BAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;eAC6BA,OAAO,CAAC,mBAAD,C;IAA5BG,gB,YAAAA,gB;;AACR,IAAMC,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEAE,MAAM,CAACG,MAAP;AACA,IAAMC,MAAM,GAAGL,MAAM,CAACM,SAAP,EAAf;AACAD,MAAM,CAACE,KAAP,GAAe,OAAf;;AAEAC,MAAM,CAACC,OAAP,CAAeC,WAAf,GAA6B,iBAAgBC,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzB;AACA;AACA;AACA;AAEMC,UAAAA,GAPmB,GAObX,gBAAgB,CAACS,GAAD,CAPH;;AAAA,cAQpBE,GAAG,CAACC,OAAJ,EARoB;AAAA;AAAA;AAAA;;AASrBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AATqB,2CAUdD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAAG,CAACM,MAAzB,CAVc;;AAAA;AAYrBC,UAAAA,KAZqB,GAYbjB,EAAE,CAACkB,YAAH,CAAgBV,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAaC,IAA7B,CAZa;AAazBpB,UAAAA,EAAE,CAACqB,MAAH,CAAUb,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAaC,IAAvB,EAA6B,UAACV,GAAD,EAAS;AAClC,gBAAIA,GAAJ,EAAS;AACPE,cAAAA,OAAO,CAACU,KAAR,CAAcZ,GAAd;AACA;AACD;AACJ,WALD;AAMIa,UAAAA,WAnBqB,GAmBPf,GAAG,CAACgB,IAnBG;AAoBzBD,UAAAA,WAAW,CAACE,YAAZ,GAA2BR,KAA3B;AApByB;AAAA,4CAqBJtB,OAAO,CAAC+B,UAAR,CAAmBH,WAAnB,CArBI;;AAAA;AAqBnBI,UAAAA,MArBmB;AAAA,2CAsBlBlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,MAArB,CAtBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAyBAtB,MAAM,CAACC,OAAP,CAAesB,WAAf,GAA6B,kBAAgBpB,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,GADmB,GACbX,gBAAgB,CAACS,GAAG,CAACqB,KAAL,CADH;;AAAA,cAEpBnB,GAAG,CAACC,OAAJ,EAFoB;AAAA;AAAA;AAAA;;AAAA,4CAGdF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBgB,KAAhB,CAAsBpB,GAAG,CAACqB,KAAJ,EAAtB,CAHc;;AAAA;AAAA,gBAKrBC,MAAM,CAACC,IAAP,CAAYzB,GAAG,CAACqB,KAAhB,EAAuBK,MAAvB,KAAkC,CALb;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAMAvC,OAAO,CAACwC,UAAR,CAAmB3B,GAAG,CAACqB,KAAvB,CANA;;AAAA;AAMfF,UAAAA,OANe;AAAA,4CAOdlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,OAArB,CAPc;;AAAA;AAAA;AAAA,4CASJhC,OAAO,CAACiC,WAAR,EATI;;AAAA;AASnBD,UAAAA,MATmB;AAAA,4CAUlBlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,MAArB,CAVkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAYAtB,MAAM,CAACC,OAAP,CAAe6B,UAAf,GAA4B,kBAAgB3B,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACnBD,GAAG,CAACqB,KADe;AAAA;AAAA;AAAA;;AAEpB3B,UAAAA,MAAM,CAACoB,KAAP;AAFoB,4CAGbb,GAAG,CAAC2B,UAAJ,CAAe,GAAf,CAHa;;AAAA;AAAA;AAAA,4CAKHzC,OAAO,CAACwC,UAAR,CAAmB3B,GAAG,CAACqB,KAAvB,CALG;;AAAA;AAKlBF,UAAAA,MALkB;AAAA,4CAMjBlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,MAArB,CANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AASAtB,MAAM,CAACC,OAAP,CAAe+B,aAAf,GAA+B,kBAAgB7B,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACtBD,GAAG,CAACqB,KADkB;AAAA;AAAA;AAAA;;AAEvB3B,UAAAA,MAAM,CAACoB,KAAP;AAFuB,4CAGhBb,GAAG,CAAC2B,UAAJ,CAAe,GAAf,CAHgB;;AAAA;AAAA;AAAA;AAAA,4CAMFzC,OAAO,CAAC0C,aAAR,CAAsB7B,GAAG,CAACqB,KAA1B,CANE;;AAAA;AAMjBF,UAAAA,MANiB;AAAA,4CAOhBlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,MAArB,CAPgB;;AAAA;AAAA;AAAA;AAAA,4CAShBlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAcA,SAASJ,OAAT,CAAiB2B,GAAjB,EAAsB;AAClB,OAAI,IAAIC,GAAR,IAAeD,GAAf,EAAoB;AAChB,QAAGA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAH,EACI,OAAO,KAAP;AACP;;AACD,SAAO,IAAP;AACH",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "sourcesContent": [
        "const product = require('../models/products.model');\nconst log4js = require('log4js');\nconst dotenv = require('dotenv');\nconst { validationResult } = require('express-validator');\nconst fs = require('fs')\n\ndotenv.config();\nconst logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.addProducts = async function (req, res) {\n\n    // if (isEmpty(req.body)) {\n    //     logger.error(`User registration request body is not exist`);\n    //     return res.sendStatus(400).json({\"message\":\"Bad Request\"});\n    // }    \n\n    const err = validationResult(req)\n    if (!err.isEmpty()) {\n        console.log(err)\n        return res.status(422).json(err.errors);\n    }\n    let image = fs.readFileSync(req.files[0].path)\n    fs.unlink(req.files[0].path, (err) => {\n        if (err) {\n          console.error(err)\n          return\n        }\n    })\n    let productInfo = req.body\n    productInfo.productImage = image\n    const result = await product.addProduct(productInfo)    \n    return res.status(200).json(result)\n\n}\nmodule.exports.getProducts = async function (req, res) {\n    const err = validationResult(req.query)\n    if (!err.isEmpty()) {\n        return res.status(422).jsonp(err.array());\n    }\n    if (Object.keys(req.query).length !== 0) {\n        const result = await product.getProduct(req.query)\n        return res.status(200).json(result)\n    }\n    const result = await product.getProducts()\n    return res.status(200).json(result)\n}\nmodule.exports.getProduct = async function (req, res) {\n    if (!req.query) {\n        logger.error(`User registration request body is not exist`);\n        return res.sendStatus(400);\n    }\n    const result = await product.getProduct(req.query)\n    return res.status(200).json(result)\n\n}\nmodule.exports.deleteProduct = async function (req, res) {\n    if (!req.query) {\n        logger.error(`User registration request body is not exist`);\n        return res.sendStatus(400);\n    }\n    try{\n        const result = await product.deleteProduct(req.query)\n        return res.status(200).json(result)\n    }catch(error){\n        return res.status(500).json(error)\n    }\n   \n\n}\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1582832605275
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/products.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/products.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/products.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/products.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
        "sourceFileName": "products.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _mysqlConnection = require(\"./mysqlConnection\");\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nmodule.exports.getProducts = function () {\n  return new Promise(function (resolve, reject) {\n    _mysqlConnection.connection.query('SELECT * FROM Products', function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        var result = [];\n        var map = new Map();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var item = _step.value;\n\n            if (!map.has(item.name)) {\n              map.set(item.name, true); // set any value to Map\n\n              var newItem = item;\n              newItem.count = 1;\n              result.push(newItem);\n            } else {\n              result.forEach(function (element) {\n                if (element.name === item.name) {\n                  element.count += 1;\n                }\n              });\n            }\n          };\n\n          for (var _iterator = results[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            _loop();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        resolve(result);\n      }\n    });\n  });\n};\n\nmodule.exports.getProduct = function (params) {\n  return new Promise(function (resolve, reject) {\n    var array = [];\n\n    for (var i in params) {\n      array.push(i);\n      array.push(params[i]);\n    }\n\n    var selectQuery = 'SELECT * FROM Products WHERE ?? = ?';\n\n    var query = _mysql.default.format(selectQuery, array);\n\n    console.log(query);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        var result = [];\n        var map = new Map();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          var _loop2 = function _loop2() {\n            var item = _step2.value;\n\n            if (!map.has(item.name)) {\n              map.set(item.name, true); // set any value to Map\n\n              var newItem = item;\n              newItem.count = 1;\n              result.push(newItem);\n            } else {\n              result.forEach(function (element) {\n                if (element.name === item.name) {\n                  element.count += 1;\n                }\n              });\n            }\n          };\n\n          for (var _iterator2 = results[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            _loop2();\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        resolve(result);\n      }\n    });\n  });\n};\n\nmodule.exports.addProduct = function (data) {\n  return new Promise(function (resolve, reject) {\n    console.log(data.productImage);\n    var insertQuery = 'INSERT INTO Products (??,??,??,??,??) VALUES (?,?,?,?,?)';\n\n    var query = _mysql.default.format(insertQuery, [\"name\", \"price\", \"date\", \"expiration\", \"image\", data.productName, data.productPrice, data.productDate, data.expiration, data.productImage]);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var response = {\n        \"message\": \"successed\"\n      };\n      resolve(response);\n    });\n  });\n};\n\nmodule.exports.updateProduct = function (data, params) {\n  return new Promise(function (resolve, reject) {\n    var queryParams = [];\n\n    for (var i in data) {\n      queryParams.push(i);\n      queryParams.push(data[i]);\n    }\n\n    for (var _i in params) {\n      queryParams.push(_i);\n      queryParams.push(params[_i]);\n    }\n\n    var insertQuery = 'UPDATE Products SET ?? = ? WHERE ?? = ?';\n\n    var query = _mysql.default.format(insertQuery, queryParams);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var respons = {\n        \"message\": \"success\",\n        results: results\n      };\n      resolve(respons);\n    });\n  });\n};\n\nmodule.exports.deleteProduct = function (params) {\n  return new Promise(function (resolve, reject) {\n    var array = [];\n\n    for (var i in params) {\n      array.push(i);\n      array.push(params[i]);\n    }\n\n    var selectQuery = 'DELETE  FROM Products WHERE ?? = ?';\n\n    var query = _mysql.default.format(selectQuery, array);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var respons = {\n        \"message\": \"success\",\n        results: results\n      };\n      resolve(respons);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "products.model.js"
      ],
      "names": [
        "module",
        "exports",
        "getProducts",
        "Promise",
        "resolve",
        "reject",
        "connection",
        "query",
        "error",
        "results",
        "result",
        "map",
        "Map",
        "item",
        "has",
        "name",
        "set",
        "newItem",
        "count",
        "push",
        "forEach",
        "element",
        "getProduct",
        "params",
        "array",
        "i",
        "selectQuery",
        "mysql",
        "format",
        "console",
        "log",
        "addProduct",
        "data",
        "productImage",
        "insertQuery",
        "productName",
        "productPrice",
        "productDate",
        "expiration",
        "response",
        "updateProduct",
        "queryParams",
        "respons",
        "deleteProduct"
      ],
      "mappings": ";;;;AAAE;;AACF;;AAEAA,MAAM,CAACC,OAAP,CAAeC,WAAf,GAA6B,YAAY;AACrC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,gCAAWC,KAAX,CAAiB,wBAAjB,EAA2C,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACnE,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACL,YAAME,MAAM,GAAG,EAAf;AACA,YAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AAFK;AAAA;AAAA;;AAAA;AAAA;AAAA,gBAGMC,IAHN;;AAID,gBAAG,CAACF,GAAG,CAACG,GAAJ,CAAQD,IAAI,CAACE,IAAb,CAAJ,EAAuB;AACnBJ,cAAAA,GAAG,CAACK,GAAJ,CAAQH,IAAI,CAACE,IAAb,EAAmB,IAAnB,EADmB,CACU;;AAC7B,kBAAIE,OAAO,GAAGJ,IAAd;AACAI,cAAAA,OAAO,CAACC,KAAR,GAAgB,CAAhB;AACAR,cAAAA,MAAM,CAACS,IAAP,CAAYF,OAAZ;AACH,aALD,MAKK;AACHP,cAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,OAAO,EAAI;AACxB,oBAAIA,OAAO,CAACN,IAAR,KAAiBF,IAAI,CAACE,IAA1B,EAAgC;AAC9BM,kBAAAA,OAAO,CAACH,KAAR,IAAiB,CAAjB;AACD;AACF,eAJD;AAKD;AAfA;;AAGL,+BAAmBT,OAAnB,8HAA4B;AAAA;AAa3B;AAhBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBLL,QAAAA,OAAO,CAACM,MAAD,CAAP;AACD;AACF,KAtBD;AAuBD,GAxBM,CAAP;AAyBD,CA1BH;;AA2BEV,MAAM,CAACC,OAAP,CAAeqB,UAAf,GAA4B,UAAUC,MAAV,EAAkB;AAC5C,SAAO,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAImB,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAOC,CAAZ,IAAiBF,MAAjB,EAA0B;AACxBC,MAAAA,KAAK,CAACL,IAAN,CAAWM,CAAX;AACAD,MAAAA,KAAK,CAACL,IAAN,CAAWI,MAAM,CAACE,CAAD,CAAjB;AACD;;AAED,QAAIC,WAAW,GAAG,qCAAlB;;AACA,QAAInB,KAAK,GAAGoB,eAAMC,MAAN,CAAaF,WAAb,EAA0BF,KAA1B,CAAZ;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;;AACAD,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAChD,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACL,YAAME,MAAM,GAAG,EAAf;AACA,YAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AAFK;AAAA;AAAA;;AAAA;AAAA;AAAA,gBAGMC,IAHN;;AAID,gBAAG,CAACF,GAAG,CAACG,GAAJ,CAAQD,IAAI,CAACE,IAAb,CAAJ,EAAuB;AACnBJ,cAAAA,GAAG,CAACK,GAAJ,CAAQH,IAAI,CAACE,IAAb,EAAmB,IAAnB,EADmB,CACU;;AAC7B,kBAAIE,OAAO,GAAGJ,IAAd;AACAI,cAAAA,OAAO,CAACC,KAAR,GAAgB,CAAhB;AACAR,cAAAA,MAAM,CAACS,IAAP,CAAYF,OAAZ;AACH,aALD,MAKK;AACHP,cAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,OAAO,EAAI;AACxB,oBAAIA,OAAO,CAACN,IAAR,KAAiBF,IAAI,CAACE,IAA1B,EAAgC;AAC9BM,kBAAAA,OAAO,CAACH,KAAR,IAAiB,CAAjB;AACD;AACF,eAJD;AAKD;AAfA;;AAGL,gCAAmBT,OAAnB,mIAA4B;AAAA;AAa3B;AAhBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBLL,QAAAA,OAAO,CAACM,MAAD,CAAP;AACD;AACF,KAtBD;AAuBD,GAjCM,CAAP;AAkCD,CAnCD;;AAoCAV,MAAM,CAACC,OAAP,CAAe8B,UAAf,GAA4B,UAAUC,IAAV,EAAgB;AAC1C,SAAO,IAAI7B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCwB,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,YAAjB;AAEA,QAAIC,WAAW,GAAG,0DAAlB;;AACA,QAAI3B,KAAK,GAAGoB,eAAMC,MAAN,CAAaM,WAAb,EAA0B,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,YAA1B,EAAuC,OAAvC,EAAgDF,IAAI,CAACG,WAArD,EAAkEH,IAAI,CAACI,YAAvE,EAAqFJ,IAAI,CAACK,WAA1F,EAAuGL,IAAI,CAACM,UAA5G,EAAuHN,IAAI,CAACC,YAA5H,CAA1B,CAAZ;;AACA3B,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTqB,QAAAA,OAAO,CAACrB,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAI+B,QAAQ,GAAG;AACb,mBAAU;AADG,OAAf;AAGAnC,MAAAA,OAAO,CAACmC,QAAD,CAAP;AACD,KAVD;AAWD,GAhBM,CAAP;AAiBD,CAlBD;;AAoBAvC,MAAM,CAACC,OAAP,CAAeuC,aAAf,GAA+B,UAAUR,IAAV,EAAeT,MAAf,EAAuB;AACpD,SAAO,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIoC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAMhB,CAAX,IAAgBO,IAAhB,EAAuB;AACrBS,MAAAA,WAAW,CAACtB,IAAZ,CAAiBM,CAAjB;AACAgB,MAAAA,WAAW,CAACtB,IAAZ,CAAiBa,IAAI,CAACP,CAAD,CAArB;AACD;;AACD,SAAK,IAAMA,EAAX,IAAgBF,MAAhB,EAAyB;AACvBkB,MAAAA,WAAW,CAACtB,IAAZ,CAAiBM,EAAjB;AACAgB,MAAAA,WAAW,CAACtB,IAAZ,CAAiBI,MAAM,CAACE,EAAD,CAAvB;AACD;;AAED,QAAIS,WAAW,GAAG,yCAAlB;;AACA,QAAI3B,KAAK,GAAGoB,eAAMC,MAAN,CAAaM,WAAb,EAA0BO,WAA1B,CAAZ;;AACAnC,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTqB,QAAAA,OAAO,CAACrB,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAIkC,OAAO,GAAG;AACZ,mBAAU,SADE;AAEZjC,QAAAA,OAAO,EAAPA;AAFY,OAAd;AAIAL,MAAAA,OAAO,CAACsC,OAAD,CAAP;AACD,KAXD;AAYD,GAzBM,CAAP;AA0BD,CA3BD;;AA4BA1C,MAAM,CAACC,OAAP,CAAe0C,aAAf,GAA+B,UAAUpB,MAAV,EAAkB;AAC/C,SAAO,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAImB,KAAK,GAAG,EAAZ;;AACF,SAAK,IAAOC,CAAZ,IAAiBF,MAAjB,EAA0B;AACxBC,MAAAA,KAAK,CAACL,IAAN,CAAWM,CAAX;AACAD,MAAAA,KAAK,CAACL,IAAN,CAAWI,MAAM,CAACE,CAAD,CAAjB;AACD;;AAED,QAAIC,WAAW,GAAG,oCAAlB;;AACA,QAAInB,KAAK,GAAGoB,eAAMC,MAAN,CAAaF,WAAb,EAA0BF,KAA1B,CAAZ;;AACAlB,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTqB,QAAAA,OAAO,CAACrB,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAIkC,OAAO,GAAG;AACZ,mBAAU,SADE;AAEZjC,QAAAA,OAAO,EAAPA;AAFY,OAAd;AAIAL,MAAAA,OAAO,CAACsC,OAAD,CAAP;AACD,KAXD;AAYD,GArBM,CAAP;AAsBD,CAvBD",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "sourcesContent": [
        "  import {connection} from './mysqlConnection'\nimport mysql from 'mysql'\n\nmodule.exports.getProducts = function () {\n    return new Promise((resolve, reject) => {\n      connection.query('SELECT * FROM Products', function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          const result = [];\n          const map = new Map();\n          for (const item of results) {\n              if(!map.has(item.name)){\n                  map.set(item.name, true);    // set any value to Map\n                  let newItem = item\n                  newItem.count = 1\n                  result.push(newItem);\n              }else{\n                result.forEach(element => {\n                  if (element.name === item.name ){\n                    element.count += 1\n                  }\n                })\n              }\n          }\n          resolve(result);\n        }\n      });\n    });\n  }\n  module.exports.getProduct = function (params) {\n    return new Promise((resolve, reject) => {\n      let array = []\n      for (const  i in params ) {\n        array.push(i)\n        array.push(params[i])\n      }\n  \n      let selectQuery = 'SELECT * FROM Products WHERE ?? = ?';\n      let query = mysql.format(selectQuery, array);\n      console.log(query)\n      connection.query(query, function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          const result = [];\n          const map = new Map();\n          for (const item of results) {\n              if(!map.has(item.name)){\n                  map.set(item.name, true);    // set any value to Map\n                  let newItem = item\n                  newItem.count = 1\n                  result.push(newItem);\n              }else{\n                result.forEach(element => {\n                  if (element.name === item.name ){\n                    element.count += 1\n                  }\n                })\n              }\n          }\n          resolve(result);\n        }\n      });\n    });\n  }\n  module.exports.addProduct = function (data) {\n    return new Promise((resolve, reject) => {\n      console.log(data.productImage)\n      \n      let insertQuery = 'INSERT INTO Products (??,??,??,??,??) VALUES (?,?,?,?,?)';\n      let query = mysql.format(insertQuery, [\"name\", \"price\", \"date\", \"expiration\",\"image\", data.productName, data.productPrice, data.productDate, data.expiration,data.productImage]);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let response = {\n          \"message\":\"successed\",\n        }\n        resolve(response)\n      });\n    });\n  }\n  \n  module.exports.updateProduct = function (data,params) {\n    return new Promise((resolve, reject) => {\n      let queryParams = []\n      for (const i in data ) {\n        queryParams.push(i)\n        queryParams.push(data[i])\n      }\n      for (const i in params ) {\n        queryParams.push(i)\n        queryParams.push(params[i])\n      }\n      \n      let insertQuery = 'UPDATE Products SET ?? = ? WHERE ?? = ?';\n      let query = mysql.format(insertQuery, queryParams);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let respons = {\n          \"message\":\"success\",\n          results\n        }\n        resolve(respons)\n      });\n    });\n  }\n  module.exports.deleteProduct = function (params) {\n    return new Promise((resolve, reject) => {\n        let array = []\n      for (const  i in params ) {\n        array.push(i)\n        array.push(params[i])\n      }\n  \n      let selectQuery = 'DELETE  FROM Products WHERE ?? = ?';\n      let query = mysql.format(selectQuery, array);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let respons = {\n          \"message\":\"success\",\n          results\n        }\n        resolve(respons)\n      });\n    });\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1583267640677
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/mysqlConnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/mysqlConnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/mysqlConnection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/mysqlConnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
        "sourceFileName": "mysqlConnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nvar dotenv = require('dotenv');\n\ndotenv.config();\n\nvar connection = _mysql.default.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME\n});\n\nconnection.connect();\nmodule.exports.connection = connection;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15c3FsQ29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJyZXF1aXJlIiwiY29uZmlnIiwiY29ubmVjdGlvbiIsIm15c3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiREJfSE9TVCIsInVzZXIiLCJEQl9VU0VSTkFNRSIsInBhc3N3b3JkIiwiREJfUEFTU1dPUkQiLCJkYXRhYmFzZSIsIkRCX05BTUUiLCJjb25uZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0FELE1BQU0sQ0FBQ0UsTUFBUDs7QUFFQSxJQUFNQyxVQUFVLEdBQUdDLGVBQU1DLGdCQUFOLENBQXVCO0FBQ3hDQyxFQUFBQSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxPQURzQjtBQUV4Q0MsRUFBQUEsSUFBSSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsV0FGc0I7QUFHeENDLEVBQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFdBSGtCO0FBSXhDQyxFQUFBQSxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTztBQUprQixDQUF2QixDQUFuQjs7QUFPQVosVUFBVSxDQUFDYSxPQUFYO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlZixVQUFmLEdBQTRCQSxVQUE1QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsJ1xuY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XG5kb3RlbnYuY29uZmlnKClcblxuY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICBob3N0OiBwcm9jZXNzLmVudi5EQl9IT1NULFxuICB1c2VyOiBwcm9jZXNzLmVudi5EQl9VU0VSTkFNRSxcbiAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JELFxuICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRVxufSk7XG5cbmNvbm5lY3Rpb24uY29ubmVjdCgpO1xubW9kdWxlLmV4cG9ydHMuY29ubmVjdGlvbiA9IGNvbm5lY3Rpb25cblxuXG5cblxuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mysqlConnection.js"
      ],
      "names": [
        "dotenv",
        "require",
        "config",
        "connection",
        "mysql",
        "createConnection",
        "host",
        "process",
        "env",
        "DB_HOST",
        "user",
        "DB_USERNAME",
        "password",
        "DB_PASSWORD",
        "database",
        "DB_NAME",
        "connect",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP;;AAEA,IAAMC,UAAU,GAAGC,eAAMC,gBAAN,CAAuB;AACxCC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADsB;AAExCC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,WAFsB;AAGxCC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,WAHkB;AAIxCC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJkB,CAAvB,CAAnB;;AAOAZ,UAAU,CAACa,OAAX;AACAC,MAAM,CAACC,OAAP,CAAef,UAAf,GAA4BA,UAA5B",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "sourcesContent": [
        "import mysql from 'mysql'\nconst dotenv = require('dotenv');\ndotenv.config()\n\nconst connection = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME\n});\n\nconnection.connect();\nmodule.exports.connection = connection\n\n\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580512117977
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/user.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/user.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/user.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/user.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
        "sourceFileName": "user.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"../controlers/user.controler\"));\n\nvar _expressValidator = require(\"express-validator\");\n\nvar userRouter = _express.default.Router();\n\nuserRouter.route('/').post([(0, _expressValidator.check)('email').isEmail().withMessage('User email first simbol should be upper'), (0, _expressValidator.check)('password').matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/, \"i\").withMessage('Password should be have 1 number 1 upper case')], _user.default.login);\nmodule.exports = userRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVyLmpzIl0sIm5hbWVzIjpbInVzZXJSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicm91dGUiLCJwb3N0IiwiaXNFbWFpbCIsIndpdGhNZXNzYWdlIiwibWF0Y2hlcyIsImNvbnRyb2xsZXIiLCJsb2dpbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFGQSxJQUFNQSxVQUFVLEdBQUdDLGlCQUFRQyxNQUFSLEVBQW5COztBQUlBRixVQUFVLENBQUNHLEtBQVgsQ0FBaUIsR0FBakIsRUFDS0MsSUFETCxDQUNVLENBQUMsNkJBQU0sT0FBTixFQUFlQyxPQUFmLEdBQXlCQyxXQUF6QixDQUFxQyx5Q0FBckMsQ0FBRCxFQUNFLDZCQUFNLFVBQU4sRUFBa0JDLE9BQWxCLENBQTBCLGlEQUExQixFQUE2RSxHQUE3RSxFQUFrRkQsV0FBbEYsQ0FBOEYsK0NBQTlGLENBREYsQ0FEVixFQUlRRSxjQUFXQyxLQUpuQjtBQUtBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLFVBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2h1bmFuL0Rlc2t0b3AvSW5zdGlnYXRlL1dlYi1TdG9yYWdlL3dlYi1zdG9yYWdlL2JhY2tlbmQvTm9kZS9yb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmNvbnN0IHVzZXJSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGVycy91c2VyLmNvbnRyb2xlcic7XG5pbXBvcnQge2NoZWNrfSBmcm9tICdleHByZXNzLXZhbGlkYXRvcic7XG5cbnVzZXJSb3V0ZXIucm91dGUoJy8nKVxuICAgIC5wb3N0KFtjaGVjaygnZW1haWwnKS5pc0VtYWlsKCkud2l0aE1lc3NhZ2UoJ1VzZXIgZW1haWwgZmlyc3Qgc2ltYm9sIHNob3VsZCBiZSB1cHBlcicpLFxuICAgICAgICAgICAgY2hlY2soJ3Bhc3N3b3JkJykubWF0Y2hlcygvXig/PS4qXFxkKSg/PS4qW2Etel0pKD89LipbQS1aXSlbMC05YS16QS1aXXs4LH0kLywgXCJpXCIpLndpdGhNZXNzYWdlKCdQYXNzd29yZCBzaG91bGQgYmUgaGF2ZSAxIG51bWJlciAxIHVwcGVyIGNhc2UnKVxuICAgICAgICBdLFxuICAgICAgICBjb250cm9sbGVyLmxvZ2luKVxubW9kdWxlLmV4cG9ydHMgPSB1c2VyUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.router.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "route",
        "post",
        "isEmail",
        "withMessage",
        "matches",
        "controller",
        "login",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AAFA,IAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAIAF,UAAU,CAACG,KAAX,CAAiB,GAAjB,EACKC,IADL,CACU,CAAC,6BAAM,OAAN,EAAeC,OAAf,GAAyBC,WAAzB,CAAqC,yCAArC,CAAD,EACE,6BAAM,UAAN,EAAkBC,OAAlB,CAA0B,iDAA1B,EAA6E,GAA7E,EAAkFD,WAAlF,CAA8F,+CAA9F,CADF,CADV,EAIQE,cAAWC,KAJnB;AAKAC,MAAM,CAACC,OAAP,GAAiBX,UAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "sourcesContent": [
        "import express from 'express'\nconst userRouter = express.Router();\nimport controller from '../controlers/user.controler';\nimport {check} from 'express-validator';\n\nuserRouter.route('/')\n    .post([check('email').isEmail().withMessage('User email first simbol should be upper'),\n            check('password').matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/, \"i\").withMessage('Password should be have 1 number 1 upper case')\n        ],\n        controller.login)\nmodule.exports = userRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1580239715356
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/user.controler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/user.controler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/user.controler.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/user.controler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
        "sourceFileName": "user.controler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _users = _interopRequireDefault(require(\"./../models/users.model\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar config = require('./../config/config');\n\nmodule.exports.login = function _callee(req, res) {\n  var email, password, info, token, response, now, date, result, _response;\n\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!req.body) {\n            _context.next = 35;\n            break;\n          }\n\n          email = req.body.email;\n          password = req.body.password;\n\n          if (!(email && password)) {\n            _context.next = 31;\n            break;\n          }\n\n          _context.prev = 4;\n          _context.next = 7;\n          return _regenerator.default.awrap(_users.default.getUser(req.body));\n\n        case 7:\n          info = _context.sent;\n\n          if (!(info.length == 0)) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", res.status(402).json({\n            message: \"User not found\"\n          }));\n\n        case 10:\n          if (!(info[0].email === email && info[0].password === password)) {\n            _context.next = 21;\n            break;\n          }\n\n          token = _jsonwebtoken.default.sign(_users.default, config.secret, {\n            expiresIn: config.tokenLife\n          });\n          response = {\n            \"status\": \"Logged in\",\n            \"expiredTime\": 3600,\n            \"accessToken\": token\n          };\n          now = new Date();\n          date = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n          _context.next = 17;\n          return _regenerator.default.awrap(_users.default.updateUser({\n            email: email,\n            accessTocken: token,\n            date: date\n          }));\n\n        case 17:\n          result = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).json(response));\n\n        case 21:\n          _response = {\n            \"message\": \"User not found\"\n          };\n          return _context.abrupt(\"return\", res.status(401).json(_response));\n\n        case 23:\n          _context.next = 29;\n          break;\n\n        case 25:\n          _context.prev = 25;\n          _context.t0 = _context[\"catch\"](4);\n          console.log(\"Error to login user: \".concat(_context.t0));\n          return _context.abrupt(\"return\", res.status(204).json(_context.t0));\n\n        case 29:\n          _context.next = 33;\n          break;\n\n        case 31:\n          console.log(\"Not valid user email or password to login, email: \".concat(email, \", password : \").concat(password));\n          return _context.abrupt(\"return\", res.status(403).json({\n            message: \"Not valid email or password\"\n          }));\n\n        case 33:\n          _context.next = 37;\n          break;\n\n        case 35:\n          console.log(\"Login request body is empty\");\n          return _context.abrupt(\"return\", res.status(202).json({\n            message: \"Empty data!\"\n          }));\n\n        case 37:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 25]]);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGVyLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9naW4iLCJyZXEiLCJyZXMiLCJib2R5IiwiZW1haWwiLCJwYXNzd29yZCIsInVzZXIiLCJnZXRVc2VyIiwiaW5mbyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidG9rZW4iLCJqd3QiLCJzaWduIiwic2VjcmV0IiwiZXhwaXJlc0luIiwidG9rZW5MaWZlIiwicmVzcG9uc2UiLCJub3ciLCJEYXRlIiwiZGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJ1cGRhdGVVc2VyIiwiYWNjZXNzVG9ja2VuIiwicmVzdWx0IiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBdEI7O0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxLQUFmLEdBQXVCLGlCQUFnQkMsR0FBaEIsRUFBcUJDLEdBQXJCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUNmRCxHQUFHLENBQUNFLElBRFc7QUFBQTtBQUFBO0FBQUE7O0FBRVRDLFVBQUFBLEtBRlMsR0FFREgsR0FBRyxDQUFDRSxJQUFKLENBQVNDLEtBRlI7QUFHVEMsVUFBQUEsUUFIUyxHQUdFSixHQUFHLENBQUNFLElBQUosQ0FBU0UsUUFIWDs7QUFBQSxnQkFJWEQsS0FBSyxJQUFJQyxRQUpFO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw0Q0FNWUMsZUFBS0MsT0FBTCxDQUFhTixHQUFHLENBQUNFLElBQWpCLENBTlo7O0FBQUE7QUFNREssVUFBQUEsSUFOQzs7QUFBQSxnQkFPSEEsSUFBSSxDQUFDQyxNQUFMLElBQWUsQ0FQWjtBQUFBO0FBQUE7QUFBQTs7QUFBQSwyQ0FRSVAsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLFlBQUFBLE9BQU8sRUFBRTtBQURlLFdBQXJCLENBUko7O0FBQUE7QUFBQSxnQkFhSEosSUFBSSxDQUFDLENBQUQsQ0FBSixDQUFRSixLQUFSLEtBQWtCQSxLQUFsQixJQUEyQkksSUFBSSxDQUFDLENBQUQsQ0FBSixDQUFRSCxRQUFSLEtBQXFCQSxRQWI3QztBQUFBO0FBQUE7QUFBQTs7QUFjR1EsVUFBQUEsS0FkSCxHQWNXQyxzQkFBSUMsSUFBSixDQUFTVCxjQUFULEVBQWVWLE1BQU0sQ0FBQ29CLE1BQXRCLEVBQThCO0FBQ3hDQyxZQUFBQSxTQUFTLEVBQUVyQixNQUFNLENBQUNzQjtBQURzQixXQUE5QixDQWRYO0FBaUJHQyxVQUFBQSxRQWpCSCxHQWlCYztBQUNiLHNCQUFVLFdBREc7QUFFYiwyQkFBZSxJQUZGO0FBR2IsMkJBQWVOO0FBSEYsV0FqQmQ7QUFzQkdPLFVBQUFBLEdBdEJILEdBc0JTLElBQUlDLElBQUosRUF0QlQ7QUF1QkdDLFVBQUFBLElBdkJILEdBdUJVRixHQUFHLENBQUNHLFFBQUosS0FBaUIsR0FBakIsR0FBdUJILEdBQUcsQ0FBQ0ksVUFBSixFQUF2QixHQUEwQyxHQUExQyxHQUFnREosR0FBRyxDQUFDSyxVQUFKLEVBdkIxRDtBQUFBO0FBQUEsNENBd0JrQm5CLGVBQUtvQixVQUFMLENBQWdCO0FBQ2pDdEIsWUFBQUEsS0FBSyxFQUFFQSxLQUQwQjtBQUVqQ3VCLFlBQUFBLFlBQVksRUFBRWQsS0FGbUI7QUFHakNTLFlBQUFBLElBQUksRUFBRUE7QUFIMkIsV0FBaEIsQ0F4QmxCOztBQUFBO0FBd0JHTSxVQUFBQSxNQXhCSDtBQUFBLDJDQTZCSTFCLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCUSxRQUFyQixDQTdCSjs7QUFBQTtBQStCR0EsVUFBQUEsU0EvQkgsR0ErQmM7QUFDYix1QkFBVztBQURFLFdBL0JkO0FBQUEsMkNBa0NJakIsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJRLFNBQXJCLENBbENKOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFzQ1BVLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQXRDTywyQ0F1Q0E1QixHQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixhQXZDQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUEwQ1hrQixVQUFBQSxPQUFPLENBQUNDLEdBQVIsNkRBQWlFMUIsS0FBakUsMEJBQXNGQyxRQUF0RjtBQTFDVywyQ0EyQ0pILEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxZQUFBQSxPQUFPLEVBQUU7QUFEZSxXQUFyQixDQTNDSTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFnRGZpQixVQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFoRGUsMkNBaURSNUIsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLFlBQUFBLE9BQU8sRUFBRTtBQURlLFdBQXJCLENBakRROztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXZCIiwic291cmNlUm9vdCI6Ii9ob21lL2h1bmFuL0Rlc2t0b3AvSW5zdGlnYXRlL1dlYi1TdG9yYWdlL3dlYi1zdG9yYWdlL2JhY2tlbmQvTm9kZS9jb250cm9sZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZXIgZnJvbSAnLi8uLi9tb2RlbHMvdXNlcnMubW9kZWwnXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoJy4vLi4vY29uZmlnL2NvbmZpZycpXG5tb2R1bGUuZXhwb3J0cy5sb2dpbiA9IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGlmIChyZXEuYm9keSkge1xuICAgICAgICBjb25zdCBlbWFpbCA9IHJlcS5ib2R5LmVtYWlsO1xuICAgICAgICBjb25zdCBwYXNzd29yZCA9IHJlcS5ib2R5LnBhc3N3b3JkXG4gICAgICAgIGlmIChlbWFpbCAmJiBwYXNzd29yZCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmZvID0gYXdhaXQgdXNlci5nZXRVc2VyKHJlcS5ib2R5KVxuICAgICAgICAgICAgICAgIGlmIChpbmZvLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMikuanNvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgbm90IGZvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaW5mb1swXS5lbWFpbCA9PT0gZW1haWwgJiYgaW5mb1swXS5wYXNzd29yZCA9PT0gcGFzc3dvcmQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih1c2VyLCBjb25maWcuc2VjcmV0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHBpcmVzSW46IGNvbmZpZy50b2tlbkxpZmVcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInN0YXR1c1wiOiBcIkxvZ2dlZCBpblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJleHBpcmVkVGltZVwiOiAzNjAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJhY2Nlc3NUb2tlblwiOiB0b2tlblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5vdy5nZXRIb3VycygpICsgXCI6XCIgKyBub3cuZ2V0TWludXRlcygpICsgXCI6XCIgKyBub3cuZ2V0U2Vjb25kcygpXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHVzZXIudXBkYXRlVXNlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbWFpbDogZW1haWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NUb2NrZW46IHRva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0ZVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibWVzc2FnZVwiOiBcIlVzZXIgbm90IGZvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24ocmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3IgdG8gbG9naW4gdXNlcjogJHtlcnJ9YCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjA0KS5qc29uKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgTm90IHZhbGlkIHVzZXIgZW1haWwgb3IgcGFzc3dvcmQgdG8gbG9naW4sIGVtYWlsOiAke2VtYWlsfSwgcGFzc3dvcmQgOiAke3Bhc3N3b3JkfWApO1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIk5vdCB2YWxpZCBlbWFpbCBvciBwYXNzd29yZFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBMb2dpbiByZXF1ZXN0IGJvZHkgaXMgZW1wdHlgKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAyKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiRW1wdHkgZGF0YSFcIlxuICAgICAgICB9KVxuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.controler.js"
      ],
      "names": [
        "config",
        "require",
        "module",
        "exports",
        "login",
        "req",
        "res",
        "body",
        "email",
        "password",
        "user",
        "getUser",
        "info",
        "length",
        "status",
        "json",
        "message",
        "token",
        "jwt",
        "sign",
        "secret",
        "expiresIn",
        "tokenLife",
        "response",
        "now",
        "Date",
        "date",
        "getHours",
        "getMinutes",
        "getSeconds",
        "updateUser",
        "accessTocken",
        "result",
        "console",
        "log"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACAC,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,iBAAgBC,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eACfD,GAAG,CAACE,IADW;AAAA;AAAA;AAAA;;AAETC,UAAAA,KAFS,GAEDH,GAAG,CAACE,IAAJ,CAASC,KAFR;AAGTC,UAAAA,QAHS,GAGEJ,GAAG,CAACE,IAAJ,CAASE,QAHX;;AAAA,gBAIXD,KAAK,IAAIC,QAJE;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAMYC,eAAKC,OAAL,CAAaN,GAAG,CAACE,IAAjB,CANZ;;AAAA;AAMDK,UAAAA,IANC;;AAAA,gBAOHA,IAAI,CAACC,MAAL,IAAe,CAPZ;AAAA;AAAA;AAAA;;AAAA,2CAQIP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE;AADe,WAArB,CARJ;;AAAA;AAAA,gBAaHJ,IAAI,CAAC,CAAD,CAAJ,CAAQJ,KAAR,KAAkBA,KAAlB,IAA2BI,IAAI,CAAC,CAAD,CAAJ,CAAQH,QAAR,KAAqBA,QAb7C;AAAA;AAAA;AAAA;;AAcGQ,UAAAA,KAdH,GAcWC,sBAAIC,IAAJ,CAAST,cAAT,EAAeV,MAAM,CAACoB,MAAtB,EAA8B;AACxCC,YAAAA,SAAS,EAAErB,MAAM,CAACsB;AADsB,WAA9B,CAdX;AAiBGC,UAAAA,QAjBH,GAiBc;AACb,sBAAU,WADG;AAEb,2BAAe,IAFF;AAGb,2BAAeN;AAHF,WAjBd;AAsBGO,UAAAA,GAtBH,GAsBS,IAAIC,IAAJ,EAtBT;AAuBGC,UAAAA,IAvBH,GAuBUF,GAAG,CAACG,QAAJ,KAAiB,GAAjB,GAAuBH,GAAG,CAACI,UAAJ,EAAvB,GAA0C,GAA1C,GAAgDJ,GAAG,CAACK,UAAJ,EAvB1D;AAAA;AAAA,4CAwBkBnB,eAAKoB,UAAL,CAAgB;AACjCtB,YAAAA,KAAK,EAAEA,KAD0B;AAEjCuB,YAAAA,YAAY,EAAEd,KAFmB;AAGjCS,YAAAA,IAAI,EAAEA;AAH2B,WAAhB,CAxBlB;;AAAA;AAwBGM,UAAAA,MAxBH;AAAA,2CA6BI1B,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBQ,QAArB,CA7BJ;;AAAA;AA+BGA,UAAAA,SA/BH,GA+Bc;AACb,uBAAW;AADE,WA/Bd;AAAA,2CAkCIjB,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBQ,SAArB,CAlCJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsCPU,UAAAA,OAAO,CAACC,GAAR;AAtCO,2CAuCA5B,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,aAvCA;;AAAA;AAAA;AAAA;;AAAA;AA0CXkB,UAAAA,OAAO,CAACC,GAAR,6DAAiE1B,KAAjE,0BAAsFC,QAAtF;AA1CW,2CA2CJH,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE;AADe,WAArB,CA3CI;;AAAA;AAAA;AAAA;;AAAA;AAgDfiB,UAAAA,OAAO,CAACC,GAAR;AAhDe,2CAiDR5B,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE;AADe,WAArB,CAjDQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "sourcesContent": [
        "import user from './../models/users.model'\nimport jwt from 'jsonwebtoken'\nconst config = require('./../config/config')\nmodule.exports.login = async function (req, res) {\n    if (req.body) {\n        const email = req.body.email;\n        const password = req.body.password\n        if (email && password) {\n            try {\n                const info = await user.getUser(req.body)\n                if (info.length == 0) {\n                    return res.status(402).json({\n                        message: \"User not found\"\n                    })\n                }\n\n                if (info[0].email === email && info[0].password === password) {\n                    const token = jwt.sign(user, config.secret, {\n                        expiresIn: config.tokenLife\n                    })\n                    const response = {\n                        \"status\": \"Logged in\",\n                        \"expiredTime\": 3600,\n                        \"accessToken\": token\n                    }\n                    const now = new Date()\n                    const date = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds()\n                    const result = await user.updateUser({\n                        email: email,\n                        accessTocken: token,\n                        date: date\n                    })\n                    return res.status(200).json(response)\n                }else {\n                    const response = {\n                        \"message\": \"User not found\"\n                    }\n                    return res.status(401).json(response)\n                }\n\n            } catch (err) {\n                console.log(`Error to login user: ${err}`);\n                return res.status(204).json(err);\n            }\n        } else {\n            console.log(`Not valid user email or password to login, email: ${email}, password : ${password}`);\n            return res.status(403).json({\n                message: \"Not valid email or password\"\n            });\n        }\n    } else {\n        console.log(`Login request body is empty`);\n        return res.status(202).json({\n            message: \"Empty data!\"\n        })\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1582234205380
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/users.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/users.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/users.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/users.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
        "sourceFileName": "users.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _mysqlConnection = require(\"./mysqlConnection\");\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nmodule.exports.getUsers = function () {\n  return new Promise(function (resolve, reject) {\n    _mysqlConnection.connection.query('SELECT * FROM Users', function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        console.log(results);\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.getUser = function (user) {\n  return new Promise(function (resolve, reject) {\n    var userData = [user.email, user.password];\n    var selectQuery = 'SELECT * FROM Users where email=?';\n\n    var query = _mysql.default.format(selectQuery, userData);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.updateUser = function (user) {\n  return new Promise(function (resolve, reject) {\n    var userData = [user.accessTocken, user.date, user.email];\n    var selectQuery = 'UPDATE Users Set accessTocken = ?, accessTokenDate = ? where email=?';\n\n    var query = _mysql.default.format(selectQuery, userData);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(results);\n      }\n    });\n\n    var createEvent = \"Create Event IF NOT EXISTS clearToken ON SCHEDULE EVERY 1 Hour  do update Users set accessTocken = NULL where accessTokenDate < time(now()) - Interval 1 Hour;\";\n\n    _mysqlConnection.connection.query(_mysql.default.format(createEvent), function (error, result) {\n      if (error) {\n        console.log(error);\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n\n    var globalSchedul = \"set global event_scheduler = on;\";\n\n    _mysqlConnection.connection.query(_mysql.default.format(globalSchedul), function (error, result) {\n      if (error) {\n        console.log(error);\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    }); //Create Event IF NOT EXISTS removeProduct ON SCHEDULE EVERY 1 Day  do Delete From Products where expiration < time(now());\n\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRVc2VycyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY29ubmVjdGlvbiIsInF1ZXJ5IiwiZXJyb3IiLCJyZXN1bHRzIiwiY29uc29sZSIsImxvZyIsImdldFVzZXIiLCJ1c2VyIiwidXNlckRhdGEiLCJlbWFpbCIsInBhc3N3b3JkIiwic2VsZWN0UXVlcnkiLCJteXNxbCIsImZvcm1hdCIsInVwZGF0ZVVzZXIiLCJhY2Nlc3NUb2NrZW4iLCJkYXRlIiwiY3JlYXRlRXZlbnQiLCJyZXN1bHQiLCJnbG9iYWxTY2hlZHVsIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxRQUFmLEdBQTBCLFlBQVk7QUFDbEMsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDQyxnQ0FBV0MsS0FBWCxDQUFpQixxQkFBakIsRUFBd0MsVUFBVUMsS0FBVixFQUFpQkMsT0FBakIsRUFBMEI7QUFDaEUsVUFBSUQsS0FBSixFQUFXO0FBQ1RILFFBQUFBLE1BQU0sQ0FBQ0csS0FBRCxDQUFOO0FBQ0QsT0FGRCxNQUVPO0FBQ0xFLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixPQUFaO0FBQ0FMLFFBQUFBLE9BQU8sQ0FBQ0ssT0FBRCxDQUFQO0FBQ0Q7QUFDRixLQVBEO0FBUUQsR0FUTSxDQUFQO0FBVUQsQ0FYSDs7QUFZRVQsTUFBTSxDQUFDQyxPQUFQLENBQWVXLE9BQWYsR0FBeUIsVUFBVUMsSUFBVixFQUFnQjtBQUN2QyxTQUFPLElBQUlWLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdEMsUUFBSVMsUUFBUSxHQUFHLENBQUNELElBQUksQ0FBQ0UsS0FBTixFQUFhRixJQUFJLENBQUNHLFFBQWxCLENBQWY7QUFDQSxRQUFJQyxXQUFXLEdBQUcsbUNBQWxCOztBQUNBLFFBQUlWLEtBQUssR0FBR1csZUFBTUMsTUFBTixDQUFhRixXQUFiLEVBQTBCSCxRQUExQixDQUFaOztBQUNBUixnQ0FBV0MsS0FBWCxDQUFpQkEsS0FBakIsRUFBd0IsVUFBVUMsS0FBVixFQUFpQkMsT0FBakIsRUFBMEI7QUFDaEQsVUFBSUQsS0FBSixFQUFXO0FBQ1RILFFBQUFBLE1BQU0sQ0FBQ0csS0FBRCxDQUFOO0FBQ0QsT0FGRCxNQUVPO0FBQ0xKLFFBQUFBLE9BQU8sQ0FBQ0ssT0FBRCxDQUFQO0FBQ0Q7QUFDRixLQU5EO0FBT0QsR0FYTSxDQUFQO0FBWUQsQ0FiRDs7QUFjQVQsTUFBTSxDQUFDQyxPQUFQLENBQWVtQixVQUFmLEdBQTRCLFVBQVVQLElBQVYsRUFBZ0I7QUFDMUMsU0FBTyxJQUFJVixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDLFFBQUlTLFFBQVEsR0FBRyxDQUFDRCxJQUFJLENBQUNRLFlBQU4sRUFBbUJSLElBQUksQ0FBQ1MsSUFBeEIsRUFBOEJULElBQUksQ0FBQ0UsS0FBbkMsQ0FBZjtBQUNBLFFBQUlFLFdBQVcsR0FBRyxzRUFBbEI7O0FBQ0EsUUFBSVYsS0FBSyxHQUFHVyxlQUFNQyxNQUFOLENBQWFGLFdBQWIsRUFBMEJILFFBQTFCLENBQVo7O0FBQ0FSLGdDQUFXQyxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixVQUFVQyxLQUFWLEVBQWlCQyxPQUFqQixFQUEwQjtBQUNoRCxVQUFJRCxLQUFKLEVBQVc7QUFDVEgsUUFBQUEsTUFBTSxDQUFDRyxLQUFELENBQU47QUFDRCxPQUZELE1BRU87QUFDTEosUUFBQUEsT0FBTyxDQUFDSyxPQUFELENBQVA7QUFDRDtBQUNGLEtBTkQ7O0FBT0EsUUFBSWMsV0FBVyxHQUFHLGdLQUFsQjs7QUFDQWpCLGdDQUFXQyxLQUFYLENBQWlCVyxlQUFNQyxNQUFOLENBQWFJLFdBQWIsQ0FBakIsRUFBNEMsVUFBVWYsS0FBVixFQUFpQmdCLE1BQWpCLEVBQXlCO0FBQ25FLFVBQUloQixLQUFKLEVBQVc7QUFDVEUsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEtBQVo7QUFDQUgsUUFBQUEsTUFBTSxDQUFDRyxLQUFELENBQU47QUFDRCxPQUhELE1BR087QUFDTEosUUFBQUEsT0FBTyxDQUFDb0IsTUFBRCxDQUFQO0FBQ0Q7QUFDRixLQVBEOztBQVFBLFFBQUlDLGFBQWEsR0FBRyxrQ0FBcEI7O0FBQ0FuQixnQ0FBV0MsS0FBWCxDQUFpQlcsZUFBTUMsTUFBTixDQUFhTSxhQUFiLENBQWpCLEVBQThDLFVBQVVqQixLQUFWLEVBQWlCZ0IsTUFBakIsRUFBeUI7QUFDckUsVUFBSWhCLEtBQUosRUFBVztBQUNURSxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsS0FBWjtBQUNBSCxRQUFBQSxNQUFNLENBQUNHLEtBQUQsQ0FBTjtBQUNELE9BSEQsTUFHTztBQUNMSixRQUFBQSxPQUFPLENBQUNvQixNQUFELENBQVA7QUFDRDtBQUNGLEtBUEQsRUFyQnNDLENBOEJ0Qzs7QUFFRCxHQWhDTSxDQUFQO0FBaUNELENBbENEIiwic291cmNlUm9vdCI6Ii9ob21lL2h1bmFuL0Rlc2t0b3AvSW5zdGlnYXRlL1dlYi1TdG9yYWdlL3dlYi1zdG9yYWdlL2JhY2tlbmQvTm9kZS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Nvbm5lY3Rpb259IGZyb20gJy4vbXlzcWxDb25uZWN0aW9uJ1xuaW1wb3J0IG15c3FsIGZyb20gJ215c3FsJ1xuXG5tb2R1bGUuZXhwb3J0cy5nZXRVc2VycyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSBVc2VycycsIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0cykge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpXG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHRzKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgbW9kdWxlLmV4cG9ydHMuZ2V0VXNlciA9IGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCB1c2VyRGF0YSA9IFt1c2VyLmVtYWlsLCB1c2VyLnBhc3N3b3JkXVxuICAgICAgbGV0IHNlbGVjdFF1ZXJ5ID0gJ1NFTEVDVCAqIEZST00gVXNlcnMgd2hlcmUgZW1haWw9Pyc7XG4gICAgICBsZXQgcXVlcnkgPSBteXNxbC5mb3JtYXQoc2VsZWN0UXVlcnksIHVzZXJEYXRhKTtcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0cykge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0cyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIG1vZHVsZS5leHBvcnRzLnVwZGF0ZVVzZXIgPSBmdW5jdGlvbiAodXNlcikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgdXNlckRhdGEgPSBbdXNlci5hY2Nlc3NUb2NrZW4sdXNlci5kYXRlLCB1c2VyLmVtYWlsXVxuICAgICAgbGV0IHNlbGVjdFF1ZXJ5ID0gJ1VQREFURSBVc2VycyBTZXQgYWNjZXNzVG9ja2VuID0gPywgYWNjZXNzVG9rZW5EYXRlID0gPyB3aGVyZSBlbWFpbD0/JztcbiAgICAgIGxldCBxdWVyeSA9IG15c3FsLmZvcm1hdChzZWxlY3RRdWVyeSwgdXNlckRhdGEpO1xuICAgICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzKSB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHRzKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBsZXQgY3JlYXRlRXZlbnQgPSBcIkNyZWF0ZSBFdmVudCBJRiBOT1QgRVhJU1RTIGNsZWFyVG9rZW4gT04gU0NIRURVTEUgRVZFUlkgMSBIb3VyICBkbyB1cGRhdGUgVXNlcnMgc2V0IGFjY2Vzc1RvY2tlbiA9IE5VTEwgd2hlcmUgYWNjZXNzVG9rZW5EYXRlIDwgdGltZShub3coKSkgLSBJbnRlcnZhbCAxIEhvdXI7XCJcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkobXlzcWwuZm9ybWF0KGNyZWF0ZUV2ZW50KSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgbGV0IGdsb2JhbFNjaGVkdWwgPSBcInNldCBnbG9iYWwgZXZlbnRfc2NoZWR1bGVyID0gb247XCJcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkobXlzcWwuZm9ybWF0KGdsb2JhbFNjaGVkdWwpLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdCkge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vQ3JlYXRlIEV2ZW50IElGIE5PVCBFWElTVFMgcmVtb3ZlUHJvZHVjdCBPTiBTQ0hFRFVMRSBFVkVSWSAxIERheSAgZG8gRGVsZXRlIEZyb20gUHJvZHVjdHMgd2hlcmUgZXhwaXJhdGlvbiA8IHRpbWUobm93KCkpO1xuICAgICAgXG4gICAgfSk7XG4gIH1cbiAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.model.js"
      ],
      "names": [
        "module",
        "exports",
        "getUsers",
        "Promise",
        "resolve",
        "reject",
        "connection",
        "query",
        "error",
        "results",
        "console",
        "log",
        "getUser",
        "user",
        "userData",
        "email",
        "password",
        "selectQuery",
        "mysql",
        "format",
        "updateUser",
        "accessTocken",
        "date",
        "createEvent",
        "result",
        "globalSchedul"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEAA,MAAM,CAACC,OAAP,CAAeC,QAAf,GAA0B,YAAY;AAClC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,gCAAWC,KAAX,CAAiB,qBAAjB,EAAwC,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAChE,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,QAAAA,OAAO,CAACK,OAAD,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXH;;AAYET,MAAM,CAACC,OAAP,CAAeW,OAAf,GAAyB,UAAUC,IAAV,EAAgB;AACvC,SAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIS,QAAQ,GAAG,CAACD,IAAI,CAACE,KAAN,EAAaF,IAAI,CAACG,QAAlB,CAAf;AACA,QAAIC,WAAW,GAAG,mCAAlB;;AACA,QAAIV,KAAK,GAAGW,eAAMC,MAAN,CAAaF,WAAb,EAA0BH,QAA1B,CAAZ;;AACAR,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAChD,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACK,OAAD,CAAP;AACD;AACF,KAND;AAOD,GAXM,CAAP;AAYD,CAbD;;AAcAT,MAAM,CAACC,OAAP,CAAemB,UAAf,GAA4B,UAAUP,IAAV,EAAgB;AAC1C,SAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIS,QAAQ,GAAG,CAACD,IAAI,CAACQ,YAAN,EAAmBR,IAAI,CAACS,IAAxB,EAA8BT,IAAI,CAACE,KAAnC,CAAf;AACA,QAAIE,WAAW,GAAG,sEAAlB;;AACA,QAAIV,KAAK,GAAGW,eAAMC,MAAN,CAAaF,WAAb,EAA0BH,QAA1B,CAAZ;;AACAR,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAChD,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACK,OAAD,CAAP;AACD;AACF,KAND;;AAOA,QAAIc,WAAW,GAAG,gKAAlB;;AACAjB,gCAAWC,KAAX,CAAiBW,eAAMC,MAAN,CAAaI,WAAb,CAAjB,EAA4C,UAAUf,KAAV,EAAiBgB,MAAjB,EAAyB;AACnE,UAAIhB,KAAJ,EAAW;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAHD,MAGO;AACLJ,QAAAA,OAAO,CAACoB,MAAD,CAAP;AACD;AACF,KAPD;;AAQA,QAAIC,aAAa,GAAG,kCAApB;;AACAnB,gCAAWC,KAAX,CAAiBW,eAAMC,MAAN,CAAaM,aAAb,CAAjB,EAA8C,UAAUjB,KAAV,EAAiBgB,MAAjB,EAAyB;AACrE,UAAIhB,KAAJ,EAAW;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAHD,MAGO;AACLJ,QAAAA,OAAO,CAACoB,MAAD,CAAP;AACD;AACF,KAPD,EArBsC,CA8BtC;;AAED,GAhCM,CAAP;AAiCD,CAlCD",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "sourcesContent": [
        "import {connection} from './mysqlConnection'\nimport mysql from 'mysql'\n\nmodule.exports.getUsers = function () {\n    return new Promise((resolve, reject) => {\n      connection.query('SELECT * FROM Users', function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          console.log(results)\n          resolve(results);\n        }\n      });\n    });\n  }\n  module.exports.getUser = function (user) {\n    return new Promise((resolve, reject) => {\n      let userData = [user.email, user.password]\n      let selectQuery = 'SELECT * FROM Users where email=?';\n      let query = mysql.format(selectQuery, userData);\n      connection.query(query, function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(results);\n        }\n      });\n    });\n  }\n  module.exports.updateUser = function (user) {\n    return new Promise((resolve, reject) => {\n      let userData = [user.accessTocken,user.date, user.email]\n      let selectQuery = 'UPDATE Users Set accessTocken = ?, accessTokenDate = ? where email=?';\n      let query = mysql.format(selectQuery, userData);\n      connection.query(query, function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(results);\n        }\n      });\n      let createEvent = \"Create Event IF NOT EXISTS clearToken ON SCHEDULE EVERY 1 Hour  do update Users set accessTocken = NULL where accessTokenDate < time(now()) - Interval 1 Hour;\"\n      connection.query(mysql.format(createEvent), function (error, result) {\n        if (error) {\n          console.log(error)\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n      let globalSchedul = \"set global event_scheduler = on;\"\n      connection.query(mysql.format(globalSchedul), function (error, result) {\n        if (error) {\n          console.log(error)\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n\n      //Create Event IF NOT EXISTS removeProduct ON SCHEDULE EVERY 1 Day  do Delete From Products where expiration < time(now());\n      \n    });\n  }\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1583350299508
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/provider.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/provider.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/provider.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/provider.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
        "sourceFileName": "provider.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _provider = _interopRequireDefault(require(\"../controlers/provider.controler\"));\n\nvar _expressValidator = require(\"express-validator\");\n\nvar providerRouter = _express.default.Router();\n\nproviderRouter.route('/').post([(0, _expressValidator.check)('name').matches(/^[A-Z]{1}[a-z]{1,}$/).withMessage('Product names first simbol should be upper') // check('productPrice').matches(/^[1-9]{1}[0-9]{1,}$/).withMessage('Product price should be only numbers'),\n// check('productDate').isISO8601(\"MM-DD-YYYY\").withMessage('Date should be MM-DD-YYYY format '),\n// check('expiration').isISO8601(\"MM-DD-YYYY\").withMessage('The Expiration date should be MM-DD-YYYY format ')\n], _provider.default.addProvider).delete(_provider.default.deleteProvider);\nproviderRouter.route('/').get([(0, _expressValidator.check)('productId').isNumeric().withMessage(\"Product Id should be Alpha\")], _provider.default.getProviders);\nmodule.exports = providerRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVyLnJvdXRlci5qcyJdLCJuYW1lcyI6WyJwcm92aWRlclJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJyb3V0ZSIsInBvc3QiLCJtYXRjaGVzIiwid2l0aE1lc3NhZ2UiLCJjb250cm9sbGVyIiwiYWRkUHJvdmlkZXIiLCJkZWxldGUiLCJkZWxldGVQcm92aWRlciIsImdldCIsImlzTnVtZXJpYyIsImdldFByb3ZpZGVycyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFGQSxJQUFNQSxjQUFjLEdBQUdDLGlCQUFRQyxNQUFSLEVBQXZCOztBQUlBRixjQUFjLENBQUNHLEtBQWYsQ0FBcUIsR0FBckIsRUFDS0MsSUFETCxDQUNVLENBQUMsNkJBQU0sTUFBTixFQUFjQyxPQUFkLENBQXNCLHFCQUF0QixFQUE2Q0MsV0FBN0MsQ0FBeUQsNENBQXpELENBQUQsQ0FDRTtBQUNBO0FBQ0E7QUFIRixDQURWLEVBTVFDLGtCQUFXQyxXQU5uQixFQU9TQyxNQVBULENBT2dCRixrQkFBV0csY0FQM0I7QUFRQVYsY0FBYyxDQUFDRyxLQUFmLENBQXFCLEdBQXJCLEVBQ0tRLEdBREwsQ0FDUyxDQUFDLDZCQUFNLFdBQU4sRUFBbUJDLFNBQW5CLEdBQStCTixXQUEvQixDQUEyQyw0QkFBM0MsQ0FBRCxDQURULEVBQ29GQyxrQkFBV00sWUFEL0Y7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixjQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUvcm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5jb25zdCBwcm92aWRlclJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5pbXBvcnQgY29udHJvbGxlciBmcm9tICcuLi9jb250cm9sZXJzL3Byb3ZpZGVyLmNvbnRyb2xlcic7XG5pbXBvcnQge2NoZWNrfSBmcm9tICdleHByZXNzLXZhbGlkYXRvcic7XG5cbnByb3ZpZGVyUm91dGVyLnJvdXRlKCcvJylcbiAgICAucG9zdChbY2hlY2soJ25hbWUnKS5tYXRjaGVzKC9eW0EtWl17MX1bYS16XXsxLH0kLykud2l0aE1lc3NhZ2UoJ1Byb2R1Y3QgbmFtZXMgZmlyc3Qgc2ltYm9sIHNob3VsZCBiZSB1cHBlcicpXG4gICAgICAgICAgICAvLyBjaGVjaygncHJvZHVjdFByaWNlJykubWF0Y2hlcygvXlsxLTldezF9WzAtOV17MSx9JC8pLndpdGhNZXNzYWdlKCdQcm9kdWN0IHByaWNlIHNob3VsZCBiZSBvbmx5IG51bWJlcnMnKSxcbiAgICAgICAgICAgIC8vIGNoZWNrKCdwcm9kdWN0RGF0ZScpLmlzSVNPODYwMShcIk1NLURELVlZWVlcIikud2l0aE1lc3NhZ2UoJ0RhdGUgc2hvdWxkIGJlIE1NLURELVlZWVkgZm9ybWF0ICcpLFxuICAgICAgICAgICAgLy8gY2hlY2soJ2V4cGlyYXRpb24nKS5pc0lTTzg2MDEoXCJNTS1ERC1ZWVlZXCIpLndpdGhNZXNzYWdlKCdUaGUgRXhwaXJhdGlvbiBkYXRlIHNob3VsZCBiZSBNTS1ERC1ZWVlZIGZvcm1hdCAnKVxuICAgICAgICBdLFxuICAgICAgICBjb250cm9sbGVyLmFkZFByb3ZpZGVyKVxuICAgICAgICAuZGVsZXRlKGNvbnRyb2xsZXIuZGVsZXRlUHJvdmlkZXIpXG5wcm92aWRlclJvdXRlci5yb3V0ZSgnLycpXG4gICAgLmdldChbY2hlY2soJ3Byb2R1Y3RJZCcpLmlzTnVtZXJpYygpLndpdGhNZXNzYWdlKFwiUHJvZHVjdCBJZCBzaG91bGQgYmUgQWxwaGFcIildLGNvbnRyb2xsZXIuZ2V0UHJvdmlkZXJzKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByb3ZpZGVyUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "provider.router.js"
      ],
      "names": [
        "providerRouter",
        "express",
        "Router",
        "route",
        "post",
        "matches",
        "withMessage",
        "controller",
        "addProvider",
        "delete",
        "deleteProvider",
        "get",
        "isNumeric",
        "getProviders",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AAFA,IAAMA,cAAc,GAAGC,iBAAQC,MAAR,EAAvB;;AAIAF,cAAc,CAACG,KAAf,CAAqB,GAArB,EACKC,IADL,CACU,CAAC,6BAAM,MAAN,EAAcC,OAAd,CAAsB,qBAAtB,EAA6CC,WAA7C,CAAyD,4CAAzD,CAAD,CACE;AACA;AACA;AAHF,CADV,EAMQC,kBAAWC,WANnB,EAOSC,MAPT,CAOgBF,kBAAWG,cAP3B;AAQAV,cAAc,CAACG,KAAf,CAAqB,GAArB,EACKQ,GADL,CACS,CAAC,6BAAM,WAAN,EAAmBC,SAAnB,GAA+BN,WAA/B,CAA2C,4BAA3C,CAAD,CADT,EACoFC,kBAAWM,YAD/F;AAGAC,MAAM,CAACC,OAAP,GAAiBf,cAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "sourcesContent": [
        "import express from 'express'\nconst providerRouter = express.Router();\nimport controller from '../controlers/provider.controler';\nimport {check} from 'express-validator';\n\nproviderRouter.route('/')\n    .post([check('name').matches(/^[A-Z]{1}[a-z]{1,}$/).withMessage('Product names first simbol should be upper')\n            // check('productPrice').matches(/^[1-9]{1}[0-9]{1,}$/).withMessage('Product price should be only numbers'),\n            // check('productDate').isISO8601(\"MM-DD-YYYY\").withMessage('Date should be MM-DD-YYYY format '),\n            // check('expiration').isISO8601(\"MM-DD-YYYY\").withMessage('The Expiration date should be MM-DD-YYYY format ')\n        ],\n        controller.addProvider)\n        .delete(controller.deleteProvider)\nproviderRouter.route('/')\n    .get([check('productId').isNumeric().withMessage(\"Product Id should be Alpha\")],controller.getProviders)\n\nmodule.exports = providerRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1582829350722
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/provider.controler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/provider.controler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/provider.controler.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/provider.controler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
        "sourceFileName": "provider.controler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar provider = require('../models/providers.model');\n\nvar log4js = require('log4js');\n\nvar dotenv = require('dotenv');\n\nvar _require = require('express-validator'),\n    validationResult = _require.validationResult;\n\nvar fs = require('fs');\n\ndotenv.config();\nvar logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.addProvider = function _callee(req, res) {\n  var err, image, providerInfo, result;\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          err = validationResult(req);\n\n          if (err.isEmpty()) {\n            _context.next = 4;\n            break;\n          }\n\n          console.log(err);\n          return _context.abrupt(\"return\", res.status(422).json(err.errors));\n\n        case 4:\n          image = fs.readFileSync(req.files[0].path);\n          fs.unlink(req.files[0].path, function (err) {\n            if (err) {\n              console.error(err);\n              return;\n            }\n          });\n          providerInfo = req.body;\n          providerInfo.image = image;\n          _context.next = 10;\n          return _regenerator.default.awrap(provider.addProvider(providerInfo));\n\n        case 10:\n          result = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).jsonp(result));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getProviders = function _callee2(req, res) {\n  var err, _result, result;\n\n  return _regenerator.default.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          err = validationResult(req.query);\n\n          if (err.isEmpty()) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(422).jsonp(err.array()));\n\n        case 3:\n          if (!(Object.keys(req.query).length !== 0)) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 6;\n          return _regenerator.default.awrap(provider.getProviders(req.query));\n\n        case 6:\n          _result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(_result));\n\n        case 8:\n          _context2.next = 10;\n          return _regenerator.default.awrap(provider.getProviders());\n\n        case 10:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(result));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getProvider = function _callee3(req, res) {\n  var result;\n  return _regenerator.default.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (req.query) {\n            _context3.next = 3;\n            break;\n          }\n\n          logger.error(\"User registration request body is not exist\");\n          return _context3.abrupt(\"return\", res.sendStatus(400));\n\n        case 3:\n          _context3.next = 5;\n          return _regenerator.default.awrap(provider.getProvider(req.query));\n\n        case 5:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", res.status(200).json(result));\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.deleteProvider = function _callee4(req, res) {\n  var result;\n  return _regenerator.default.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (req.query) {\n            _context4.next = 3;\n            break;\n          }\n\n          logger.error(\"User registration request body is not exist\");\n          return _context4.abrupt(\"return\", res.sendStatus(400));\n\n        case 3:\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _regenerator.default.awrap(provider.deleteProvider(req.query));\n\n        case 6:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", res.status(200).json(result));\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](3);\n          return _context4.abrupt(\"return\", res.status(500).json(_context4.t0));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 10]]);\n};\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVyLmNvbnRyb2xlci5qcyJdLCJuYW1lcyI6WyJwcm92aWRlciIsInJlcXVpcmUiLCJsb2c0anMiLCJkb3RlbnYiLCJ2YWxpZGF0aW9uUmVzdWx0IiwiZnMiLCJjb25maWciLCJsb2dnZXIiLCJnZXRMb2dnZXIiLCJsZXZlbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJhZGRQcm92aWRlciIsInJlcSIsInJlcyIsImVyciIsImlzRW1wdHkiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwianNvbiIsImVycm9ycyIsImltYWdlIiwicmVhZEZpbGVTeW5jIiwiZmlsZXMiLCJwYXRoIiwidW5saW5rIiwiZXJyb3IiLCJwcm92aWRlckluZm8iLCJib2R5IiwicmVzdWx0IiwianNvbnAiLCJnZXRQcm92aWRlcnMiLCJxdWVyeSIsImFycmF5IiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImdldFByb3ZpZGVyIiwic2VuZFN0YXR1cyIsImRlbGV0ZVByb3ZpZGVyIiwib2JqIiwia2V5IiwiaGFzT3duUHJvcGVydHkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLDJCQUFELENBQXhCOztBQUNBLElBQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7ZUFDNkJBLE9BQU8sQ0FBQyxtQkFBRCxDO0lBQTVCRyxnQixZQUFBQSxnQjs7QUFDUixJQUFNQyxFQUFFLEdBQUdKLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUVBRSxNQUFNLENBQUNHLE1BQVA7QUFDQSxJQUFNQyxNQUFNLEdBQUdMLE1BQU0sQ0FBQ00sU0FBUCxFQUFmO0FBQ0FELE1BQU0sQ0FBQ0UsS0FBUCxHQUFlLE9BQWY7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxXQUFmLEdBQTZCLGlCQUFnQkMsR0FBaEIsRUFBcUJDLEdBQXJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNuQkMsVUFBQUEsR0FEbUIsR0FDYlgsZ0JBQWdCLENBQUNTLEdBQUQsQ0FESDs7QUFBQSxjQUVwQkUsR0FBRyxDQUFDQyxPQUFKLEVBRm9CO0FBQUE7QUFBQTtBQUFBOztBQUdyQkMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQVo7QUFIcUIsMkNBSWRELEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCTCxHQUFHLENBQUNNLE1BQXpCLENBSmM7O0FBQUE7QUFNckJDLFVBQUFBLEtBTnFCLEdBTWJqQixFQUFFLENBQUNrQixZQUFILENBQWdCVixHQUFHLENBQUNXLEtBQUosQ0FBVSxDQUFWLEVBQWFDLElBQTdCLENBTmE7QUFPekJwQixVQUFBQSxFQUFFLENBQUNxQixNQUFILENBQVViLEdBQUcsQ0FBQ1csS0FBSixDQUFVLENBQVYsRUFBYUMsSUFBdkIsRUFBNkIsVUFBQ1YsR0FBRCxFQUFTO0FBQ2xDLGdCQUFJQSxHQUFKLEVBQVM7QUFDUEUsY0FBQUEsT0FBTyxDQUFDVSxLQUFSLENBQWNaLEdBQWQ7QUFDQTtBQUNEO0FBQ0osV0FMRDtBQU1JYSxVQUFBQSxZQWJxQixHQWFOZixHQUFHLENBQUNnQixJQWJFO0FBY3pCRCxVQUFBQSxZQUFZLENBQUNOLEtBQWIsR0FBcUJBLEtBQXJCO0FBZHlCO0FBQUEsNENBZUp0QixRQUFRLENBQUNZLFdBQVQsQ0FBcUJnQixZQUFyQixDQWZJOztBQUFBO0FBZW5CRSxVQUFBQSxNQWZtQjtBQUFBLDJDQWdCbEJoQixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCWSxLQUFoQixDQUFzQkQsTUFBdEIsQ0FoQmtCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQTdCOztBQW1CQXBCLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlcUIsWUFBZixHQUE4QixrQkFBZ0JuQixHQUFoQixFQUFxQkMsR0FBckI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNwQkMsVUFBQUEsR0FEb0IsR0FDZFgsZ0JBQWdCLENBQUNTLEdBQUcsQ0FBQ29CLEtBQUwsQ0FERjs7QUFBQSxjQUVyQmxCLEdBQUcsQ0FBQ0MsT0FBSixFQUZxQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSw0Q0FHZkYsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQlksS0FBaEIsQ0FBc0JoQixHQUFHLENBQUNtQixLQUFKLEVBQXRCLENBSGU7O0FBQUE7QUFBQSxnQkFLdEJDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZdkIsR0FBRyxDQUFDb0IsS0FBaEIsRUFBdUJJLE1BQXZCLEtBQWtDLENBTFo7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSw0Q0FNRHJDLFFBQVEsQ0FBQ2dDLFlBQVQsQ0FBc0JuQixHQUFHLENBQUNvQixLQUExQixDQU5DOztBQUFBO0FBTWhCSCxVQUFBQSxPQU5nQjtBQUFBLDRDQU9maEIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJVLE9BQXJCLENBUGU7O0FBQUE7QUFBQTtBQUFBLDRDQVNMOUIsUUFBUSxDQUFDZ0MsWUFBVCxFQVRLOztBQUFBO0FBU3BCRixVQUFBQSxNQVRvQjtBQUFBLDRDQVVuQmhCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxNQUFyQixDQVZtQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUE5Qjs7QUFZQXBCLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlMkIsV0FBZixHQUE2QixrQkFBZ0J6QixHQUFoQixFQUFxQkMsR0FBckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FDcEJELEdBQUcsQ0FBQ29CLEtBRGdCO0FBQUE7QUFBQTtBQUFBOztBQUVyQjFCLFVBQUFBLE1BQU0sQ0FBQ29CLEtBQVA7QUFGcUIsNENBR2RiLEdBQUcsQ0FBQ3lCLFVBQUosQ0FBZSxHQUFmLENBSGM7O0FBQUE7QUFBQTtBQUFBLDRDQUtKdkMsUUFBUSxDQUFDc0MsV0FBVCxDQUFxQnpCLEdBQUcsQ0FBQ29CLEtBQXpCLENBTEk7O0FBQUE7QUFLbkJILFVBQUFBLE1BTG1CO0FBQUEsNENBTWxCaEIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJVLE1BQXJCLENBTmtCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQTdCOztBQVVBcEIsTUFBTSxDQUFDQyxPQUFQLENBQWU2QixjQUFmLEdBQWdDLGtCQUFnQjNCLEdBQWhCLEVBQXFCQyxHQUFyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQUN2QkQsR0FBRyxDQUFDb0IsS0FEbUI7QUFBQTtBQUFBO0FBQUE7O0FBRXhCMUIsVUFBQUEsTUFBTSxDQUFDb0IsS0FBUDtBQUZ3Qiw0Q0FHakJiLEdBQUcsQ0FBQ3lCLFVBQUosQ0FBZSxHQUFmLENBSGlCOztBQUFBO0FBQUE7QUFBQTtBQUFBLDRDQU1IdkMsUUFBUSxDQUFDd0MsY0FBVCxDQUF3QjNCLEdBQUcsQ0FBQ29CLEtBQTVCLENBTkc7O0FBQUE7QUFNbEJILFVBQUFBLE1BTmtCO0FBQUEsNENBT2pCaEIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJVLE1BQXJCLENBUGlCOztBQUFBO0FBQUE7QUFBQTtBQUFBLDRDQVNqQmhCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLGNBVGlCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQWhDOztBQWNBLFNBQVNKLE9BQVQsQ0FBaUJ5QixHQUFqQixFQUFzQjtBQUNsQixPQUFJLElBQUlDLEdBQVIsSUFBZUQsR0FBZixFQUFvQjtBQUNoQixRQUFHQSxHQUFHLENBQUNFLGNBQUosQ0FBbUJELEdBQW5CLENBQUgsRUFDSSxPQUFPLEtBQVA7QUFDUDs7QUFDRCxTQUFPLElBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUvY29udHJvbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHByb3ZpZGVyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3Byb3ZpZGVycy5tb2RlbCcpO1xuY29uc3QgbG9nNGpzID0gcmVxdWlyZSgnbG9nNGpzJyk7XG5jb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcbmNvbnN0IHsgdmFsaWRhdGlvblJlc3VsdCB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3InKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuXG5kb3RlbnYuY29uZmlnKCk7XG5jb25zdCBsb2dnZXIgPSBsb2c0anMuZ2V0TG9nZ2VyKCk7XG5sb2dnZXIubGV2ZWwgPSBcImRlYnVnXCI7XG5cbm1vZHVsZS5leHBvcnRzLmFkZFByb3ZpZGVyID0gYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgZXJyID0gdmFsaWRhdGlvblJlc3VsdChyZXEpXG4gICAgaWYgKCFlcnIuaXNFbXB0eSgpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKGVyci5lcnJvcnMpO1xuICAgIH1cbiAgICBsZXQgaW1hZ2UgPSBmcy5yZWFkRmlsZVN5bmMocmVxLmZpbGVzWzBdLnBhdGgpXG4gICAgZnMudW5saW5rKHJlcS5maWxlc1swXS5wYXRoLCAoZXJyKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycilcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgIH0pXG4gICAgbGV0IHByb3ZpZGVySW5mbyA9IHJlcS5ib2R5XG4gICAgcHJvdmlkZXJJbmZvLmltYWdlID0gaW1hZ2VcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm92aWRlci5hZGRQcm92aWRlcihwcm92aWRlckluZm8pICAgXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29ucChyZXN1bHQpXG5cbn1cbm1vZHVsZS5leHBvcnRzLmdldFByb3ZpZGVycyA9IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGNvbnN0IGVyciA9IHZhbGlkYXRpb25SZXN1bHQocmVxLnF1ZXJ5KVxuICAgIGlmICghZXJyLmlzRW1wdHkoKSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb25wKGVyci5hcnJheSgpKTtcbiAgICB9XG4gICAgaWYgKE9iamVjdC5rZXlzKHJlcS5xdWVyeSkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHByb3ZpZGVyLmdldFByb3ZpZGVycyhyZXEucXVlcnkpXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQpXG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHByb3ZpZGVyLmdldFByb3ZpZGVycygpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdClcbn1cbm1vZHVsZS5leHBvcnRzLmdldFByb3ZpZGVyID0gYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgaWYgKCFyZXEucXVlcnkpIHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGBVc2VyIHJlZ2lzdHJhdGlvbiByZXF1ZXN0IGJvZHkgaXMgbm90IGV4aXN0YCk7XG4gICAgICAgIHJldHVybiByZXMuc2VuZFN0YXR1cyg0MDApO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm92aWRlci5nZXRQcm92aWRlcihyZXEucXVlcnkpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdClcblxufVxuXG5tb2R1bGUuZXhwb3J0cy5kZWxldGVQcm92aWRlciA9IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGlmICghcmVxLnF1ZXJ5KSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgVXNlciByZWdpc3RyYXRpb24gcmVxdWVzdCBib2R5IGlzIG5vdCBleGlzdGApO1xuICAgICAgICByZXR1cm4gcmVzLnNlbmRTdGF0dXMoNDAwKTtcbiAgICB9XG4gICAgdHJ5e1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm92aWRlci5kZWxldGVQcm92aWRlcihyZXEucXVlcnkpXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQpXG4gICAgfWNhdGNoKGVycm9yKXtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycm9yKVxuICAgIH1cbiAgIFxuXG59XG5mdW5jdGlvbiBpc0VtcHR5KG9iaikge1xuICAgIGZvcih2YXIga2V5IGluIG9iaikge1xuICAgICAgICBpZihvYmouaGFzT3duUHJvcGVydHkoa2V5KSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "provider.controler.js"
      ],
      "names": [
        "provider",
        "require",
        "log4js",
        "dotenv",
        "validationResult",
        "fs",
        "config",
        "logger",
        "getLogger",
        "level",
        "module",
        "exports",
        "addProvider",
        "req",
        "res",
        "err",
        "isEmpty",
        "console",
        "log",
        "status",
        "json",
        "errors",
        "image",
        "readFileSync",
        "files",
        "path",
        "unlink",
        "error",
        "providerInfo",
        "body",
        "result",
        "jsonp",
        "getProviders",
        "query",
        "array",
        "Object",
        "keys",
        "length",
        "getProvider",
        "sendStatus",
        "deleteProvider",
        "obj",
        "key",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;eAC6BA,OAAO,CAAC,mBAAD,C;IAA5BG,gB,YAAAA,gB;;AACR,IAAMC,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEAE,MAAM,CAACG,MAAP;AACA,IAAMC,MAAM,GAAGL,MAAM,CAACM,SAAP,EAAf;AACAD,MAAM,CAACE,KAAP,GAAe,OAAf;;AAEAC,MAAM,CAACC,OAAP,CAAeC,WAAf,GAA6B,iBAAgBC,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,GADmB,GACbX,gBAAgB,CAACS,GAAD,CADH;;AAAA,cAEpBE,GAAG,CAACC,OAAJ,EAFoB;AAAA;AAAA;AAAA;;AAGrBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAHqB,2CAIdD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAAG,CAACM,MAAzB,CAJc;;AAAA;AAMrBC,UAAAA,KANqB,GAMbjB,EAAE,CAACkB,YAAH,CAAgBV,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAaC,IAA7B,CANa;AAOzBpB,UAAAA,EAAE,CAACqB,MAAH,CAAUb,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAaC,IAAvB,EAA6B,UAACV,GAAD,EAAS;AAClC,gBAAIA,GAAJ,EAAS;AACPE,cAAAA,OAAO,CAACU,KAAR,CAAcZ,GAAd;AACA;AACD;AACJ,WALD;AAMIa,UAAAA,YAbqB,GAaNf,GAAG,CAACgB,IAbE;AAczBD,UAAAA,YAAY,CAACN,KAAb,GAAqBA,KAArB;AAdyB;AAAA,4CAeJtB,QAAQ,CAACY,WAAT,CAAqBgB,YAArB,CAfI;;AAAA;AAenBE,UAAAA,MAfmB;AAAA,2CAgBlBhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBY,KAAhB,CAAsBD,MAAtB,CAhBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAmBApB,MAAM,CAACC,OAAP,CAAeqB,YAAf,GAA8B,kBAAgBnB,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,GADoB,GACdX,gBAAgB,CAACS,GAAG,CAACoB,KAAL,CADF;;AAAA,cAErBlB,GAAG,CAACC,OAAJ,EAFqB;AAAA;AAAA;AAAA;;AAAA,4CAGfF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBY,KAAhB,CAAsBhB,GAAG,CAACmB,KAAJ,EAAtB,CAHe;;AAAA;AAAA,gBAKtBC,MAAM,CAACC,IAAP,CAAYvB,GAAG,CAACoB,KAAhB,EAAuBI,MAAvB,KAAkC,CALZ;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAMDrC,QAAQ,CAACgC,YAAT,CAAsBnB,GAAG,CAACoB,KAA1B,CANC;;AAAA;AAMhBH,UAAAA,OANgB;AAAA,4CAOfhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,OAArB,CAPe;;AAAA;AAAA;AAAA,4CASL9B,QAAQ,CAACgC,YAAT,EATK;;AAAA;AASpBF,UAAAA,MAToB;AAAA,4CAUnBhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,MAArB,CAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAYApB,MAAM,CAACC,OAAP,CAAe2B,WAAf,GAA6B,kBAAgBzB,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACpBD,GAAG,CAACoB,KADgB;AAAA;AAAA;AAAA;;AAErB1B,UAAAA,MAAM,CAACoB,KAAP;AAFqB,4CAGdb,GAAG,CAACyB,UAAJ,CAAe,GAAf,CAHc;;AAAA;AAAA;AAAA,4CAKJvC,QAAQ,CAACsC,WAAT,CAAqBzB,GAAG,CAACoB,KAAzB,CALI;;AAAA;AAKnBH,UAAAA,MALmB;AAAA,4CAMlBhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,MAArB,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAUApB,MAAM,CAACC,OAAP,CAAe6B,cAAf,GAAgC,kBAAgB3B,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACvBD,GAAG,CAACoB,KADmB;AAAA;AAAA;AAAA;;AAExB1B,UAAAA,MAAM,CAACoB,KAAP;AAFwB,4CAGjBb,GAAG,CAACyB,UAAJ,CAAe,GAAf,CAHiB;;AAAA;AAAA;AAAA;AAAA,4CAMHvC,QAAQ,CAACwC,cAAT,CAAwB3B,GAAG,CAACoB,KAA5B,CANG;;AAAA;AAMlBH,UAAAA,MANkB;AAAA,4CAOjBhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,MAArB,CAPiB;;AAAA;AAAA;AAAA;AAAA,4CASjBhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cATiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAcA,SAASJ,OAAT,CAAiByB,GAAjB,EAAsB;AAClB,OAAI,IAAIC,GAAR,IAAeD,GAAf,EAAoB;AAChB,QAAGA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAH,EACI,OAAO,KAAP;AACP;;AACD,SAAO,IAAP;AACH",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "sourcesContent": [
        "const provider = require('../models/providers.model');\nconst log4js = require('log4js');\nconst dotenv = require('dotenv');\nconst { validationResult } = require('express-validator');\nconst fs = require('fs')\n\ndotenv.config();\nconst logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.addProvider = async function (req, res) {\n    const err = validationResult(req)\n    if (!err.isEmpty()) {\n        console.log(err)\n        return res.status(422).json(err.errors);\n    }\n    let image = fs.readFileSync(req.files[0].path)\n    fs.unlink(req.files[0].path, (err) => {\n        if (err) {\n          console.error(err)\n          return\n        }\n    })\n    let providerInfo = req.body\n    providerInfo.image = image\n    const result = await provider.addProvider(providerInfo)   \n    return res.status(200).jsonp(result)\n\n}\nmodule.exports.getProviders = async function (req, res) {\n    const err = validationResult(req.query)\n    if (!err.isEmpty()) {\n        return res.status(422).jsonp(err.array());\n    }\n    if (Object.keys(req.query).length !== 0) {\n        const result = await provider.getProviders(req.query)\n        return res.status(200).json(result)\n    }\n    const result = await provider.getProviders()\n    return res.status(200).json(result)\n}\nmodule.exports.getProvider = async function (req, res) {\n    if (!req.query) {\n        logger.error(`User registration request body is not exist`);\n        return res.sendStatus(400);\n    }\n    const result = await provider.getProvider(req.query)\n    return res.status(200).json(result)\n\n}\n\nmodule.exports.deleteProvider = async function (req, res) {\n    if (!req.query) {\n        logger.error(`User registration request body is not exist`);\n        return res.sendStatus(400);\n    }\n    try{\n        const result = await provider.deleteProvider(req.query)\n        return res.status(200).json(result)\n    }catch(error){\n        return res.status(500).json(error)\n    }\n   \n\n}\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1582829287009
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/providers.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/providers.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/providers.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/providers.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
        "sourceFileName": "providers.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _mysqlConnection = require(\"./mysqlConnection\");\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nmodule.exports.getProviders = function () {\n  return new Promise(function (resolve, reject) {\n    _mysqlConnection.connection.query('SELECT * FROM Providers', function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.addProvider = function (data) {\n  return new Promise(function (resolve, reject) {\n    var insertQuery = 'INSERT INTO Providers (??,??,??,??,??) VALUES (?,?,?,?,?)';\n\n    var query = _mysql.default.format(insertQuery, [\"name\", \"surname\", \"phone\", \"email\", \"image\", data.name, data.surname, data.phone, data.email, data.image]);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var response = {\n        \"message\": \"succesed\",\n        \"insertId\": results.insertId\n      };\n      console.log(response);\n      resolve(response);\n    });\n  });\n};\n\nmodule.exports.updateProvider = function (data) {\n  return new Promise(function (resolve, reject) {\n    var insertQuery = 'INSERT INTO ?? (??,??,??,??,??) VALUES (?,?,?,?,?)';\n\n    var query = _mysql.default.format(insertQuery, [\"Providers\", \"name\", \"surename\", \"address\", \"phone\", \"email\", data.name, data.surename, data.address, data.phone, data.email]);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var respons = {\n        \"message\": \"succesed\",\n        \"insertId\": results.insertId\n      };\n      resolve(respons);\n    });\n  });\n};\n\nmodule.exports.deleteProvider = function (params) {\n  return new Promise(function (resolve, reject) {\n    var array = [];\n\n    for (var i in params) {\n      array.push(i);\n      array.push(params[i]);\n    }\n\n    var selectQuery = 'DELETE  FROM Providers where ?? = ?';\n\n    var query = _mysql.default.format(selectQuery, array);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var respons = {\n        \"message\": \"success\",\n        results: results\n      };\n      resolve(respons);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVycy5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0UHJvdmlkZXJzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJjb25uZWN0aW9uIiwicXVlcnkiLCJlcnJvciIsInJlc3VsdHMiLCJhZGRQcm92aWRlciIsImRhdGEiLCJpbnNlcnRRdWVyeSIsIm15c3FsIiwiZm9ybWF0IiwibmFtZSIsInN1cm5hbWUiLCJwaG9uZSIsImVtYWlsIiwiaW1hZ2UiLCJjb25zb2xlIiwicmVzcG9uc2UiLCJpbnNlcnRJZCIsImxvZyIsInVwZGF0ZVByb3ZpZGVyIiwic3VyZW5hbWUiLCJhZGRyZXNzIiwicmVzcG9ucyIsImRlbGV0ZVByb3ZpZGVyIiwicGFyYW1zIiwiYXJyYXkiLCJpIiwicHVzaCIsInNlbGVjdFF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxZQUFmLEdBQThCLFlBQVk7QUFDdEMsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDQyxnQ0FBV0MsS0FBWCxDQUFpQix5QkFBakIsRUFBNEMsVUFBVUMsS0FBVixFQUFpQkMsT0FBakIsRUFBMEI7QUFDcEUsVUFBSUQsS0FBSixFQUFXO0FBQ1RILFFBQUFBLE1BQU0sQ0FBQ0csS0FBRCxDQUFOO0FBQ0QsT0FGRCxNQUVPO0FBQ0xKLFFBQUFBLE9BQU8sQ0FBQ0ssT0FBRCxDQUFQO0FBQ0Q7QUFDRixLQU5EO0FBT0QsR0FSTSxDQUFQO0FBU0QsQ0FWSDs7QUFXRVQsTUFBTSxDQUFDQyxPQUFQLENBQWVTLFdBQWYsR0FBNkIsVUFBVUMsSUFBVixFQUFnQjtBQUMzQyxTQUFPLElBQUlSLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdEMsUUFBSU8sV0FBVyxHQUFHLDJEQUFsQjs7QUFDQSxRQUFJTCxLQUFLLEdBQUdNLGVBQU1DLE1BQU4sQ0FBYUYsV0FBYixFQUEwQixDQUFDLE1BQUQsRUFBUyxTQUFULEVBQW9CLE9BQXBCLEVBQTZCLE9BQTdCLEVBQXFDLE9BQXJDLEVBQThDRCxJQUFJLENBQUNJLElBQW5ELEVBQXlESixJQUFJLENBQUNLLE9BQTlELEVBQXdFTCxJQUFJLENBQUNNLEtBQTdFLEVBQW9GTixJQUFJLENBQUNPLEtBQXpGLEVBQStGUCxJQUFJLENBQUNRLEtBQXBHLENBQTFCLENBQVo7O0FBQ0FiLGdDQUFXQyxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixVQUFDQyxLQUFELEVBQVFDLE9BQVIsRUFBb0I7QUFDMUMsVUFBSUQsS0FBSixFQUFXO0FBQ1RZLFFBQUFBLE9BQU8sQ0FBQ1osS0FBUixDQUFjQSxLQUFkO0FBQ0FILFFBQUFBLE1BQU0sQ0FBQ0csS0FBRCxDQUFOO0FBQ0E7QUFDRDs7QUFDRCxVQUFJYSxRQUFRLEdBQUc7QUFDYixtQkFBVSxVQURHO0FBRWIsb0JBQVdaLE9BQU8sQ0FBQ2E7QUFGTixPQUFmO0FBSUFGLE1BQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZRixRQUFaO0FBQ0FqQixNQUFBQSxPQUFPLENBQUNpQixRQUFELENBQVA7QUFDRCxLQVpEO0FBYUQsR0FoQk0sQ0FBUDtBQWlCRCxDQWxCRDs7QUFvQkFyQixNQUFNLENBQUNDLE9BQVAsQ0FBZXVCLGNBQWYsR0FBZ0MsVUFBVWIsSUFBVixFQUFnQjtBQUM5QyxTQUFPLElBQUlSLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdEMsUUFBSU8sV0FBVyxHQUFHLG9EQUFsQjs7QUFDQSxRQUFJTCxLQUFLLEdBQUdNLGVBQU1DLE1BQU4sQ0FBYUYsV0FBYixFQUEwQixDQUFDLFdBQUQsRUFBYyxNQUFkLEVBQXNCLFVBQXRCLEVBQWtDLFNBQWxDLEVBQTZDLE9BQTdDLEVBQXNELE9BQXRELEVBQStERCxJQUFJLENBQUNJLElBQXBFLEVBQXlFSixJQUFJLENBQUNjLFFBQTlFLEVBQXdGZCxJQUFJLENBQUNlLE9BQTdGLEVBQXNHZixJQUFJLENBQUNNLEtBQTNHLEVBQWtITixJQUFJLENBQUNPLEtBQXZILENBQTFCLENBQVo7O0FBQ0FaLGdDQUFXQyxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixVQUFDQyxLQUFELEVBQVFDLE9BQVIsRUFBb0I7QUFDMUMsVUFBSUQsS0FBSixFQUFXO0FBQ1RZLFFBQUFBLE9BQU8sQ0FBQ1osS0FBUixDQUFjQSxLQUFkO0FBQ0FILFFBQUFBLE1BQU0sQ0FBQ0csS0FBRCxDQUFOO0FBQ0E7QUFDRDs7QUFDRCxVQUFJbUIsT0FBTyxHQUFHO0FBQ1osbUJBQVUsVUFERTtBQUVaLG9CQUFXbEIsT0FBTyxDQUFDYTtBQUZQLE9BQWQ7QUFJQWxCLE1BQUFBLE9BQU8sQ0FBQ3VCLE9BQUQsQ0FBUDtBQUNELEtBWEQ7QUFZRCxHQWZNLENBQVA7QUFnQkQsQ0FqQkQ7O0FBa0JBM0IsTUFBTSxDQUFDQyxPQUFQLENBQWUyQixjQUFmLEdBQWdDLFVBQVVDLE1BQVYsRUFBa0I7QUFDaEQsU0FBTyxJQUFJMUIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQyxRQUFJeUIsS0FBSyxHQUFHLEVBQVo7O0FBQ0YsU0FBSyxJQUFPQyxDQUFaLElBQWlCRixNQUFqQixFQUEwQjtBQUN4QkMsTUFBQUEsS0FBSyxDQUFDRSxJQUFOLENBQVdELENBQVg7QUFDQUQsTUFBQUEsS0FBSyxDQUFDRSxJQUFOLENBQVdILE1BQU0sQ0FBQ0UsQ0FBRCxDQUFqQjtBQUNEOztBQUVELFFBQUlFLFdBQVcsR0FBRyxxQ0FBbEI7O0FBQ0EsUUFBSTFCLEtBQUssR0FBR00sZUFBTUMsTUFBTixDQUFhbUIsV0FBYixFQUEwQkgsS0FBMUIsQ0FBWjs7QUFDQXhCLGdDQUFXQyxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixVQUFDQyxLQUFELEVBQVFDLE9BQVIsRUFBb0I7QUFDMUMsVUFBSUQsS0FBSixFQUFXO0FBQ1RZLFFBQUFBLE9BQU8sQ0FBQ1osS0FBUixDQUFjQSxLQUFkO0FBQ0FILFFBQUFBLE1BQU0sQ0FBQ0csS0FBRCxDQUFOO0FBQ0E7QUFDRDs7QUFDRCxVQUFJbUIsT0FBTyxHQUFHO0FBQ1osbUJBQVUsU0FERTtBQUVabEIsUUFBQUEsT0FBTyxFQUFQQTtBQUZZLE9BQWQ7QUFJQUwsTUFBQUEsT0FBTyxDQUFDdUIsT0FBRCxDQUFQO0FBQ0QsS0FYRDtBQVlELEdBckJNLENBQVA7QUFzQkQsQ0F2QkQiLCJzb3VyY2VSb290IjoiL2hvbWUvaHVuYW4vRGVza3RvcC9JbnN0aWdhdGUvV2ViLVN0b3JhZ2Uvd2ViLXN0b3JhZ2UvYmFja2VuZC9Ob2RlL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y29ubmVjdGlvbn0gZnJvbSAnLi9teXNxbENvbm5lY3Rpb24nXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnXG5cbm1vZHVsZS5leHBvcnRzLmdldFByb3ZpZGVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSBQcm92aWRlcnMnLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMpIHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdHMpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBtb2R1bGUuZXhwb3J0cy5hZGRQcm92aWRlciA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCBpbnNlcnRRdWVyeSA9ICdJTlNFUlQgSU5UTyBQcm92aWRlcnMgKD8/LD8/LD8/LD8/LD8/KSBWQUxVRVMgKD8sPyw/LD8sPyknO1xuICAgICAgbGV0IHF1ZXJ5ID0gbXlzcWwuZm9ybWF0KGluc2VydFF1ZXJ5LCBbXCJuYW1lXCIsIFwic3VybmFtZVwiLCBcInBob25lXCIsIFwiZW1haWxcIixcImltYWdlXCIsIGRhdGEubmFtZSwgZGF0YS5zdXJuYW1lLCAgZGF0YS5waG9uZSwgZGF0YS5lbWFpbCxkYXRhLmltYWdlXSk7XG4gICAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzcG9uc2UgPSB7XG4gICAgICAgICAgXCJtZXNzYWdlXCI6XCJzdWNjZXNlZFwiLFxuICAgICAgICAgIFwiaW5zZXJ0SWRcIjpyZXN1bHRzLmluc2VydElkXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpXG4gICAgICAgIHJlc29sdmUocmVzcG9uc2UpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG1vZHVsZS5leHBvcnRzLnVwZGF0ZVByb3ZpZGVyID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGluc2VydFF1ZXJ5ID0gJ0lOU0VSVCBJTlRPID8/ICg/Pyw/Pyw/Pyw/Pyw/PykgVkFMVUVTICg/LD8sPyw/LD8pJztcbiAgICAgIGxldCBxdWVyeSA9IG15c3FsLmZvcm1hdChpbnNlcnRRdWVyeSwgW1wiUHJvdmlkZXJzXCIsIFwibmFtZVwiLCBcInN1cmVuYW1lXCIsIFwiYWRkcmVzc1wiLCBcInBob25lXCIsIFwiZW1haWxcIiwgZGF0YS5uYW1lLGRhdGEuc3VyZW5hbWUsIGRhdGEuYWRkcmVzcywgZGF0YS5waG9uZSwgZGF0YS5lbWFpbF0pO1xuICAgICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgKGVycm9yLCByZXN1bHRzKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJlc3BvbnMgPSB7XG4gICAgICAgICAgXCJtZXNzYWdlXCI6XCJzdWNjZXNlZFwiLFxuICAgICAgICAgIFwiaW5zZXJ0SWRcIjpyZXN1bHRzLmluc2VydElkXG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZShyZXNwb25zKVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgbW9kdWxlLmV4cG9ydHMuZGVsZXRlUHJvdmlkZXIgPSBmdW5jdGlvbiAocGFyYW1zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgbGV0IGFycmF5ID0gW11cbiAgICAgIGZvciAoY29uc3QgIGkgaW4gcGFyYW1zICkge1xuICAgICAgICBhcnJheS5wdXNoKGkpXG4gICAgICAgIGFycmF5LnB1c2gocGFyYW1zW2ldKVxuICAgICAgfVxuICBcbiAgICAgIGxldCBzZWxlY3RRdWVyeSA9ICdERUxFVEUgIEZST00gUHJvdmlkZXJzIHdoZXJlID8/ID0gPyc7XG4gICAgICBsZXQgcXVlcnkgPSBteXNxbC5mb3JtYXQoc2VsZWN0UXVlcnksIGFycmF5KTtcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIChlcnJvciwgcmVzdWx0cykgPT4ge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCByZXNwb25zID0ge1xuICAgICAgICAgIFwibWVzc2FnZVwiOlwic3VjY2Vzc1wiLFxuICAgICAgICAgIHJlc3VsdHNcbiAgICAgICAgfVxuICAgICAgICByZXNvbHZlKHJlc3BvbnMpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "providers.model.js"
      ],
      "names": [
        "module",
        "exports",
        "getProviders",
        "Promise",
        "resolve",
        "reject",
        "connection",
        "query",
        "error",
        "results",
        "addProvider",
        "data",
        "insertQuery",
        "mysql",
        "format",
        "name",
        "surname",
        "phone",
        "email",
        "image",
        "console",
        "response",
        "insertId",
        "log",
        "updateProvider",
        "surename",
        "address",
        "respons",
        "deleteProvider",
        "params",
        "array",
        "i",
        "push",
        "selectQuery"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEAA,MAAM,CAACC,OAAP,CAAeC,YAAf,GAA8B,YAAY;AACtC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,gCAAWC,KAAX,CAAiB,yBAAjB,EAA4C,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACpE,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACK,OAAD,CAAP;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAVH;;AAWET,MAAM,CAACC,OAAP,CAAeS,WAAf,GAA6B,UAAUC,IAAV,EAAgB;AAC3C,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIO,WAAW,GAAG,2DAAlB;;AACA,QAAIL,KAAK,GAAGM,eAAMC,MAAN,CAAaF,WAAb,EAA0B,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,OAA7B,EAAqC,OAArC,EAA8CD,IAAI,CAACI,IAAnD,EAAyDJ,IAAI,CAACK,OAA9D,EAAwEL,IAAI,CAACM,KAA7E,EAAoFN,IAAI,CAACO,KAAzF,EAA+FP,IAAI,CAACQ,KAApG,CAA1B,CAAZ;;AACAb,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTY,QAAAA,OAAO,CAACZ,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAIa,QAAQ,GAAG;AACb,mBAAU,UADG;AAEb,oBAAWZ,OAAO,CAACa;AAFN,OAAf;AAIAF,MAAAA,OAAO,CAACG,GAAR,CAAYF,QAAZ;AACAjB,MAAAA,OAAO,CAACiB,QAAD,CAAP;AACD,KAZD;AAaD,GAhBM,CAAP;AAiBD,CAlBD;;AAoBArB,MAAM,CAACC,OAAP,CAAeuB,cAAf,GAAgC,UAAUb,IAAV,EAAgB;AAC9C,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIO,WAAW,GAAG,oDAAlB;;AACA,QAAIL,KAAK,GAAGM,eAAMC,MAAN,CAAaF,WAAb,EAA0B,CAAC,WAAD,EAAc,MAAd,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,OAA7C,EAAsD,OAAtD,EAA+DD,IAAI,CAACI,IAApE,EAAyEJ,IAAI,CAACc,QAA9E,EAAwFd,IAAI,CAACe,OAA7F,EAAsGf,IAAI,CAACM,KAA3G,EAAkHN,IAAI,CAACO,KAAvH,CAA1B,CAAZ;;AACAZ,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTY,QAAAA,OAAO,CAACZ,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAImB,OAAO,GAAG;AACZ,mBAAU,UADE;AAEZ,oBAAWlB,OAAO,CAACa;AAFP,OAAd;AAIAlB,MAAAA,OAAO,CAACuB,OAAD,CAAP;AACD,KAXD;AAYD,GAfM,CAAP;AAgBD,CAjBD;;AAkBA3B,MAAM,CAACC,OAAP,CAAe2B,cAAf,GAAgC,UAAUC,MAAV,EAAkB;AAChD,SAAO,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIyB,KAAK,GAAG,EAAZ;;AACF,SAAK,IAAOC,CAAZ,IAAiBF,MAAjB,EAA0B;AACxBC,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACAD,MAAAA,KAAK,CAACE,IAAN,CAAWH,MAAM,CAACE,CAAD,CAAjB;AACD;;AAED,QAAIE,WAAW,GAAG,qCAAlB;;AACA,QAAI1B,KAAK,GAAGM,eAAMC,MAAN,CAAamB,WAAb,EAA0BH,KAA1B,CAAZ;;AACAxB,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTY,QAAAA,OAAO,CAACZ,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAImB,OAAO,GAAG;AACZ,mBAAU,SADE;AAEZlB,QAAAA,OAAO,EAAPA;AAFY,OAAd;AAIAL,MAAAA,OAAO,CAACuB,OAAD,CAAP;AACD,KAXD;AAYD,GArBM,CAAP;AAsBD,CAvBD",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "sourcesContent": [
        "import {connection} from './mysqlConnection'\nimport mysql from 'mysql'\n\nmodule.exports.getProviders = function () {\n    return new Promise((resolve, reject) => {\n      connection.query('SELECT * FROM Providers', function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(results);\n        }\n      });\n    });\n  }\n  module.exports.addProvider = function (data) {\n    return new Promise((resolve, reject) => {\n      let insertQuery = 'INSERT INTO Providers (??,??,??,??,??) VALUES (?,?,?,?,?)';\n      let query = mysql.format(insertQuery, [\"name\", \"surname\", \"phone\", \"email\",\"image\", data.name, data.surname,  data.phone, data.email,data.image]);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let response = {\n          \"message\":\"succesed\",\n          \"insertId\":results.insertId\n        }\n        console.log(response)\n        resolve(response)\n      });\n    });\n  }\n\n  module.exports.updateProvider = function (data) {\n    return new Promise((resolve, reject) => {\n      let insertQuery = 'INSERT INTO ?? (??,??,??,??,??) VALUES (?,?,?,?,?)';\n      let query = mysql.format(insertQuery, [\"Providers\", \"name\", \"surename\", \"address\", \"phone\", \"email\", data.name,data.surename, data.address, data.phone, data.email]);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let respons = {\n          \"message\":\"succesed\",\n          \"insertId\":results.insertId\n        }\n        resolve(respons)\n      });\n    });\n  }\n  module.exports.deleteProvider = function (params) {\n    return new Promise((resolve, reject) => {\n        let array = []\n      for (const  i in params ) {\n        array.push(i)\n        array.push(params[i])\n      }\n  \n      let selectQuery = 'DELETE  FROM Providers where ?? = ?';\n      let query = mysql.format(selectQuery, array);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let respons = {\n          \"message\":\"success\",\n          results\n        }\n        resolve(respons)\n      });\n    });\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1582488640809
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/shop.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/shop.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/shop.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/shop.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
        "sourceFileName": "shop.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _shop = _interopRequireDefault(require(\"../controlers/shop.controler\"));\n\nvar _expressValidator = require(\"express-validator\");\n\nvar shopRouter = _express.default.Router();\n\nshopRouter.route('/').post([(0, _expressValidator.check)('name').matches(/^[A-Z]{1}[a-z]{1,}$/).withMessage('Product names first simbol should be upper') // check('productPrice').matches(/^[1-9]{1}[0-9]{1,}$/).withMessage('Product price should be only numbers'),\n// check('productDate').isISO8601(\"MM-DD-YYYY\").withMessage('Date should be MM-DD-YYYY format '),\n// check('expiration').isISO8601(\"MM-DD-YYYY\").withMessage('The Expiration date should be MM-DD-YYYY format ')\n], _shop.default.addShop).delete(_shop.default.deleteShop);\nshopRouter.route('/').get([(0, _expressValidator.check)('productId').isNumeric().withMessage(\"Product Id should be Alpha\")], _shop.default.getShops);\nmodule.exports = shopRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3Aucm91dGVyLmpzIl0sIm5hbWVzIjpbInNob3BSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicm91dGUiLCJwb3N0IiwibWF0Y2hlcyIsIndpdGhNZXNzYWdlIiwiY29udHJvbGxlciIsImFkZFNob3AiLCJkZWxldGUiLCJkZWxldGVTaG9wIiwiZ2V0IiwiaXNOdW1lcmljIiwiZ2V0U2hvcHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBRkEsSUFBTUEsVUFBVSxHQUFHQyxpQkFBUUMsTUFBUixFQUFuQjs7QUFJQUYsVUFBVSxDQUFDRyxLQUFYLENBQWlCLEdBQWpCLEVBQ0tDLElBREwsQ0FDVSxDQUFDLDZCQUFNLE1BQU4sRUFBY0MsT0FBZCxDQUFzQixxQkFBdEIsRUFBNkNDLFdBQTdDLENBQXlELDRDQUF6RCxDQUFELENBQ0U7QUFDQTtBQUNBO0FBSEYsQ0FEVixFQU1RQyxjQUFXQyxPQU5uQixFQU9TQyxNQVBULENBT2dCRixjQUFXRyxVQVAzQjtBQVFBVixVQUFVLENBQUNHLEtBQVgsQ0FBaUIsR0FBakIsRUFDS1EsR0FETCxDQUNTLENBQUMsNkJBQU0sV0FBTixFQUFtQkMsU0FBbkIsR0FBK0JOLFdBQS9CLENBQTJDLDRCQUEzQyxDQUFELENBRFQsRUFDb0ZDLGNBQVdNLFFBRC9GO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsVUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvaHVuYW4vRGVza3RvcC9JbnN0aWdhdGUvV2ViLVN0b3JhZ2Uvd2ViLXN0b3JhZ2UvYmFja2VuZC9Ob2RlL3JvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuY29uc3Qgc2hvcFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5pbXBvcnQgY29udHJvbGxlciBmcm9tICcuLi9jb250cm9sZXJzL3Nob3AuY29udHJvbGVyJztcbmltcG9ydCB7Y2hlY2t9IGZyb20gJ2V4cHJlc3MtdmFsaWRhdG9yJztcblxuc2hvcFJvdXRlci5yb3V0ZSgnLycpXG4gICAgLnBvc3QoW2NoZWNrKCduYW1lJykubWF0Y2hlcygvXltBLVpdezF9W2Etel17MSx9JC8pLndpdGhNZXNzYWdlKCdQcm9kdWN0IG5hbWVzIGZpcnN0IHNpbWJvbCBzaG91bGQgYmUgdXBwZXInKVxuICAgICAgICAgICAgLy8gY2hlY2soJ3Byb2R1Y3RQcmljZScpLm1hdGNoZXMoL15bMS05XXsxfVswLTldezEsfSQvKS53aXRoTWVzc2FnZSgnUHJvZHVjdCBwcmljZSBzaG91bGQgYmUgb25seSBudW1iZXJzJyksXG4gICAgICAgICAgICAvLyBjaGVjaygncHJvZHVjdERhdGUnKS5pc0lTTzg2MDEoXCJNTS1ERC1ZWVlZXCIpLndpdGhNZXNzYWdlKCdEYXRlIHNob3VsZCBiZSBNTS1ERC1ZWVlZIGZvcm1hdCAnKSxcbiAgICAgICAgICAgIC8vIGNoZWNrKCdleHBpcmF0aW9uJykuaXNJU084NjAxKFwiTU0tREQtWVlZWVwiKS53aXRoTWVzc2FnZSgnVGhlIEV4cGlyYXRpb24gZGF0ZSBzaG91bGQgYmUgTU0tREQtWVlZWSBmb3JtYXQgJylcbiAgICAgICAgXSxcbiAgICAgICAgY29udHJvbGxlci5hZGRTaG9wKVxuICAgICAgICAuZGVsZXRlKGNvbnRyb2xsZXIuZGVsZXRlU2hvcClcbnNob3BSb3V0ZXIucm91dGUoJy8nKVxuICAgIC5nZXQoW2NoZWNrKCdwcm9kdWN0SWQnKS5pc051bWVyaWMoKS53aXRoTWVzc2FnZShcIlByb2R1Y3QgSWQgc2hvdWxkIGJlIEFscGhhXCIpXSxjb250cm9sbGVyLmdldFNob3BzKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3BSb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "shop.router.js"
      ],
      "names": [
        "shopRouter",
        "express",
        "Router",
        "route",
        "post",
        "matches",
        "withMessage",
        "controller",
        "addShop",
        "delete",
        "deleteShop",
        "get",
        "isNumeric",
        "getShops",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AAFA,IAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAIAF,UAAU,CAACG,KAAX,CAAiB,GAAjB,EACKC,IADL,CACU,CAAC,6BAAM,MAAN,EAAcC,OAAd,CAAsB,qBAAtB,EAA6CC,WAA7C,CAAyD,4CAAzD,CAAD,CACE;AACA;AACA;AAHF,CADV,EAMQC,cAAWC,OANnB,EAOSC,MAPT,CAOgBF,cAAWG,UAP3B;AAQAV,UAAU,CAACG,KAAX,CAAiB,GAAjB,EACKQ,GADL,CACS,CAAC,6BAAM,WAAN,EAAmBC,SAAnB,GAA+BN,WAA/B,CAA2C,4BAA3C,CAAD,CADT,EACoFC,cAAWM,QAD/F;AAGAC,MAAM,CAACC,OAAP,GAAiBf,UAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "sourcesContent": [
        "import express from 'express'\nconst shopRouter = express.Router();\nimport controller from '../controlers/shop.controler';\nimport {check} from 'express-validator';\n\nshopRouter.route('/')\n    .post([check('name').matches(/^[A-Z]{1}[a-z]{1,}$/).withMessage('Product names first simbol should be upper')\n            // check('productPrice').matches(/^[1-9]{1}[0-9]{1,}$/).withMessage('Product price should be only numbers'),\n            // check('productDate').isISO8601(\"MM-DD-YYYY\").withMessage('Date should be MM-DD-YYYY format '),\n            // check('expiration').isISO8601(\"MM-DD-YYYY\").withMessage('The Expiration date should be MM-DD-YYYY format ')\n        ],\n        controller.addShop)\n        .delete(controller.deleteShop)\nshopRouter.route('/')\n    .get([check('productId').isNumeric().withMessage(\"Product Id should be Alpha\")],controller.getShops)\n\nmodule.exports = shopRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1582829428104
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/shop.controler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/shop.controler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/shop.controler.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/shop.controler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
        "sourceFileName": "shop.controler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar shop = require('../models/shops.model');\n\nvar log4js = require('log4js');\n\nvar dotenv = require('dotenv');\n\nvar _require = require('express-validator'),\n    validationResult = _require.validationResult;\n\nvar fs = require('fs');\n\ndotenv.config();\nvar logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.addShop = function _callee(req, res) {\n  var err, image, shopInfo, result;\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          err = validationResult(req);\n\n          if (err.isEmpty()) {\n            _context.next = 4;\n            break;\n          }\n\n          console.log(err);\n          return _context.abrupt(\"return\", res.status(422).json(err.errors));\n\n        case 4:\n          image = fs.readFileSync(req.files[0].path);\n          fs.unlink(req.files[0].path, function (err) {\n            if (err) {\n              console.error(err);\n              return;\n            }\n          });\n          shopInfo = req.body;\n          shopInfo.image = image;\n          _context.next = 10;\n          return _regenerator.default.awrap(shop.addShop(shopInfo));\n\n        case 10:\n          result = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).jsonp(result));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getShops = function _callee2(req, res) {\n  var err, _result, result;\n\n  return _regenerator.default.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          err = validationResult(req.query);\n\n          if (err.isEmpty()) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(422).jsonp(err.array()));\n\n        case 3:\n          if (!(Object.keys(req.query).length !== 0)) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 6;\n          return _regenerator.default.awrap(shop.getShops(req.query));\n\n        case 6:\n          _result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(_result));\n\n        case 8:\n          _context2.next = 10;\n          return _regenerator.default.awrap(shop.getShops());\n\n        case 10:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(result));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getShop = function _callee3(req, res) {\n  var result;\n  return _regenerator.default.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (req.query) {\n            _context3.next = 3;\n            break;\n          }\n\n          logger.error(\"User registration request body is not exist\");\n          return _context3.abrupt(\"return\", res.sendStatus(400));\n\n        case 3:\n          _context3.next = 5;\n          return _regenerator.default.awrap(shop.getShop(req.query));\n\n        case 5:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", res.status(200).json(result));\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.deleteShop = function _callee4(req, res) {\n  var result;\n  return _regenerator.default.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regenerator.default.awrap(shop.deleteShop(req.query));\n\n        case 3:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", res.status(200).json(result));\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", res.status(500).json(_context4.t0));\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 7]]);\n};\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3AuY29udHJvbGVyLmpzIl0sIm5hbWVzIjpbInNob3AiLCJyZXF1aXJlIiwibG9nNGpzIiwiZG90ZW52IiwidmFsaWRhdGlvblJlc3VsdCIsImZzIiwiY29uZmlnIiwibG9nZ2VyIiwiZ2V0TG9nZ2VyIiwibGV2ZWwiLCJtb2R1bGUiLCJleHBvcnRzIiwiYWRkU2hvcCIsInJlcSIsInJlcyIsImVyciIsImlzRW1wdHkiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwianNvbiIsImVycm9ycyIsImltYWdlIiwicmVhZEZpbGVTeW5jIiwiZmlsZXMiLCJwYXRoIiwidW5saW5rIiwiZXJyb3IiLCJzaG9wSW5mbyIsImJvZHkiLCJyZXN1bHQiLCJqc29ucCIsImdldFNob3BzIiwicXVlcnkiLCJhcnJheSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJnZXRTaG9wIiwic2VuZFN0YXR1cyIsImRlbGV0ZVNob3AiLCJvYmoiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXRCOztlQUM2QkEsT0FBTyxDQUFDLG1CQUFELEM7SUFBNUJHLGdCLFlBQUFBLGdCOztBQUNSLElBQU1DLEVBQUUsR0FBR0osT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBRUFFLE1BQU0sQ0FBQ0csTUFBUDtBQUNBLElBQU1DLE1BQU0sR0FBR0wsTUFBTSxDQUFDTSxTQUFQLEVBQWY7QUFDQUQsTUFBTSxDQUFDRSxLQUFQLEdBQWUsT0FBZjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLENBQWVDLE9BQWYsR0FBeUIsaUJBQWdCQyxHQUFoQixFQUFxQkMsR0FBckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2ZDLFVBQUFBLEdBRGUsR0FDVFgsZ0JBQWdCLENBQUNTLEdBQUQsQ0FEUDs7QUFBQSxjQUVoQkUsR0FBRyxDQUFDQyxPQUFKLEVBRmdCO0FBQUE7QUFBQTtBQUFBOztBQUdqQkMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQVo7QUFIaUIsMkNBSVZELEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCTCxHQUFHLENBQUNNLE1BQXpCLENBSlU7O0FBQUE7QUFNakJDLFVBQUFBLEtBTmlCLEdBTVRqQixFQUFFLENBQUNrQixZQUFILENBQWdCVixHQUFHLENBQUNXLEtBQUosQ0FBVSxDQUFWLEVBQWFDLElBQTdCLENBTlM7QUFPckJwQixVQUFBQSxFQUFFLENBQUNxQixNQUFILENBQVViLEdBQUcsQ0FBQ1csS0FBSixDQUFVLENBQVYsRUFBYUMsSUFBdkIsRUFBNkIsVUFBQ1YsR0FBRCxFQUFTO0FBQ2xDLGdCQUFJQSxHQUFKLEVBQVM7QUFDUEUsY0FBQUEsT0FBTyxDQUFDVSxLQUFSLENBQWNaLEdBQWQ7QUFDQTtBQUNEO0FBQ0osV0FMRDtBQU1JYSxVQUFBQSxRQWJpQixHQWFOZixHQUFHLENBQUNnQixJQWJFO0FBY3JCRCxVQUFBQSxRQUFRLENBQUNOLEtBQVQsR0FBaUJBLEtBQWpCO0FBZHFCO0FBQUEsNENBZUF0QixJQUFJLENBQUNZLE9BQUwsQ0FBYWdCLFFBQWIsQ0FmQTs7QUFBQTtBQWVmRSxVQUFBQSxNQWZlO0FBQUEsMkNBZ0JkaEIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQlksS0FBaEIsQ0FBc0JELE1BQXRCLENBaEJjOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXpCOztBQW1CQXBCLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlcUIsUUFBZixHQUEwQixrQkFBZ0JuQixHQUFoQixFQUFxQkMsR0FBckI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNoQkMsVUFBQUEsR0FEZ0IsR0FDVlgsZ0JBQWdCLENBQUNTLEdBQUcsQ0FBQ29CLEtBQUwsQ0FETjs7QUFBQSxjQUVqQmxCLEdBQUcsQ0FBQ0MsT0FBSixFQUZpQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSw0Q0FHWEYsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQlksS0FBaEIsQ0FBc0JoQixHQUFHLENBQUNtQixLQUFKLEVBQXRCLENBSFc7O0FBQUE7QUFBQSxnQkFLbEJDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZdkIsR0FBRyxDQUFDb0IsS0FBaEIsRUFBdUJJLE1BQXZCLEtBQWtDLENBTGhCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsNENBTUdyQyxJQUFJLENBQUNnQyxRQUFMLENBQWNuQixHQUFHLENBQUNvQixLQUFsQixDQU5IOztBQUFBO0FBTVpILFVBQUFBLE9BTlk7QUFBQSw0Q0FPWGhCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxPQUFyQixDQVBXOztBQUFBO0FBQUE7QUFBQSw0Q0FTRDlCLElBQUksQ0FBQ2dDLFFBQUwsRUFUQzs7QUFBQTtBQVNoQkYsVUFBQUEsTUFUZ0I7QUFBQSw0Q0FVZmhCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVSxNQUFyQixDQVZlOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQTFCOztBQVlBcEIsTUFBTSxDQUFDQyxPQUFQLENBQWUyQixPQUFmLEdBQXlCLGtCQUFnQnpCLEdBQWhCLEVBQXFCQyxHQUFyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQUNoQkQsR0FBRyxDQUFDb0IsS0FEWTtBQUFBO0FBQUE7QUFBQTs7QUFFakIxQixVQUFBQSxNQUFNLENBQUNvQixLQUFQO0FBRmlCLDRDQUdWYixHQUFHLENBQUN5QixVQUFKLENBQWUsR0FBZixDQUhVOztBQUFBO0FBQUE7QUFBQSw0Q0FLQXZDLElBQUksQ0FBQ3NDLE9BQUwsQ0FBYXpCLEdBQUcsQ0FBQ29CLEtBQWpCLENBTEE7O0FBQUE7QUFLZkgsVUFBQUEsTUFMZTtBQUFBLDRDQU1kaEIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJVLE1BQXJCLENBTmM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBekI7O0FBVUFwQixNQUFNLENBQUNDLE9BQVAsQ0FBZTZCLFVBQWYsR0FBNEIsa0JBQWdCM0IsR0FBaEIsRUFBcUJDLEdBQXJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0Q0FFQ2QsSUFBSSxDQUFDd0MsVUFBTCxDQUFnQjNCLEdBQUcsQ0FBQ29CLEtBQXBCLENBRkQ7O0FBQUE7QUFFZEgsVUFBQUEsTUFGYztBQUFBLDRDQUdiaEIsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJVLE1BQXJCLENBSGE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsNENBS2JoQixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixjQUxhOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQTVCOztBQVVBLFNBQVNKLE9BQVQsQ0FBaUJ5QixHQUFqQixFQUFzQjtBQUNsQixPQUFJLElBQUlDLEdBQVIsSUFBZUQsR0FBZixFQUFvQjtBQUNoQixRQUFHQSxHQUFHLENBQUNFLGNBQUosQ0FBbUJELEdBQW5CLENBQUgsRUFDSSxPQUFPLEtBQVA7QUFDUDs7QUFDRCxTQUFPLElBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUvY29udHJvbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNob3AgPSByZXF1aXJlKCcuLi9tb2RlbHMvc2hvcHMubW9kZWwnKTtcbmNvbnN0IGxvZzRqcyA9IHJlcXVpcmUoJ2xvZzRqcycpO1xuY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XG5jb25zdCB7IHZhbGlkYXRpb25SZXN1bHQgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJylcblxuZG90ZW52LmNvbmZpZygpO1xuY29uc3QgbG9nZ2VyID0gbG9nNGpzLmdldExvZ2dlcigpO1xubG9nZ2VyLmxldmVsID0gXCJkZWJ1Z1wiO1xuXG5tb2R1bGUuZXhwb3J0cy5hZGRTaG9wID0gYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgZXJyID0gdmFsaWRhdGlvblJlc3VsdChyZXEpXG4gICAgaWYgKCFlcnIuaXNFbXB0eSgpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKGVyci5lcnJvcnMpO1xuICAgIH1cbiAgICBsZXQgaW1hZ2UgPSBmcy5yZWFkRmlsZVN5bmMocmVxLmZpbGVzWzBdLnBhdGgpXG4gICAgZnMudW5saW5rKHJlcS5maWxlc1swXS5wYXRoLCAoZXJyKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycilcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgIH0pXG4gICAgbGV0IHNob3BJbmZvID0gcmVxLmJvZHlcbiAgICBzaG9wSW5mby5pbWFnZSA9IGltYWdlXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2hvcC5hZGRTaG9wKHNob3BJbmZvKSAgIFxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbnAocmVzdWx0KVxuXG59XG5tb2R1bGUuZXhwb3J0cy5nZXRTaG9wcyA9IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGNvbnN0IGVyciA9IHZhbGlkYXRpb25SZXN1bHQocmVxLnF1ZXJ5KVxuICAgIGlmICghZXJyLmlzRW1wdHkoKSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb25wKGVyci5hcnJheSgpKTtcbiAgICB9XG4gICAgaWYgKE9iamVjdC5rZXlzKHJlcS5xdWVyeSkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNob3AuZ2V0U2hvcHMocmVxLnF1ZXJ5KVxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0KVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzaG9wLmdldFNob3BzKClcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0KVxufVxubW9kdWxlLmV4cG9ydHMuZ2V0U2hvcCA9IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGlmICghcmVxLnF1ZXJ5KSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgVXNlciByZWdpc3RyYXRpb24gcmVxdWVzdCBib2R5IGlzIG5vdCBleGlzdGApO1xuICAgICAgICByZXR1cm4gcmVzLnNlbmRTdGF0dXMoNDAwKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2hvcC5nZXRTaG9wKHJlcS5xdWVyeSlcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0KVxuXG59XG5cbm1vZHVsZS5leHBvcnRzLmRlbGV0ZVNob3AgPSBhc3luYyBmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgICB0cnl7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNob3AuZGVsZXRlU2hvcChyZXEucXVlcnkpXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQpXG4gICAgfWNhdGNoKGVycm9yKXtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycm9yKVxuICAgIH1cbiAgIFxuXG59XG5mdW5jdGlvbiBpc0VtcHR5KG9iaikge1xuICAgIGZvcih2YXIga2V5IGluIG9iaikge1xuICAgICAgICBpZihvYmouaGFzT3duUHJvcGVydHkoa2V5KSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "shop.controler.js"
      ],
      "names": [
        "shop",
        "require",
        "log4js",
        "dotenv",
        "validationResult",
        "fs",
        "config",
        "logger",
        "getLogger",
        "level",
        "module",
        "exports",
        "addShop",
        "req",
        "res",
        "err",
        "isEmpty",
        "console",
        "log",
        "status",
        "json",
        "errors",
        "image",
        "readFileSync",
        "files",
        "path",
        "unlink",
        "error",
        "shopInfo",
        "body",
        "result",
        "jsonp",
        "getShops",
        "query",
        "array",
        "Object",
        "keys",
        "length",
        "getShop",
        "sendStatus",
        "deleteShop",
        "obj",
        "key",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;eAC6BA,OAAO,CAAC,mBAAD,C;IAA5BG,gB,YAAAA,gB;;AACR,IAAMC,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEAE,MAAM,CAACG,MAAP;AACA,IAAMC,MAAM,GAAGL,MAAM,CAACM,SAAP,EAAf;AACAD,MAAM,CAACE,KAAP,GAAe,OAAf;;AAEAC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,iBAAgBC,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,GADe,GACTX,gBAAgB,CAACS,GAAD,CADP;;AAAA,cAEhBE,GAAG,CAACC,OAAJ,EAFgB;AAAA;AAAA;AAAA;;AAGjBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAHiB,2CAIVD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAAG,CAACM,MAAzB,CAJU;;AAAA;AAMjBC,UAAAA,KANiB,GAMTjB,EAAE,CAACkB,YAAH,CAAgBV,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAaC,IAA7B,CANS;AAOrBpB,UAAAA,EAAE,CAACqB,MAAH,CAAUb,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAaC,IAAvB,EAA6B,UAACV,GAAD,EAAS;AAClC,gBAAIA,GAAJ,EAAS;AACPE,cAAAA,OAAO,CAACU,KAAR,CAAcZ,GAAd;AACA;AACD;AACJ,WALD;AAMIa,UAAAA,QAbiB,GAaNf,GAAG,CAACgB,IAbE;AAcrBD,UAAAA,QAAQ,CAACN,KAAT,GAAiBA,KAAjB;AAdqB;AAAA,4CAeAtB,IAAI,CAACY,OAAL,CAAagB,QAAb,CAfA;;AAAA;AAefE,UAAAA,MAfe;AAAA,2CAgBdhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBY,KAAhB,CAAsBD,MAAtB,CAhBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAmBApB,MAAM,CAACC,OAAP,CAAeqB,QAAf,GAA0B,kBAAgBnB,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,GADgB,GACVX,gBAAgB,CAACS,GAAG,CAACoB,KAAL,CADN;;AAAA,cAEjBlB,GAAG,CAACC,OAAJ,EAFiB;AAAA;AAAA;AAAA;;AAAA,4CAGXF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBY,KAAhB,CAAsBhB,GAAG,CAACmB,KAAJ,EAAtB,CAHW;;AAAA;AAAA,gBAKlBC,MAAM,CAACC,IAAP,CAAYvB,GAAG,CAACoB,KAAhB,EAAuBI,MAAvB,KAAkC,CALhB;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAMGrC,IAAI,CAACgC,QAAL,CAAcnB,GAAG,CAACoB,KAAlB,CANH;;AAAA;AAMZH,UAAAA,OANY;AAAA,4CAOXhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,OAArB,CAPW;;AAAA;AAAA;AAAA,4CASD9B,IAAI,CAACgC,QAAL,EATC;;AAAA;AAShBF,UAAAA,MATgB;AAAA,4CAUfhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,MAArB,CAVe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAYApB,MAAM,CAACC,OAAP,CAAe2B,OAAf,GAAyB,kBAAgBzB,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAChBD,GAAG,CAACoB,KADY;AAAA;AAAA;AAAA;;AAEjB1B,UAAAA,MAAM,CAACoB,KAAP;AAFiB,4CAGVb,GAAG,CAACyB,UAAJ,CAAe,GAAf,CAHU;;AAAA;AAAA;AAAA,4CAKAvC,IAAI,CAACsC,OAAL,CAAazB,GAAG,CAACoB,KAAjB,CALA;;AAAA;AAKfH,UAAAA,MALe;AAAA,4CAMdhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,MAArB,CANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAUApB,MAAM,CAACC,OAAP,CAAe6B,UAAf,GAA4B,kBAAgB3B,GAAhB,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAECd,IAAI,CAACwC,UAAL,CAAgB3B,GAAG,CAACoB,KAApB,CAFD;;AAAA;AAEdH,UAAAA,MAFc;AAAA,4CAGbhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,MAArB,CAHa;;AAAA;AAAA;AAAA;AAAA,4CAKbhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAUA,SAASJ,OAAT,CAAiByB,GAAjB,EAAsB;AAClB,OAAI,IAAIC,GAAR,IAAeD,GAAf,EAAoB;AAChB,QAAGA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAH,EACI,OAAO,KAAP;AACP;;AACD,SAAO,IAAP;AACH",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "sourcesContent": [
        "const shop = require('../models/shops.model');\nconst log4js = require('log4js');\nconst dotenv = require('dotenv');\nconst { validationResult } = require('express-validator');\nconst fs = require('fs')\n\ndotenv.config();\nconst logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.addShop = async function (req, res) {\n    const err = validationResult(req)\n    if (!err.isEmpty()) {\n        console.log(err)\n        return res.status(422).json(err.errors);\n    }\n    let image = fs.readFileSync(req.files[0].path)\n    fs.unlink(req.files[0].path, (err) => {\n        if (err) {\n          console.error(err)\n          return\n        }\n    })\n    let shopInfo = req.body\n    shopInfo.image = image\n    const result = await shop.addShop(shopInfo)   \n    return res.status(200).jsonp(result)\n\n}\nmodule.exports.getShops = async function (req, res) {\n    const err = validationResult(req.query)\n    if (!err.isEmpty()) {\n        return res.status(422).jsonp(err.array());\n    }\n    if (Object.keys(req.query).length !== 0) {\n        const result = await shop.getShops(req.query)\n        return res.status(200).json(result)\n    }\n    const result = await shop.getShops()\n    return res.status(200).json(result)\n}\nmodule.exports.getShop = async function (req, res) {\n    if (!req.query) {\n        logger.error(`User registration request body is not exist`);\n        return res.sendStatus(400);\n    }\n    const result = await shop.getShop(req.query)\n    return res.status(200).json(result)\n\n}\n\nmodule.exports.deleteShop = async function (req, res) {\n    try{\n        const result = await shop.deleteShop(req.query)\n        return res.status(200).json(result)\n    }catch(error){\n        return res.status(500).json(error)\n    }\n   \n\n}\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1582828944933
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/shops.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/shops.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/shops.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/shops.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
        "sourceFileName": "shops.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _mysqlConnection = require(\"./mysqlConnection\");\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nmodule.exports.getShops = function () {\n  return new Promise(function (resolve, reject) {\n    _mysqlConnection.connection.query('SELECT * FROM Shops', function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.addShop = function (data) {\n  return new Promise(function (resolve, reject) {\n    var insertQuery = 'INSERT INTO Shops (??,??,??,??,??) VALUES (?,?,?,?,?)';\n\n    var query = _mysql.default.format(insertQuery, [\"name\", \"address\", \"phone\", \"email\", \"image\", data.name, data.address, data.phone, data.email, data.image]);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      console.log(results);\n      var respons = {\n        \"message\": \"succesed\",\n        \"insertId\": results.insertId\n      };\n      resolve(respons);\n    });\n  });\n};\n\nmodule.exports.deleteShop = function (params) {\n  return new Promise(function (resolve, reject) {\n    var array = [];\n\n    for (var i in params) {\n      array.push(i);\n      array.push(params[i]);\n    }\n\n    var selectQuery = 'DELETE  FROM Shops where ?? = ?';\n\n    var query = _mysql.default.format(selectQuery, array);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var respons = {\n        \"message\": \"success\",\n        results: results\n      };\n      resolve(respons);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3BzLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRTaG9wcyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY29ubmVjdGlvbiIsInF1ZXJ5IiwiZXJyb3IiLCJyZXN1bHRzIiwiYWRkU2hvcCIsImRhdGEiLCJpbnNlcnRRdWVyeSIsIm15c3FsIiwiZm9ybWF0IiwibmFtZSIsImFkZHJlc3MiLCJwaG9uZSIsImVtYWlsIiwiaW1hZ2UiLCJjb25zb2xlIiwibG9nIiwicmVzcG9ucyIsImluc2VydElkIiwiZGVsZXRlU2hvcCIsInBhcmFtcyIsImFycmF5IiwiaSIsInB1c2giLCJzZWxlY3RRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUVBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsUUFBZixHQUEwQixZQUFZO0FBQ2xDLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUN0Q0MsZ0NBQVdDLEtBQVgsQ0FBaUIscUJBQWpCLEVBQXdDLFVBQVVDLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQ2hFLFVBQUlELEtBQUosRUFBVztBQUNUSCxRQUFBQSxNQUFNLENBQUNHLEtBQUQsQ0FBTjtBQUNELE9BRkQsTUFFTztBQUNMSixRQUFBQSxPQUFPLENBQUNLLE9BQUQsQ0FBUDtBQUNEO0FBQ0YsS0FORDtBQU9ELEdBUk0sQ0FBUDtBQVNELENBVkg7O0FBWUVULE1BQU0sQ0FBQ0MsT0FBUCxDQUFlUyxPQUFmLEdBQXlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDdkMsU0FBTyxJQUFJUixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDLFFBQUlPLFdBQVcsR0FBRyx1REFBbEI7O0FBQ0EsUUFBSUwsS0FBSyxHQUFHTSxlQUFNQyxNQUFOLENBQWFGLFdBQWIsRUFBMEIsQ0FBQyxNQUFELEVBQVMsU0FBVCxFQUFvQixPQUFwQixFQUE2QixPQUE3QixFQUFxQyxPQUFyQyxFQUE4Q0QsSUFBSSxDQUFDSSxJQUFuRCxFQUF5REosSUFBSSxDQUFDSyxPQUE5RCxFQUF1RUwsSUFBSSxDQUFDTSxLQUE1RSxFQUFtRk4sSUFBSSxDQUFDTyxLQUF4RixFQUErRlAsSUFBSSxDQUFDUSxLQUFwRyxDQUExQixDQUFaOztBQUNBYixnQ0FBV0MsS0FBWCxDQUFpQkEsS0FBakIsRUFBd0IsVUFBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQW9CO0FBQzFDLFVBQUlELEtBQUosRUFBVztBQUNUWSxRQUFBQSxPQUFPLENBQUNaLEtBQVIsQ0FBY0EsS0FBZDtBQUNBSCxRQUFBQSxNQUFNLENBQUNHLEtBQUQsQ0FBTjtBQUNBO0FBQ0Q7O0FBQ0RZLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWixPQUFaO0FBQ0EsVUFBSWEsT0FBTyxHQUFHO0FBQ1osbUJBQVUsVUFERTtBQUVaLG9CQUFXYixPQUFPLENBQUNjO0FBRlAsT0FBZDtBQUlBbkIsTUFBQUEsT0FBTyxDQUFDa0IsT0FBRCxDQUFQO0FBQ0QsS0FaRDtBQWFELEdBaEJNLENBQVA7QUFpQkQsQ0FsQkQ7O0FBbUJBdEIsTUFBTSxDQUFDQyxPQUFQLENBQWV1QixVQUFmLEdBQTRCLFVBQVVDLE1BQVYsRUFBa0I7QUFDNUMsU0FBTyxJQUFJdEIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQyxRQUFJcUIsS0FBSyxHQUFHLEVBQVo7O0FBQ0YsU0FBSyxJQUFPQyxDQUFaLElBQWlCRixNQUFqQixFQUEwQjtBQUN4QkMsTUFBQUEsS0FBSyxDQUFDRSxJQUFOLENBQVdELENBQVg7QUFDQUQsTUFBQUEsS0FBSyxDQUFDRSxJQUFOLENBQVdILE1BQU0sQ0FBQ0UsQ0FBRCxDQUFqQjtBQUNEOztBQUVELFFBQUlFLFdBQVcsR0FBRyxpQ0FBbEI7O0FBQ0EsUUFBSXRCLEtBQUssR0FBR00sZUFBTUMsTUFBTixDQUFhZSxXQUFiLEVBQTBCSCxLQUExQixDQUFaOztBQUNBcEIsZ0NBQVdDLEtBQVgsQ0FBaUJBLEtBQWpCLEVBQXdCLFVBQUNDLEtBQUQsRUFBUUMsT0FBUixFQUFvQjtBQUMxQyxVQUFJRCxLQUFKLEVBQVc7QUFDVFksUUFBQUEsT0FBTyxDQUFDWixLQUFSLENBQWNBLEtBQWQ7QUFDQUgsUUFBQUEsTUFBTSxDQUFDRyxLQUFELENBQU47QUFDQTtBQUNEOztBQUNELFVBQUljLE9BQU8sR0FBRztBQUNaLG1CQUFVLFNBREU7QUFFWmIsUUFBQUEsT0FBTyxFQUFQQTtBQUZZLE9BQWQ7QUFJQUwsTUFBQUEsT0FBTyxDQUFDa0IsT0FBRCxDQUFQO0FBQ0QsS0FYRDtBQVlELEdBckJNLENBQVA7QUFzQkQsQ0F2QkQiLCJzb3VyY2VSb290IjoiL2hvbWUvaHVuYW4vRGVza3RvcC9JbnN0aWdhdGUvV2ViLVN0b3JhZ2Uvd2ViLXN0b3JhZ2UvYmFja2VuZC9Ob2RlL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y29ubmVjdGlvbn0gZnJvbSAnLi9teXNxbENvbm5lY3Rpb24nXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnXG5cbm1vZHVsZS5leHBvcnRzLmdldFNob3BzID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIFNob3BzJywgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzKSB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHRzKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBtb2R1bGUuZXhwb3J0cy5hZGRTaG9wID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGluc2VydFF1ZXJ5ID0gJ0lOU0VSVCBJTlRPIFNob3BzICg/Pyw/Pyw/Pyw/Pyw/PykgVkFMVUVTICg/LD8sPyw/LD8pJztcbiAgICAgIGxldCBxdWVyeSA9IG15c3FsLmZvcm1hdChpbnNlcnRRdWVyeSwgW1wibmFtZVwiLCBcImFkZHJlc3NcIiwgXCJwaG9uZVwiLCBcImVtYWlsXCIsXCJpbWFnZVwiLCBkYXRhLm5hbWUsIGRhdGEuYWRkcmVzcywgZGF0YS5waG9uZSwgZGF0YS5lbWFpbCwgZGF0YS5pbWFnZV0pO1xuICAgICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgKGVycm9yLCByZXN1bHRzKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cylcbiAgICAgICAgbGV0IHJlc3BvbnMgPSB7XG4gICAgICAgICAgXCJtZXNzYWdlXCI6XCJzdWNjZXNlZFwiLFxuICAgICAgICAgIFwiaW5zZXJ0SWRcIjpyZXN1bHRzLmluc2VydElkXG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZShyZXNwb25zKVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgbW9kdWxlLmV4cG9ydHMuZGVsZXRlU2hvcCA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBsZXQgYXJyYXkgPSBbXVxuICAgICAgZm9yIChjb25zdCAgaSBpbiBwYXJhbXMgKSB7XG4gICAgICAgIGFycmF5LnB1c2goaSlcbiAgICAgICAgYXJyYXkucHVzaChwYXJhbXNbaV0pXG4gICAgICB9XG4gIFxuICAgICAgbGV0IHNlbGVjdFF1ZXJ5ID0gJ0RFTEVURSAgRlJPTSBTaG9wcyB3aGVyZSA/PyA9ID8nO1xuICAgICAgbGV0IHF1ZXJ5ID0gbXlzcWwuZm9ybWF0KHNlbGVjdFF1ZXJ5LCBhcnJheSk7XG4gICAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzcG9ucyA9IHtcbiAgICAgICAgICBcIm1lc3NhZ2VcIjpcInN1Y2Nlc3NcIixcbiAgICAgICAgICByZXN1bHRzXG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZShyZXNwb25zKVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "shops.model.js"
      ],
      "names": [
        "module",
        "exports",
        "getShops",
        "Promise",
        "resolve",
        "reject",
        "connection",
        "query",
        "error",
        "results",
        "addShop",
        "data",
        "insertQuery",
        "mysql",
        "format",
        "name",
        "address",
        "phone",
        "email",
        "image",
        "console",
        "log",
        "respons",
        "insertId",
        "deleteShop",
        "params",
        "array",
        "i",
        "push",
        "selectQuery"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEAA,MAAM,CAACC,OAAP,CAAeC,QAAf,GAA0B,YAAY;AAClC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,gCAAWC,KAAX,CAAiB,qBAAjB,EAAwC,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAChE,UAAID,KAAJ,EAAW;AACTH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACK,OAAD,CAAP;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAVH;;AAYET,MAAM,CAACC,OAAP,CAAeS,OAAf,GAAyB,UAAUC,IAAV,EAAgB;AACvC,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIO,WAAW,GAAG,uDAAlB;;AACA,QAAIL,KAAK,GAAGM,eAAMC,MAAN,CAAaF,WAAb,EAA0B,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,OAA7B,EAAqC,OAArC,EAA8CD,IAAI,CAACI,IAAnD,EAAyDJ,IAAI,CAACK,OAA9D,EAAuEL,IAAI,CAACM,KAA5E,EAAmFN,IAAI,CAACO,KAAxF,EAA+FP,IAAI,CAACQ,KAApG,CAA1B,CAAZ;;AACAb,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTY,QAAAA,OAAO,CAACZ,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,UAAIa,OAAO,GAAG;AACZ,mBAAU,UADE;AAEZ,oBAAWb,OAAO,CAACc;AAFP,OAAd;AAIAnB,MAAAA,OAAO,CAACkB,OAAD,CAAP;AACD,KAZD;AAaD,GAhBM,CAAP;AAiBD,CAlBD;;AAmBAtB,MAAM,CAACC,OAAP,CAAeuB,UAAf,GAA4B,UAAUC,MAAV,EAAkB;AAC5C,SAAO,IAAItB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIqB,KAAK,GAAG,EAAZ;;AACF,SAAK,IAAOC,CAAZ,IAAiBF,MAAjB,EAA0B;AACxBC,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACAD,MAAAA,KAAK,CAACE,IAAN,CAAWH,MAAM,CAACE,CAAD,CAAjB;AACD;;AAED,QAAIE,WAAW,GAAG,iCAAlB;;AACA,QAAItB,KAAK,GAAGM,eAAMC,MAAN,CAAae,WAAb,EAA0BH,KAA1B,CAAZ;;AACApB,gCAAWC,KAAX,CAAiBA,KAAjB,EAAwB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC1C,UAAID,KAAJ,EAAW;AACTY,QAAAA,OAAO,CAACZ,KAAR,CAAcA,KAAd;AACAH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACA;AACD;;AACD,UAAIc,OAAO,GAAG;AACZ,mBAAU,SADE;AAEZb,QAAAA,OAAO,EAAPA;AAFY,OAAd;AAIAL,MAAAA,OAAO,CAACkB,OAAD,CAAP;AACD,KAXD;AAYD,GArBM,CAAP;AAsBD,CAvBD",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "sourcesContent": [
        "import {connection} from './mysqlConnection'\nimport mysql from 'mysql'\n\nmodule.exports.getShops = function () {\n    return new Promise((resolve, reject) => {\n      connection.query('SELECT * FROM Shops', function (error, results) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(results);\n        }\n      });\n    });\n  }\n\n  module.exports.addShop = function (data) {\n    return new Promise((resolve, reject) => {\n      let insertQuery = 'INSERT INTO Shops (??,??,??,??,??) VALUES (?,?,?,?,?)';\n      let query = mysql.format(insertQuery, [\"name\", \"address\", \"phone\", \"email\",\"image\", data.name, data.address, data.phone, data.email, data.image]);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        console.log(results)\n        let respons = {\n          \"message\":\"succesed\",\n          \"insertId\":results.insertId\n        }\n        resolve(respons)\n      });\n    });\n  }\n  module.exports.deleteShop = function (params) {\n    return new Promise((resolve, reject) => {\n        let array = []\n      for (const  i in params ) {\n        array.push(i)\n        array.push(params[i])\n      }\n  \n      let selectQuery = 'DELETE  FROM Shops where ?? = ?';\n      let query = mysql.format(selectQuery, array);\n      connection.query(query, (error, results) => {\n        if (error) {\n          console.error(error);\n          reject(error)\n          return;\n        }\n        let respons = {\n          \"message\":\"success\",\n          results\n        }\n        resolve(respons)\n      });\n    });\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1582832058501
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/statistics.router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/statistics.router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/statistics.router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers/statistics.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
        "sourceFileName": "statistics.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _statistics = _interopRequireDefault(require(\"../controlers/statistics.controler\"));\n\nvar router = _express.default.Router();\n\nrouter.route('/products').get(_statistics.default.getProducts);\nrouter.route('/shops').get(_statistics.default.getShops);\nrouter.route('/providers').get(_statistics.default.getProviders);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpc3RpY3Mucm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJyb3V0ZSIsImdldCIsImNvbnRyb2xsZXIiLCJnZXRQcm9kdWN0cyIsImdldFNob3BzIiwiZ2V0UHJvdmlkZXJzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBOztBQURBLElBQU1BLE1BQU0sR0FBR0MsaUJBQVFDLE1BQVIsRUFBZjs7QUFHQUYsTUFBTSxDQUFDRyxLQUFQLENBQWEsV0FBYixFQUNLQyxHQURMLENBQ1NDLG9CQUFXQyxXQURwQjtBQUVBTixNQUFNLENBQUNHLEtBQVAsQ0FBYSxRQUFiLEVBQ0tDLEdBREwsQ0FDVUMsb0JBQVdFLFFBRHJCO0FBRUFQLE1BQU0sQ0FBQ0csS0FBUCxDQUFhLFlBQWIsRUFDS0MsR0FETCxDQUNVQyxvQkFBV0csWUFEckI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUvcm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGVycy9zdGF0aXN0aWNzLmNvbnRyb2xlcic7XG5cbnJvdXRlci5yb3V0ZSgnL3Byb2R1Y3RzJylcbiAgICAuZ2V0KGNvbnRyb2xsZXIuZ2V0UHJvZHVjdHMpXG5yb3V0ZXIucm91dGUoJy9zaG9wcycpXG4gICAgLmdldCggY29udHJvbGxlci5nZXRTaG9wcylcbnJvdXRlci5yb3V0ZSgnL3Byb3ZpZGVycycpXG4gICAgLmdldCggY29udHJvbGxlci5nZXRQcm92aWRlcnMpXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "statistics.router.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "route",
        "get",
        "controller",
        "getProducts",
        "getShops",
        "getProviders",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AADA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAGAF,MAAM,CAACG,KAAP,CAAa,WAAb,EACKC,GADL,CACSC,oBAAWC,WADpB;AAEAN,MAAM,CAACG,KAAP,CAAa,QAAb,EACKC,GADL,CACUC,oBAAWE,QADrB;AAEAP,MAAM,CAACG,KAAP,CAAa,YAAb,EACKC,GADL,CACUC,oBAAWG,YADrB;AAEAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/routers",
      "sourcesContent": [
        "import express from 'express'\nconst router = express.Router();\nimport controller from '../controlers/statistics.controler';\n\nrouter.route('/products')\n    .get(controller.getProducts)\nrouter.route('/shops')\n    .get( controller.getShops)\nrouter.route('/providers')\n    .get( controller.getProviders)\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583352131880
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/statistics.controler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/statistics.controler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/statistics.controler.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers/statistics.controler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
        "sourceFileName": "statistics.controler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar model = require('../models/statistics.model');\n\nvar log4js = require('log4js');\n\nvar dotenv = require('dotenv');\n\nvar _require = require('express-validator'),\n    validationResult = _require.validationResult;\n\ndotenv.config();\nvar logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.getProducts = function _callee(req, res) {\n  var _result, result;\n\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // const err = validationResult(req.query)\n          // if (!err.isEmpty()) {\n          //     return res.status(422).jsonp(err.array());\n          // }    \n          console.log(\"+++++\", req.query);\n\n          if (!(req.query.profitability === \"true\")) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 4;\n          return _regenerator.default.awrap(model.getProductsByProfitability(req.query));\n\n        case 4:\n          _result = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).json(_result));\n\n        case 6:\n          _context.next = 8;\n          return _regenerator.default.awrap(model.getProducts(req.query));\n\n        case 8:\n          result = _context.sent;\n          return _context.abrupt(\"return\", res.status(200).json(result));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getShops = function _callee2(req, res) {\n  var err, _result2, result;\n\n  return _regenerator.default.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          err = validationResult(req.query);\n\n          if (err.isEmpty()) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(422).jsonp(err.array()));\n\n        case 3:\n          if (!(Object.keys(req.query).length !== 0)) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 6;\n          return _regenerator.default.awrap(model.getShops(req.query));\n\n        case 6:\n          _result2 = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(_result2));\n\n        case 8:\n          _context2.next = 10;\n          return _regenerator.default.awrap(model.getShops());\n\n        case 10:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", res.status(200).json(result));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nmodule.exports.getProviders = function _callee3(req, res) {\n  var err, _result3, result;\n\n  return _regenerator.default.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          err = validationResult(req.query);\n\n          if (err.isEmpty()) {\n            _context3.next = 3;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.status(422).jsonp(err.array()));\n\n        case 3:\n          if (!(Object.keys(req.query).length !== 0)) {\n            _context3.next = 8;\n            break;\n          }\n\n          _context3.next = 6;\n          return _regenerator.default.awrap(model.getProviders(req.query));\n\n        case 6:\n          _result3 = _context3.sent;\n          return _context3.abrupt(\"return\", res.status(200).json(_result3));\n\n        case 8:\n          _context3.next = 10;\n          return _regenerator.default.awrap(model.getProviders());\n\n        case 10:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", res.status(200).json(result));\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpc3RpY3MuY29udHJvbGVyLmpzIl0sIm5hbWVzIjpbIm1vZGVsIiwicmVxdWlyZSIsImxvZzRqcyIsImRvdGVudiIsInZhbGlkYXRpb25SZXN1bHQiLCJjb25maWciLCJsb2dnZXIiLCJnZXRMb2dnZXIiLCJsZXZlbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRQcm9kdWN0cyIsInJlcSIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJxdWVyeSIsInByb2ZpdGFiaWxpdHkiLCJnZXRQcm9kdWN0c0J5UHJvZml0YWJpbGl0eSIsInJlc3VsdCIsInN0YXR1cyIsImpzb24iLCJnZXRTaG9wcyIsImVyciIsImlzRW1wdHkiLCJqc29ucCIsImFycmF5IiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImdldFByb3ZpZGVycyIsIm9iaiIsImtleSIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyw0QkFBRCxDQUFyQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O2VBQzZCQSxPQUFPLENBQUMsbUJBQUQsQztJQUE1QkcsZ0IsWUFBQUEsZ0I7O0FBRVJELE1BQU0sQ0FBQ0UsTUFBUDtBQUNBLElBQU1DLE1BQU0sR0FBR0osTUFBTSxDQUFDSyxTQUFQLEVBQWY7QUFDQUQsTUFBTSxDQUFDRSxLQUFQLEdBQWUsT0FBZjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLENBQWVDLFdBQWYsR0FBNkIsaUJBQWdCQyxHQUFoQixFQUFxQkMsR0FBckI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLEVBQW9CSCxHQUFHLENBQUNJLEtBQXhCOztBQUx5QixnQkFPckJKLEdBQUcsQ0FBQ0ksS0FBSixDQUFVQyxhQUFWLEtBQTRCLE1BUFA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSw0Q0FRQWpCLEtBQUssQ0FBQ2tCLDBCQUFOLENBQWlDTixHQUFHLENBQUNJLEtBQXJDLENBUkE7O0FBQUE7QUFRZkcsVUFBQUEsT0FSZTtBQUFBLDJDQVNkTixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsT0FBckIsQ0FUYzs7QUFBQTtBQUFBO0FBQUEsNENBV0puQixLQUFLLENBQUNXLFdBQU4sQ0FBa0JDLEdBQUcsQ0FBQ0ksS0FBdEIsQ0FYSTs7QUFBQTtBQVduQkcsVUFBQUEsTUFYbUI7QUFBQSwyQ0FZbEJOLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixNQUFyQixDQVprQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUE3Qjs7QUFlQVYsTUFBTSxDQUFDQyxPQUFQLENBQWVZLFFBQWYsR0FBMEIsa0JBQWdCVixHQUFoQixFQUFxQkMsR0FBckI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNoQlUsVUFBQUEsR0FEZ0IsR0FDVm5CLGdCQUFnQixDQUFDUSxHQUFHLENBQUNJLEtBQUwsQ0FETjs7QUFBQSxjQUVqQk8sR0FBRyxDQUFDQyxPQUFKLEVBRmlCO0FBQUE7QUFBQTtBQUFBOztBQUFBLDRDQUdYWCxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCSyxLQUFoQixDQUFzQkYsR0FBRyxDQUFDRyxLQUFKLEVBQXRCLENBSFc7O0FBQUE7QUFBQSxnQkFLbEJDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZaEIsR0FBRyxDQUFDSSxLQUFoQixFQUF1QmEsTUFBdkIsS0FBa0MsQ0FMaEI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSw0Q0FNRzdCLEtBQUssQ0FBQ3NCLFFBQU4sQ0FBZVYsR0FBRyxDQUFDSSxLQUFuQixDQU5IOztBQUFBO0FBTVpHLFVBQUFBLFFBTlk7QUFBQSw0Q0FPWE4sR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQXJCLENBUFc7O0FBQUE7QUFBQTtBQUFBLDRDQVNEbkIsS0FBSyxDQUFDc0IsUUFBTixFQVRDOztBQUFBO0FBU2hCSCxVQUFBQSxNQVRnQjtBQUFBLDRDQVVmTixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsTUFBckIsQ0FWZTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUExQjs7QUFZQVYsTUFBTSxDQUFDQyxPQUFQLENBQWVvQixZQUFmLEdBQThCLGtCQUFnQmxCLEdBQWhCLEVBQXFCQyxHQUFyQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3BCVSxVQUFBQSxHQURvQixHQUNkbkIsZ0JBQWdCLENBQUNRLEdBQUcsQ0FBQ0ksS0FBTCxDQURGOztBQUFBLGNBRXJCTyxHQUFHLENBQUNDLE9BQUosRUFGcUI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNENBR2ZYLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JLLEtBQWhCLENBQXNCRixHQUFHLENBQUNHLEtBQUosRUFBdEIsQ0FIZTs7QUFBQTtBQUFBLGdCQUt0QkMsTUFBTSxDQUFDQyxJQUFQLENBQVloQixHQUFHLENBQUNJLEtBQWhCLEVBQXVCYSxNQUF2QixLQUFrQyxDQUxaO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsNENBTUQ3QixLQUFLLENBQUM4QixZQUFOLENBQW1CbEIsR0FBRyxDQUFDSSxLQUF2QixDQU5DOztBQUFBO0FBTWhCRyxVQUFBQSxRQU5nQjtBQUFBLDRDQU9mTixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsUUFBckIsQ0FQZTs7QUFBQTtBQUFBO0FBQUEsNENBU0xuQixLQUFLLENBQUM4QixZQUFOLEVBVEs7O0FBQUE7QUFTcEJYLFVBQUFBLE1BVG9CO0FBQUEsNENBVW5CTixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsTUFBckIsQ0FWbUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBOUI7O0FBWUEsU0FBU0ssT0FBVCxDQUFpQk8sR0FBakIsRUFBc0I7QUFDbEIsT0FBSSxJQUFJQyxHQUFSLElBQWVELEdBQWYsRUFBb0I7QUFDaEIsUUFBR0EsR0FBRyxDQUFDRSxjQUFKLENBQW1CRCxHQUFuQixDQUFILEVBQ0ksT0FBTyxLQUFQO0FBQ1A7O0FBQ0QsU0FBTyxJQUFQO0FBQ0giLCJzb3VyY2VSb290IjoiL2hvbWUvaHVuYW4vRGVza3RvcC9JbnN0aWdhdGUvV2ViLVN0b3JhZ2Uvd2ViLXN0b3JhZ2UvYmFja2VuZC9Ob2RlL2NvbnRyb2xlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb2RlbCA9IHJlcXVpcmUoJy4uL21vZGVscy9zdGF0aXN0aWNzLm1vZGVsJyk7XG5jb25zdCBsb2c0anMgPSByZXF1aXJlKCdsb2c0anMnKTtcbmNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xuY29uc3QgeyB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvcicpO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5jb25zdCBsb2dnZXIgPSBsb2c0anMuZ2V0TG9nZ2VyKCk7XG5sb2dnZXIubGV2ZWwgPSBcImRlYnVnXCI7XG5cbm1vZHVsZS5leHBvcnRzLmdldFByb2R1Y3RzID0gYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgLy8gY29uc3QgZXJyID0gdmFsaWRhdGlvblJlc3VsdChyZXEucXVlcnkpXG4gICAgLy8gaWYgKCFlcnIuaXNFbXB0eSgpKSB7XG4gICAgLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbnAoZXJyLmFycmF5KCkpO1xuICAgIC8vIH0gICAgXG4gICAgY29uc29sZS5sb2coXCIrKysrK1wiLHJlcS5xdWVyeSlcblxuICAgIGlmIChyZXEucXVlcnkucHJvZml0YWJpbGl0eSA9PT0gXCJ0cnVlXCIpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbW9kZWwuZ2V0UHJvZHVjdHNCeVByb2ZpdGFiaWxpdHkocmVxLnF1ZXJ5KVxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0KVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtb2RlbC5nZXRQcm9kdWN0cyhyZXEucXVlcnkpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdClcbiAgICBcbn1cbm1vZHVsZS5leHBvcnRzLmdldFNob3BzID0gYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgZXJyID0gdmFsaWRhdGlvblJlc3VsdChyZXEucXVlcnkpXG4gICAgaWYgKCFlcnIuaXNFbXB0eSgpKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbnAoZXJyLmFycmF5KCkpO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LmtleXMocmVxLnF1ZXJ5KS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbW9kZWwuZ2V0U2hvcHMocmVxLnF1ZXJ5KVxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0KVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtb2RlbC5nZXRTaG9wcygpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdClcbn1cbm1vZHVsZS5leHBvcnRzLmdldFByb3ZpZGVycyA9IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGNvbnN0IGVyciA9IHZhbGlkYXRpb25SZXN1bHQocmVxLnF1ZXJ5KVxuICAgIGlmICghZXJyLmlzRW1wdHkoKSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb25wKGVyci5hcnJheSgpKTtcbiAgICB9XG4gICAgaWYgKE9iamVjdC5rZXlzKHJlcS5xdWVyeSkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmdldFByb3ZpZGVycyhyZXEucXVlcnkpXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQpXG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmdldFByb3ZpZGVycygpXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdClcbn1cbmZ1bmN0aW9uIGlzRW1wdHkob2JqKSB7XG4gICAgZm9yKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "statistics.controler.js"
      ],
      "names": [
        "model",
        "require",
        "log4js",
        "dotenv",
        "validationResult",
        "config",
        "logger",
        "getLogger",
        "level",
        "module",
        "exports",
        "getProducts",
        "req",
        "res",
        "console",
        "log",
        "query",
        "profitability",
        "getProductsByProfitability",
        "result",
        "status",
        "json",
        "getShops",
        "err",
        "isEmpty",
        "jsonp",
        "array",
        "Object",
        "keys",
        "length",
        "getProviders",
        "obj",
        "key",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,4BAAD,CAArB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;eAC6BA,OAAO,CAAC,mBAAD,C;IAA5BG,gB,YAAAA,gB;;AAERD,MAAM,CAACE,MAAP;AACA,IAAMC,MAAM,GAAGJ,MAAM,CAACK,SAAP,EAAf;AACAD,MAAM,CAACE,KAAP,GAAe,OAAf;;AAEAC,MAAM,CAACC,OAAP,CAAeC,WAAf,GAA6B,iBAAgBC,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzB;AACA;AACA;AACA;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,GAAG,CAACI,KAAxB;;AALyB,gBAOrBJ,GAAG,CAACI,KAAJ,CAAUC,aAAV,KAA4B,MAPP;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAQAjB,KAAK,CAACkB,0BAAN,CAAiCN,GAAG,CAACI,KAArC,CARA;;AAAA;AAQfG,UAAAA,OARe;AAAA,2CASdN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,OAArB,CATc;;AAAA;AAAA;AAAA,4CAWJnB,KAAK,CAACW,WAAN,CAAkBC,GAAG,CAACI,KAAtB,CAXI;;AAAA;AAWnBG,UAAAA,MAXmB;AAAA,2CAYlBN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB,CAZkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAeAV,MAAM,CAACC,OAAP,CAAeY,QAAf,GAA0B,kBAAgBV,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBU,UAAAA,GADgB,GACVnB,gBAAgB,CAACQ,GAAG,CAACI,KAAL,CADN;;AAAA,cAEjBO,GAAG,CAACC,OAAJ,EAFiB;AAAA;AAAA;AAAA;;AAAA,4CAGXX,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBK,KAAhB,CAAsBF,GAAG,CAACG,KAAJ,EAAtB,CAHW;;AAAA;AAAA,gBAKlBC,MAAM,CAACC,IAAP,CAAYhB,GAAG,CAACI,KAAhB,EAAuBa,MAAvB,KAAkC,CALhB;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAMG7B,KAAK,CAACsB,QAAN,CAAeV,GAAG,CAACI,KAAnB,CANH;;AAAA;AAMZG,UAAAA,QANY;AAAA,4CAOXN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB,CAPW;;AAAA;AAAA;AAAA,4CASDnB,KAAK,CAACsB,QAAN,EATC;;AAAA;AAShBH,UAAAA,MATgB;AAAA,4CAUfN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB,CAVe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAYAV,MAAM,CAACC,OAAP,CAAeoB,YAAf,GAA8B,kBAAgBlB,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBU,UAAAA,GADoB,GACdnB,gBAAgB,CAACQ,GAAG,CAACI,KAAL,CADF;;AAAA,cAErBO,GAAG,CAACC,OAAJ,EAFqB;AAAA;AAAA;AAAA;;AAAA,4CAGfX,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBK,KAAhB,CAAsBF,GAAG,CAACG,KAAJ,EAAtB,CAHe;;AAAA;AAAA,gBAKtBC,MAAM,CAACC,IAAP,CAAYhB,GAAG,CAACI,KAAhB,EAAuBa,MAAvB,KAAkC,CALZ;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAMD7B,KAAK,CAAC8B,YAAN,CAAmBlB,GAAG,CAACI,KAAvB,CANC;;AAAA;AAMhBG,UAAAA,QANgB;AAAA,4CAOfN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB,CAPe;;AAAA;AAAA;AAAA,4CASLnB,KAAK,CAAC8B,YAAN,EATK;;AAAA;AASpBX,UAAAA,MAToB;AAAA,4CAUnBN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB,CAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAYA,SAASK,OAAT,CAAiBO,GAAjB,EAAsB;AAClB,OAAI,IAAIC,GAAR,IAAeD,GAAf,EAAoB;AAChB,QAAGA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAH,EACI,OAAO,KAAP;AACP;;AACD,SAAO,IAAP;AACH",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/controlers",
      "sourcesContent": [
        "const model = require('../models/statistics.model');\nconst log4js = require('log4js');\nconst dotenv = require('dotenv');\nconst { validationResult } = require('express-validator');\n\ndotenv.config();\nconst logger = log4js.getLogger();\nlogger.level = \"debug\";\n\nmodule.exports.getProducts = async function (req, res) {\n    // const err = validationResult(req.query)\n    // if (!err.isEmpty()) {\n    //     return res.status(422).jsonp(err.array());\n    // }    \n    console.log(\"+++++\",req.query)\n\n    if (req.query.profitability === \"true\") {\n        const result = await model.getProductsByProfitability(req.query)\n        return res.status(200).json(result)\n    }\n    const result = await model.getProducts(req.query)\n    return res.status(200).json(result)\n    \n}\nmodule.exports.getShops = async function (req, res) {\n    const err = validationResult(req.query)\n    if (!err.isEmpty()) {\n        return res.status(422).jsonp(err.array());\n    }\n    if (Object.keys(req.query).length !== 0) {\n        const result = await model.getShops(req.query)\n        return res.status(200).json(result)\n    }\n    const result = await model.getShops()\n    return res.status(200).json(result)\n}\nmodule.exports.getProviders = async function (req, res) {\n    const err = validationResult(req.query)\n    if (!err.isEmpty()) {\n        return res.status(422).jsonp(err.array());\n    }\n    if (Object.keys(req.query).length !== 0) {\n        const result = await model.getProviders(req.query)\n        return res.status(200).json(result)\n    }\n    const result = await model.getProviders()\n    return res.status(200).json(result)\n}\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1583358592449
  },
  "{\"sourceRoot\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"filename\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/statistics.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/statistics.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/statistics.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models/statistics.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
        "sourceFileName": "statistics.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _mysqlConnection = require(\"./mysqlConnection\");\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nmodule.exports.getProducts = function (data) {\n  return new Promise(function (resolve, reject) {\n    if (data.startDate === undefined) {\n      console.log(\"sssss\");\n    }\n\n    var insertQuery = \"select name, count(name) as count from (select * from SaledProducts where saledDate BETWEEN ? AND ? ) as dd group by name order by count desc\";\n\n    var query = _mysql.default.format(insertQuery, [data.startDate, data.endDate]);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        reject(error);\n        console.log(error);\n      } else {\n        console.log(results);\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.getProductsByProfitability = function (data) {\n  return new Promise(function (resolve, reject) {\n    if (data) {\n      console.log(\"sssss\");\n    }\n\n    var insertQuery = \"select name,price * count(name) as  summary, count(name) as count from (select * from SaledProducts where saledDate BETWEEN ? AND ? ) as dd group by name, price order by summary desc\";\n\n    var query = _mysql.default.format(insertQuery, [data.startDate, data.endDate]);\n\n    console.log(query);\n\n    _mysqlConnection.connection.query(query, function (error, results) {\n      if (error) {\n        reject(error);\n        console.log(error);\n      } else {\n        console.log(results);\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.getProviders = function () {\n  return new Promise(function (resolve, reject) {\n    _mysqlConnection.connection.query('SELECT * FROM SaledProducts', function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(results);\n      }\n    });\n  });\n};\n\nmodule.exports.getShops = function () {\n  return new Promise(function (resolve, reject) {\n    _mysqlConnection.connection.query('SELECT * FROM Shops', function (error, results) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(results);\n      }\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpc3RpY3MubW9kZWwuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldFByb2R1Y3RzIiwiZGF0YSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwic3RhcnREYXRlIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImxvZyIsImluc2VydFF1ZXJ5IiwicXVlcnkiLCJteXNxbCIsImZvcm1hdCIsImVuZERhdGUiLCJjb25uZWN0aW9uIiwiZXJyb3IiLCJyZXN1bHRzIiwiZ2V0UHJvZHVjdHNCeVByb2ZpdGFiaWxpdHkiLCJnZXRQcm92aWRlcnMiLCJnZXRTaG9wcyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUVBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsV0FBZixHQUE2QixVQUFVQyxJQUFWLEVBQWdCO0FBQ3pDLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUVwQyxRQUFJSCxJQUFJLENBQUNJLFNBQUwsS0FBbUJDLFNBQXZCLEVBQWtDO0FBQzlCQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaO0FBQ0g7O0FBQ0QsUUFBSUMsV0FBVyxHQUFHLCtJQUFsQjs7QUFDQSxRQUFJQyxLQUFLLEdBQUdDLGVBQU1DLE1BQU4sQ0FBYUgsV0FBYixFQUEwQixDQUFDUixJQUFJLENBQUNJLFNBQU4sRUFBaUJKLElBQUksQ0FBQ1ksT0FBdEIsQ0FBMUIsQ0FBWjs7QUFDQUMsZ0NBQVdKLEtBQVgsQ0FBaUJBLEtBQWpCLEVBQXdCLFVBQVVLLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQzlDLFVBQUlELEtBQUosRUFBVztBQUNQWCxRQUFBQSxNQUFNLENBQUNXLEtBQUQsQ0FBTjtBQUNBUixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sS0FBWjtBQUNILE9BSEQsTUFHTztBQUNIUixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVEsT0FBWjtBQUNBYixRQUFBQSxPQUFPLENBQUNhLE9BQUQsQ0FBUDtBQUNIO0FBQ0osS0FSRDtBQVNILEdBaEJNLENBQVA7QUFpQkgsQ0FsQkQ7O0FBbUJBbEIsTUFBTSxDQUFDQyxPQUFQLENBQWVrQiwwQkFBZixHQUE0QyxVQUFVaEIsSUFBVixFQUFnQjtBQUN4RCxTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcEMsUUFBSUgsSUFBSixFQUFVO0FBQ05NLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFDSDs7QUFDRCxRQUFJQyxXQUFXLEdBQUcsd0xBQWxCOztBQUNBLFFBQUlDLEtBQUssR0FBR0MsZUFBTUMsTUFBTixDQUFhSCxXQUFiLEVBQTBCLENBQUNSLElBQUksQ0FBQ0ksU0FBTixFQUFpQkosSUFBSSxDQUFDWSxPQUF0QixDQUExQixDQUFaOztBQUNBTixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsS0FBWjs7QUFDQUksZ0NBQVdKLEtBQVgsQ0FBaUJBLEtBQWpCLEVBQXdCLFVBQVVLLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQzlDLFVBQUlELEtBQUosRUFBVztBQUNQWCxRQUFBQSxNQUFNLENBQUNXLEtBQUQsQ0FBTjtBQUNBUixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sS0FBWjtBQUNILE9BSEQsTUFHTztBQUNIUixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVEsT0FBWjtBQUNBYixRQUFBQSxPQUFPLENBQUNhLE9BQUQsQ0FBUDtBQUNIO0FBQ0osS0FSRDtBQVNILEdBaEJNLENBQVA7QUFpQkgsQ0FsQkQ7O0FBbUJBbEIsTUFBTSxDQUFDQyxPQUFQLENBQWVtQixZQUFmLEdBQThCLFlBQVk7QUFDdEMsU0FBTyxJQUFJaEIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQ1UsZ0NBQVdKLEtBQVgsQ0FBaUIsNkJBQWpCLEVBQWdELFVBQVVLLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQ3RFLFVBQUlELEtBQUosRUFBVztBQUNQWCxRQUFBQSxNQUFNLENBQUNXLEtBQUQsQ0FBTjtBQUNILE9BRkQsTUFFTztBQUNIWixRQUFBQSxPQUFPLENBQUNhLE9BQUQsQ0FBUDtBQUNIO0FBQ0osS0FORDtBQU9ILEdBUk0sQ0FBUDtBQVNILENBVkQ7O0FBV0FsQixNQUFNLENBQUNDLE9BQVAsQ0FBZW9CLFFBQWYsR0FBMEIsWUFBWTtBQUNsQyxTQUFPLElBQUlqQixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDVSxnQ0FBV0osS0FBWCxDQUFpQixxQkFBakIsRUFBd0MsVUFBVUssS0FBVixFQUFpQkMsT0FBakIsRUFBMEI7QUFDOUQsVUFBSUQsS0FBSixFQUFXO0FBQ1BYLFFBQUFBLE1BQU0sQ0FBQ1csS0FBRCxDQUFOO0FBQ0gsT0FGRCxNQUVPO0FBQ0haLFFBQUFBLE9BQU8sQ0FBQ2EsT0FBRCxDQUFQO0FBQ0g7QUFDSixLQU5EO0FBT0gsR0FSTSxDQUFQO0FBU0gsQ0FWRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9odW5hbi9EZXNrdG9wL0luc3RpZ2F0ZS9XZWItU3RvcmFnZS93ZWItc3RvcmFnZS9iYWNrZW5kL05vZGUvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjb25uZWN0aW9ufSBmcm9tICcuL215c3FsQ29ubmVjdGlvbidcbmltcG9ydCBteXNxbCBmcm9tICdteXNxbCdcblxubW9kdWxlLmV4cG9ydHMuZ2V0UHJvZHVjdHMgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIFxuICAgICAgICBpZiAoZGF0YS5zdGFydERhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJzc3Nzc1wiKVxuICAgICAgICB9XG4gICAgICAgIGxldCBpbnNlcnRRdWVyeSA9IFwic2VsZWN0IG5hbWUsIGNvdW50KG5hbWUpIGFzIGNvdW50IGZyb20gKHNlbGVjdCAqIGZyb20gU2FsZWRQcm9kdWN0cyB3aGVyZSBzYWxlZERhdGUgQkVUV0VFTiA/IEFORCA/ICkgYXMgZGQgZ3JvdXAgYnkgbmFtZSBvcmRlciBieSBjb3VudCBkZXNjXCI7XG4gICAgICAgIGxldCBxdWVyeSA9IG15c3FsLmZvcm1hdChpbnNlcnRRdWVyeSwgW2RhdGEuc3RhcnREYXRlLCBkYXRhLmVuZERhdGVdKTtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKVxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxubW9kdWxlLmV4cG9ydHMuZ2V0UHJvZHVjdHNCeVByb2ZpdGFiaWxpdHkgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInNzc3NzXCIpXG4gICAgICAgIH1cbiAgICAgICAgbGV0IGluc2VydFF1ZXJ5ID0gXCJzZWxlY3QgbmFtZSxwcmljZSAqIGNvdW50KG5hbWUpIGFzICBzdW1tYXJ5LCBjb3VudChuYW1lKSBhcyBjb3VudCBmcm9tIChzZWxlY3QgKiBmcm9tIFNhbGVkUHJvZHVjdHMgd2hlcmUgc2FsZWREYXRlIEJFVFdFRU4gPyBBTkQgPyApIGFzIGRkIGdyb3VwIGJ5IG5hbWUsIHByaWNlIG9yZGVyIGJ5IHN1bW1hcnkgZGVzY1wiO1xuICAgICAgICBsZXQgcXVlcnkgPSBteXNxbC5mb3JtYXQoaW5zZXJ0UXVlcnksIFtkYXRhLnN0YXJ0RGF0ZSwgZGF0YS5lbmREYXRlXSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHF1ZXJ5KVxuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5tb2R1bGUuZXhwb3J0cy5nZXRQcm92aWRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSBTYWxlZFByb2R1Y3RzJywgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbm1vZHVsZS5leHBvcnRzLmdldFNob3BzID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCAqIEZST00gU2hvcHMnLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMpIHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "statistics.model.js"
      ],
      "names": [
        "module",
        "exports",
        "getProducts",
        "data",
        "Promise",
        "resolve",
        "reject",
        "startDate",
        "undefined",
        "console",
        "log",
        "insertQuery",
        "query",
        "mysql",
        "format",
        "endDate",
        "connection",
        "error",
        "results",
        "getProductsByProfitability",
        "getProviders",
        "getShops"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEAA,MAAM,CAACC,OAAP,CAAeC,WAAf,GAA6B,UAAUC,IAAV,EAAgB;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIH,IAAI,CAACI,SAAL,KAAmBC,SAAvB,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AACD,QAAIC,WAAW,GAAG,+IAAlB;;AACA,QAAIC,KAAK,GAAGC,eAAMC,MAAN,CAAaH,WAAb,EAA0B,CAACR,IAAI,CAACI,SAAN,EAAiBJ,IAAI,CAACY,OAAtB,CAA1B,CAAZ;;AACAC,gCAAWJ,KAAX,CAAiBA,KAAjB,EAAwB,UAAUK,KAAV,EAAiBC,OAAjB,EAA0B;AAC9C,UAAID,KAAJ,EAAW;AACPX,QAAAA,MAAM,CAACW,KAAD,CAAN;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAb,QAAAA,OAAO,CAACa,OAAD,CAAP;AACH;AACJ,KARD;AASH,GAhBM,CAAP;AAiBH,CAlBD;;AAmBAlB,MAAM,CAACC,OAAP,CAAekB,0BAAf,GAA4C,UAAUhB,IAAV,EAAgB;AACxD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIH,IAAJ,EAAU;AACNM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AACD,QAAIC,WAAW,GAAG,wLAAlB;;AACA,QAAIC,KAAK,GAAGC,eAAMC,MAAN,CAAaH,WAAb,EAA0B,CAACR,IAAI,CAACI,SAAN,EAAiBJ,IAAI,CAACY,OAAtB,CAA1B,CAAZ;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACAI,gCAAWJ,KAAX,CAAiBA,KAAjB,EAAwB,UAAUK,KAAV,EAAiBC,OAAjB,EAA0B;AAC9C,UAAID,KAAJ,EAAW;AACPX,QAAAA,MAAM,CAACW,KAAD,CAAN;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAb,QAAAA,OAAO,CAACa,OAAD,CAAP;AACH;AACJ,KARD;AASH,GAhBM,CAAP;AAiBH,CAlBD;;AAmBAlB,MAAM,CAACC,OAAP,CAAemB,YAAf,GAA8B,YAAY;AACtC,SAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCU,gCAAWJ,KAAX,CAAiB,6BAAjB,EAAgD,UAAUK,KAAV,EAAiBC,OAAjB,EAA0B;AACtE,UAAID,KAAJ,EAAW;AACPX,QAAAA,MAAM,CAACW,KAAD,CAAN;AACH,OAFD,MAEO;AACHZ,QAAAA,OAAO,CAACa,OAAD,CAAP;AACH;AACJ,KAND;AAOH,GARM,CAAP;AASH,CAVD;;AAWAlB,MAAM,CAACC,OAAP,CAAeoB,QAAf,GAA0B,YAAY;AAClC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCU,gCAAWJ,KAAX,CAAiB,qBAAjB,EAAwC,UAAUK,KAAV,EAAiBC,OAAjB,EAA0B;AAC9D,UAAID,KAAJ,EAAW;AACPX,QAAAA,MAAM,CAACW,KAAD,CAAN;AACH,OAFD,MAEO;AACHZ,QAAAA,OAAO,CAACa,OAAD,CAAP;AACH;AACJ,KAND;AAOH,GARM,CAAP;AASH,CAVD",
      "sourceRoot": "/home/hunan/Desktop/Instigate/Web-Storage/web-storage/backend/Node/models",
      "sourcesContent": [
        "import {connection} from './mysqlConnection'\nimport mysql from 'mysql'\n\nmodule.exports.getProducts = function (data) {\n    return new Promise((resolve, reject) => {\n        \n        if (data.startDate === undefined) {\n            console.log(\"sssss\")\n        }\n        let insertQuery = \"select name, count(name) as count from (select * from SaledProducts where saledDate BETWEEN ? AND ? ) as dd group by name order by count desc\";\n        let query = mysql.format(insertQuery, [data.startDate, data.endDate]);\n        connection.query(query, function (error, results) {\n            if (error) {\n                reject(error);\n                console.log(error)\n            } else {\n                console.log(results)\n                resolve(results);\n            }\n        });\n    });\n}\nmodule.exports.getProductsByProfitability = function (data) {\n    return new Promise((resolve, reject) => {\n        if (data) {\n            console.log(\"sssss\")\n        }\n        let insertQuery = \"select name,price * count(name) as  summary, count(name) as count from (select * from SaledProducts where saledDate BETWEEN ? AND ? ) as dd group by name, price order by summary desc\";\n        let query = mysql.format(insertQuery, [data.startDate, data.endDate]);\n        console.log(query)\n        connection.query(query, function (error, results) {\n            if (error) {\n                reject(error);\n                console.log(error)\n            } else {\n                console.log(results)\n                resolve(results);\n            }\n        });\n    });\n}\nmodule.exports.getProviders = function () {\n    return new Promise((resolve, reject) => {\n        connection.query('SELECT * FROM SaledProducts', function (error, results) {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(results);\n            }\n        });\n    });\n}\nmodule.exports.getShops = function () {\n    return new Promise((resolve, reject) => {\n        connection.query('SELECT * FROM Shops', function (error, results) {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(results);\n            }\n        });\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1583358999262
  }
}